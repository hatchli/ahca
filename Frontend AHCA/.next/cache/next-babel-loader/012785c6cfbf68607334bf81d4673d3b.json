{"ast":null,"code":"import _parseFloat from \"@babel/runtime-corejs2/core-js/parse-float\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport { Query, Mutation } from \"react-apollo\";\nimport { CURRENT_USER_QUERY } from \"./User\";\nimport gql from \"graphql-tag\";\nimport { Label, Input, Select, Textarea, Radio, Checkbox } from \"@rebass/forms\";\nimport { Box, Flex, Button, Card, Image, Heading, Text } from \"rebass\";\nimport Head from \"next/head\";\nimport TakeMyMoney from \"./TakeMyMoney\";\nconst UPDATE_PHONE_ADDRESS = gql`\n  mutation UPDATE_PHONE_ADDRESS(\n    $name: String!\n    $address: String!\n    $postal: String!\n    $phone: String!\n    $email: String!\n  ) {\n    updatePhoneAddress(\n      name: $name\n      address: $address\n      postal: $postal\n      phone: $phone\n      email: $email\n    ) {\n      id\n    }\n  }\n`;\n\nclass updatePhoneAddress extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      name: \"\",\n      address: \"\",\n      postal: \"\",\n      email: \"\",\n      phone: \"\",\n      checkout: false\n    });\n\n    _defineProperty(this, \"handleChange\", e => {\n      const {\n        name,\n        type,\n        value\n      } = e.target;\n      const val = type === \"number\" ? _parseFloat(value) : value;\n      this.setState({\n        [name]: val\n      });\n\n      if (this.state.name !== \"\" && this.state.address !== \"\" && this.state.postal !== \"\" && this.state.email !== \"\" && this.state.phone !== \"\") {\n        this.setState({\n          checkout: true\n        });\n      }\n\n      if (this.state.name == \"\" || this.state.address == \"\" || this.state.postal == \"\" || this.state.email == \"\" || this.state.phone == \"\") {\n        this.setState({\n          checkout: false\n        });\n      }\n    });\n  }\n\n  render() {\n    const maround = 0;\n    const pleft = 0;\n    const wconst = [1, 3 / 4];\n    const fconst = [1, 2];\n    const myconst = [2]; // const hconst = [7, 2];\n    // const [county] = this.props;\n\n    return __jsx(React.Fragment, null, __jsx(Query, {\n      query: CURRENT_USER_QUERY\n    }, ({\n      data,\n      loading\n    }) => {\n      return __jsx(Mutation, {\n        mutation: UPDATE_PHONE_ADDRESS,\n        variables: this.state\n      }, (updatePhoneAddress, {\n        loading,\n        error\n      }) => {\n        return __jsx(Box, {\n          as: \"form\",\n          onSubmit: async e => {\n            e.preventDefault();\n            const res = await updatePhoneAddress();\n            console.log(res);\n          },\n          pl: pleft,\n          py: 3,\n          fontSize: fconst\n        }, __jsx(Flex, {\n          alignItems: \"center\",\n          justifyContent: \"center\"\n        }, __jsx(Box, {\n          alignItems: \"center\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          width: \"100%\"\n        }, __jsx(Heading, {\n          fontSize: [3, 5]\n        }), __jsx(Box, {\n          width: wconst,\n          mx: maround,\n          pl: pleft,\n          my: myconst\n        }, __jsx(Input, {\n          required: true,\n          id: \"name\",\n          name: \"name\",\n          type: \"text\",\n          placeholder: \"Name\",\n          value: this.state.name,\n          onChange: async e => {\n            this.handleChange(e);\n          }\n        })), __jsx(Box, {\n          width: wconst,\n          mx: maround,\n          my: myconst\n        }, __jsx(Input, {\n          required: true,\n          id: \"phone\",\n          name: \"phone\",\n          type: \"text\",\n          placeholder: \"Phone\",\n          value: this.state.phone,\n          onChange: async e => {\n            this.handleChange(e);\n          }\n        })), __jsx(Box, {\n          width: wconst,\n          mx: maround,\n          my: myconst\n        }, __jsx(Input, {\n          required: true,\n          id: \"email\",\n          name: \"email\",\n          type: \"text\",\n          placeholder: \"Email\",\n          value: this.state.email,\n          onChange: async e => {\n            this.handleChange(e);\n          }\n        })), __jsx(Box, {\n          width: wconst,\n          mx: maround,\n          my: myconst\n        }, __jsx(Input, {\n          required: true,\n          id: \"address\",\n          name: \"address\",\n          type: \"text\",\n          placeholder: \"Address\",\n          value: this.state.address,\n          onChange: async e => {\n            this.handleChange(e);\n          }\n        })), __jsx(Box, {\n          width: wconst,\n          mx: maround,\n          my: myconst\n        }, __jsx(Input, {\n          required: true,\n          id: \"postal\",\n          name: \"postal\",\n          type: \"text\",\n          placeholder: \"Zip Code\",\n          value: this.state.postal,\n          onChange: async e => {\n            this.handleChange(e);\n          }\n        })), this.state.checkout ? __jsx(Button, {\n          type: \"submit\",\n          bg: \"dark-green\",\n          width: wconst,\n          mx: maround,\n          my: myconst\n        }, __jsx(TakeMyMoney, null, \"Proceed to Checkout\")) : __jsx(Button, {\n          disabled: true,\n          type: \"submit\",\n          bg: \"dark-gray\",\n          width: wconst,\n          mx: maround,\n          my: myconst\n        }, \"Proceed to Checkout\"))));\n      });\n    }));\n  }\n\n}\n\nexport default updatePhoneAddress;","map":null,"metadata":{},"sourceType":"module"}