{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _parseFloat from \"@babel/runtime-corejs2/core-js/parse-float\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Users\\\\Wade\\\\Documents\\\\AHCA Web\\\\Frontend AHCA\\\\components\\\\LocationCard.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation UPDATE_PHONE_LOCATION(\\n    $name: String\\n    $location: String\\n    $phone: String\\n    $email: String\\n  ) {\\n    updatePhoneLocation(\\n      name: $name\\n      location: $location\\n      phone: $phone\\n      email: $email\\n    ) {\\n      id\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from \"react\";\nimport wait from \"waait\";\nimport { Mutation, withApollo } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport { Label, Input, Select, Textarea, Radio, Checkbox } from \"@rebass/forms\";\nimport { Box, Flex, Button, Card, Image, Heading, Text } from \"rebass\";\nvar UPDATE_PHONE_LOCATION = gql(_templateObject());\n\nvar LocationCard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LocationCard, _Component);\n\n  function LocationCard() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, LocationCard);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(LocationCard)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      name: \"\",\n      location: \"\",\n      phone: \"\",\n      email: \"\"\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (e) {\n      var _e$target = e.target,\n          name = _e$target.name,\n          type = _e$target.type,\n          value = _e$target.value;\n      var val = type === \"number\" ? _parseFloat(value) : value;\n\n      _this.setState(_defineProperty({}, name, val));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleUpdateLocation\", function () {\n      var event = new Event(\"input\", {\n        bubbles: true\n      });\n\n      _this.myinput.dispatchEvent(event);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChangeLocation\", function () {\n      _this.props.client.mutate({\n        mutation: UPDATE_PHONE_LOCATION,\n        variables: {\n          location: location\n        }\n      });\n\n      console.log(_this.state.location);\n      console.log(\"handleChangeLocation called\");\n    });\n\n    return _this;\n  }\n\n  _createClass(LocationCard, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this2 = this;\n\n      if (this.props.county !== prevProps.county) {\n        this.setState(function (prevState) {\n          return _objectSpread({}, prevState, {\n            location: _this2.props.county\n          });\n        });\n        console.log(this.state.location);\n        this.handleChangeLocation();\n        console.log(this.state.location);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var maround = [1, 3];\n      var pleft = [0, 1, 2, 3];\n      var wconst = [1, 1 / 4]; // const [county] = this.props;\n\n      return __jsx(Mutation, {\n        mutation: UPDATE_PHONE_LOCATION,\n        variables: this.state,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, function (updatePhoneLocation, _ref) {\n        var loading = _ref.loading,\n            error = _ref.error;\n        return __jsx(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, __jsx(Box, {\n          as: \"form\",\n          onSubmit: function _callee(e) {\n            var res;\n            return _regeneratorRuntime.async(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    e.preventDefault();\n                    console.log(\"submitted\");\n                    _context.next = 4;\n                    return _regeneratorRuntime.awrap(updatePhoneLocation());\n\n                  case 4:\n                    res = _context.sent;\n                    console.log(\"res\", res);\n\n                  case 6:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            });\n          },\n          pl: pleft,\n          py: 3,\n          width: 1,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, __jsx(Heading, {\n          pcolor: \"near-black\",\n          fontSize: [4, 5, 6],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, \"Are we in your neighboorhood?\"), __jsx(Flex, {\n          flexWrap: \"wrap\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, __jsx(Box, {\n          width: wconst,\n          mx: maround,\n          pl: pleft,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }, __jsx(Label, {\n          htmlFor: \"name\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, \"Name\"), __jsx(Input, {\n          id: \"name\",\n          name: \"name\",\n          type: \"text\",\n          placeholder: \"Name\",\n          value: _this3.state.name,\n          onChange: function _callee2(e) {\n            var res;\n            return _regeneratorRuntime.async(function _callee2$(_context2) {\n              while (1) {\n                switch (_context2.prev = _context2.next) {\n                  case 0:\n                    _this3.handleChange(e);\n\n                    _context2.next = 3;\n                    return _regeneratorRuntime.awrap(wait(3000));\n\n                  case 3:\n                    _context2.next = 5;\n                    return _regeneratorRuntime.awrap(updatePhoneLocation());\n\n                  case 5:\n                    res = _context2.sent;\n                    console.log(res);\n\n                  case 7:\n                  case \"end\":\n                    return _context2.stop();\n                }\n              }\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        })), __jsx(Box, {\n          width: wconst,\n          mx: maround,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, __jsx(Label, {\n          htmlFor: \"name\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }, \"Phone\"), __jsx(Input, {\n          id: \"phone\",\n          name: \"phone\",\n          type: \"text\",\n          placeholder: \"Phone\",\n          value: _this3.state.phone,\n          onChange: function _callee3(e) {\n            var res;\n            return _regeneratorRuntime.async(function _callee3$(_context3) {\n              while (1) {\n                switch (_context3.prev = _context3.next) {\n                  case 0:\n                    _this3.handleChange(e);\n\n                    _context3.next = 3;\n                    return _regeneratorRuntime.awrap(wait(3000));\n\n                  case 3:\n                    _context3.next = 5;\n                    return _regeneratorRuntime.awrap(updatePhoneLocation());\n\n                  case 5:\n                    res = _context3.sent;\n                    console.log(res);\n\n                  case 7:\n                  case \"end\":\n                    return _context3.stop();\n                }\n              }\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        })), __jsx(Box, {\n          width: wconst,\n          mx: maround,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        }, __jsx(Label, {\n          htmlFor: \"location\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          },\n          __self: this\n        }, \"Location\"), __jsx(Heading, {\n          fontSize: [3, 4, 5],\n          color: \"near-black\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          },\n          __self: this\n        }, _this3.props.county))), __jsx(Flex, {\n          mx: -2,\n          flexWrap: \"wrap\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }, __jsx(Box, {\n          p: 2,\n          ml: \"[3, 4, 5, 6]\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        }, __jsx(Button, {\n          type: \"submit\",\n          bg: \"dark-green\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }, \"Submit\")))));\n      });\n    }\n  }]);\n\n  return LocationCard;\n}(Component);\n\nexport default withApollo(LocationCard);","map":{"version":3,"sources":["C:/Users/Wade/Documents/AHCA Web/Frontend AHCA/components/LocationCard.js"],"names":["React","Component","wait","Mutation","withApollo","gql","Label","Input","Select","Textarea","Radio","Checkbox","Box","Flex","Button","Card","Image","Heading","Text","UPDATE_PHONE_LOCATION","LocationCard","name","location","phone","email","e","target","type","value","val","setState","event","Event","bubbles","myinput","dispatchEvent","props","client","mutate","mutation","variables","console","log","state","prevProps","prevState","county","handleChangeLocation","maround","pleft","wconst","updatePhoneLocation","loading","error","preventDefault","res","handleChange"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport wait from \"waait\";\r\nimport { Mutation, withApollo } from \"react-apollo\";\r\nimport gql from \"graphql-tag\";\r\nimport { Label, Input, Select, Textarea, Radio, Checkbox } from \"@rebass/forms\";\r\nimport { Box, Flex, Button, Card, Image, Heading, Text } from \"rebass\";\r\n\r\nconst UPDATE_PHONE_LOCATION = gql`\r\n  mutation UPDATE_PHONE_LOCATION(\r\n    $name: String\r\n    $location: String\r\n    $phone: String\r\n    $email: String\r\n  ) {\r\n    updatePhoneLocation(\r\n      name: $name\r\n      location: $location\r\n      phone: $phone\r\n      email: $email\r\n    ) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nclass LocationCard extends Component {\r\n  state = {\r\n    name: \"\",\r\n    location: \"\",\r\n    phone: \"\",\r\n    email: \"\"\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.props.county !== prevProps.county) {\r\n      this.setState(prevState => ({\r\n        ...prevState,\r\n        location: this.props.county\r\n      }));\r\n      console.log(this.state.location);\r\n      this.handleChangeLocation();\r\n      console.log(this.state.location);\r\n    }\r\n  }\r\n\r\n  handleChange = e => {\r\n    const { name, type, value } = e.target;\r\n    const val = type === \"number\" ? parseFloat(value) : value;\r\n    this.setState({ [name]: val });\r\n  };\r\n\r\n  handleUpdateLocation = () => {\r\n    var event = new Event(\"input\", { bubbles: true });\r\n    this.myinput.dispatchEvent(event);\r\n  };\r\n\r\n  render() {\r\n    const maround = [1, 3];\r\n    const pleft = [0, 1, 2, 3];\r\n    const wconst = [1, 1 / 4];\r\n    // const [county] = this.props;\r\n    return (\r\n      <Mutation mutation={UPDATE_PHONE_LOCATION} variables={this.state}>\r\n        {(updatePhoneLocation, { loading, error }) => {\r\n          return (\r\n            <div>\r\n              <Box\r\n                as=\"form\"\r\n                onSubmit={async e => {\r\n                  e.preventDefault();\r\n                  console.log(\"submitted\");\r\n                  const res = await updatePhoneLocation();\r\n                  console.log(\"res\", res);\r\n                }}\r\n                pl={pleft}\r\n                py={3}\r\n                width={1}\r\n              >\r\n                <Heading pcolor=\"near-black\" fontSize={[4, 5, 6]}>\r\n                  Are we in your neighboorhood?\r\n                </Heading>\r\n                <Flex flexWrap=\"wrap\">\r\n                  <Box width={wconst} mx={maround} pl={pleft}>\r\n                    <Label htmlFor=\"name\">Name</Label>\r\n                    <Input\r\n                      id=\"name\"\r\n                      name=\"name\"\r\n                      type=\"text\"\r\n                      placeholder=\"Name\"\r\n                      value={this.state.name}\r\n                      onChange={async e => {\r\n                        this.handleChange(e);\r\n                        await wait(3000);\r\n                        const res = await updatePhoneLocation();\r\n                        console.log(res);\r\n                      }}\r\n                    />\r\n                  </Box>\r\n                  <Box width={wconst} mx={maround}>\r\n                    <Label htmlFor=\"name\">Phone</Label>\r\n                    <Input\r\n                      id=\"phone\"\r\n                      name=\"phone\"\r\n                      type=\"text\"\r\n                      placeholder=\"Phone\"\r\n                      value={this.state.phone}\r\n                      onChange={async e => {\r\n                        this.handleChange(e);\r\n                        await wait(3000);\r\n                        const res = await updatePhoneLocation();\r\n                        console.log(res);\r\n                      }}\r\n                    />\r\n                  </Box>\r\n                  <Box width={wconst} mx={maround}>\r\n                    <Label htmlFor=\"location\">Location</Label>\r\n                    <Heading fontSize={[3, 4, 5]} color=\"near-black\">\r\n                      {this.props.county}\r\n                    </Heading>\r\n                  </Box>\r\n                </Flex>\r\n                <Flex mx={-2} flexWrap=\"wrap\">\r\n                  <Box p={2} ml=\"[3, 4, 5, 6]\">\r\n                    <Button type=\"submit\" bg=\"dark-green\">\r\n                      Submit\r\n                    </Button>\r\n                  </Box>\r\n                </Flex>\r\n              </Box>\r\n            </div>\r\n          );\r\n        }}\r\n      </Mutation>\r\n    );\r\n  }\r\n  handleChangeLocation = () => {\r\n    this.props.client.mutate({\r\n      mutation: UPDATE_PHONE_LOCATION,\r\n      variables: { location }\r\n    });\r\n    console.log(this.state.location);\r\n    console.log(\"handleChangeLocation called\");\r\n  };\r\n}\r\n\r\nexport default withApollo(LocationCard);\r\n"]},"metadata":{},"sourceType":"module"}