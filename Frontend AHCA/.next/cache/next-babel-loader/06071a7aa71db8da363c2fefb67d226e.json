{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Wade\\\\Documents\\\\AHCA Web\\\\Frontend AHCA\\\\components\\\\OrderList.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { Query } from \"react-apollo\";\nimport { formatDistance } from \"date-fns\";\nimport parseISO from \"date-fns/parseISO\";\nimport gql from \"graphql-tag\";\nimport Link from \"next/link\";\nimport styled from \"styled-components\";\nimport formatMoney from \"../lib/formatMoney\";\nimport OrderItemStyles from \"./styles/OrderItemStyles\";\nimport Error from \"./ErrorMessage\";\nimport WidthStyles from \"./styles/WidthStyles\";\nconst USER_ORDERS_QUERY = gql`\n  query USER_ORDERS_QUERY {\n    orders(orderBy: createdAt_DESC) {\n      id\n      total\n      createdAt\n      items {\n        id\n        title\n        price\n        description\n        quantity\n        image\n      }\n    }\n  }\n`;\nconst OrderUl = styled.ul.withConfig({\n  displayName: \"OrderList__OrderUl\",\n  componentId: \"rwafy5-0\"\n})([\"display:grid;grid-gap:4rem;grid-template-columns:repeat(auto-fit,minmax(40%,1fr));\"]);\nexport default class OrderList extends React.Component {\n  render() {\n    return __jsx(WidthStyles, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, __jsx(Query, {\n      query: USER_ORDERS_QUERY,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, ({\n      data\n    }) => {\n      const orders = data ? data.orders : null;\n      const loading = data ? data.loading : null;\n      const error = data ? data.error : null;\n      if (loading) return __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"Loading...\");\n      if (error) return __jsx(Error, {\n        error: error,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      });\n      return __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, __jsx(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"You have \", orders.length != null ? orders.length : 0, \" orders\"), __jsx(OrderUl, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, orders.map(order => __jsx(OrderItemStyles, {\n        key: order.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, __jsx(Link, {\n        href: {\n          pathname: \"/order\",\n          query: {\n            id: order.id\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, __jsx(\"a\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"order-meta\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, order.items.reduce((item, tally) => item + tally.quantity, 0), \" \", \"Items\"), __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, order.items.length, \" Products\"), __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, formatDistance(parseISO(order.createdAt), new Date())), __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, formatMoney(order.total))), __jsx(\"div\", {\n        className: \"images\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, order.items.map(item => __jsx(\"img\", {\n        key: item.id,\n        src: item.image,\n        alt: item.itlte,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      })), \" \")))))));\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Wade/Documents/AHCA Web/Frontend AHCA/components/OrderList.js"],"names":["React","Query","formatDistance","parseISO","gql","Link","styled","formatMoney","OrderItemStyles","Error","WidthStyles","USER_ORDERS_QUERY","OrderUl","ul","OrderList","Component","render","data","orders","loading","error","length","map","order","id","pathname","query","items","reduce","item","tally","quantity","createdAt","Date","total","image","itlte"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Query } from \"react-apollo\";\r\nimport { formatDistance } from \"date-fns\";\r\nimport parseISO from \"date-fns/parseISO\";\r\nimport gql from \"graphql-tag\";\r\nimport Link from \"next/link\";\r\nimport styled from \"styled-components\";\r\nimport formatMoney from \"../lib/formatMoney\";\r\nimport OrderItemStyles from \"./styles/OrderItemStyles\";\r\nimport Error from \"./ErrorMessage\";\r\nimport WidthStyles from \"./styles/WidthStyles\";\r\n\r\nconst USER_ORDERS_QUERY = gql`\r\n  query USER_ORDERS_QUERY {\r\n    orders(orderBy: createdAt_DESC) {\r\n      id\r\n      total\r\n      createdAt\r\n      items {\r\n        id\r\n        title\r\n        price\r\n        description\r\n        quantity\r\n        image\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst OrderUl = styled.ul`\r\n  display: grid;\r\n  grid-gap: 4rem;\r\n  grid-template-columns: repeat(auto-fit, minmax(40%, 1fr));\r\n`;\r\n\r\nexport default class OrderList extends React.Component {\r\n  render() {\r\n    return (\r\n      <WidthStyles>\r\n        <Query query={USER_ORDERS_QUERY}>\r\n          {({ data }) => {\r\n            const orders = data ? data.orders : null;\r\n            const loading = data ? data.loading : null;\r\n            const error = data ? data.error : null;\r\n            if (loading) return <p>Loading...</p>;\r\n            if (error) return <Error error={error} />;\r\n            return (\r\n              <div>\r\n                <h2>\r\n                  You have {orders.length != null ? orders.length : 0} orders\r\n                </h2>\r\n                <OrderUl>\r\n                  {orders.map(order => (\r\n                    <OrderItemStyles key={order.id}>\r\n                      <Link\r\n                        href={{\r\n                          pathname: \"/order\",\r\n                          query: { id: order.id }\r\n                        }}\r\n                      >\r\n                        <a>\r\n                          <div className=\"order-meta\">\r\n                            <p>\r\n                              {order.items.reduce(\r\n                                (item, tally) => item + tally.quantity,\r\n                                0\r\n                              )}{\" \"}\r\n                              Items\r\n                            </p>\r\n                            <p>{order.items.length} Products</p>\r\n                            <p>\r\n                              {formatDistance(\r\n                                parseISO(order.createdAt),\r\n                                new Date()\r\n                              )}\r\n                            </p>\r\n                            <p>{formatMoney(order.total)}</p>\r\n                          </div>\r\n                          <div className=\"images\">\r\n                            {order.items.map(item => (\r\n                              <img\r\n                                key={item.id}\r\n                                src={item.image}\r\n                                alt={item.itlte}\r\n                              />\r\n                            ))}{\" \"}\r\n                          </div>\r\n                        </a>\r\n                      </Link>\r\n                    </OrderItemStyles>\r\n                  ))}\r\n                </OrderUl>\r\n              </div>\r\n            );\r\n          }}\r\n        </Query>\r\n      </WidthStyles>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}