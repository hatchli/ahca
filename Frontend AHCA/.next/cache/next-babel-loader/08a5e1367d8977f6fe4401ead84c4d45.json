{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Wade\\\\Documents\\\\AHCA Web\\\\Frontend AHCA\\\\components\\\\Items.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport styled from \"styled-components\";\nimport Item2 from \"./Item2\";\nimport Pagination from \"./Pagination\";\nimport { perPage } from \"../config\";\nimport { Flex, Image, Box, Header, Text, Link } from \"rebass\";\nconst ALL_ITEMS_QUERY = gql`\n  query ALL_ITEMS_QUERY($skip: Int = 0, $first: Int = ${perPage}) {\n    items(first: $first, skip: $skip, orderBy: createdAt_DESC) {\n      id\n      title\n      price\n      description\n      image\n      largeImage\n      image1\n      largeImage1\n      image2\n      largeImage2\n    }\n  }\n`;\nconst Center = styled.div.withConfig({\n  displayName: \"Items__Center\",\n  componentId: \"tikday-0\"\n})([\"text-align:center;\"]);\nexport default class Items extends Component {\n  render() {\n    return __jsx(Center, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, __jsx(Pagination, {\n      page: this.props.page,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }), __jsx(Flex, {\n      justifyContent: \"center\",\n      mx: -2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, __jsx(Query, {\n      query: ALL_ITEMS_QUERY,\n      variables: {\n        skip: this.props.page * perPage - perPage // first: perPage\n\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, ({\n      data,\n      error,\n      loading\n    }) => {\n      if (loading) return __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"Loading...\");\n      if (error) return __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"Error: \", error.message);\n      return __jsx(Box, {\n        width: [1, 1 / 3],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, data.items.map((item, index) => __jsx(Item2, {\n        item: item,\n        key: item.id,\n        index: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      })));\n    })), __jsx(Pagination, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }));\n  }\n\n}\nexport { ALL_ITEMS_QUERY };","map":{"version":3,"sources":["C:/Users/Wade/Documents/AHCA Web/Frontend AHCA/components/Items.js"],"names":["React","Component","Query","gql","styled","Item2","Pagination","perPage","Flex","Image","Box","Header","Text","Link","ALL_ITEMS_QUERY","Center","div","Items","render","props","page","skip","data","error","loading","message","items","map","item","index","id"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,GAAtB,EAA2BC,MAA3B,EAAmCC,IAAnC,EAAyCC,IAAzC,QAAqD,QAArD;AAEA,MAAMC,eAAe,GAAGX,GAAI;wDAC4BI,OAAQ;;;;;;;;;;;;;;CADhE;AAiBA,MAAMQ,MAAM,GAAGX,MAAM,CAACY,GAAV;AAAA;AAAA;AAAA,0BAAZ;AAIA,eAAe,MAAMC,KAAN,SAAoBhB,SAApB,CAA8B;AAC3CiB,EAAAA,MAAM,GAAG;AACP,WACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,UAAD;AAAY,MAAA,IAAI,EAAE,KAAKC,KAAL,CAAWC,IAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,MAAC,IAAD;AAAM,MAAA,cAAc,EAAC,QAArB;AAA8B,MAAA,EAAE,EAAE,CAAC,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,KAAD;AACE,MAAA,KAAK,EAAEN,eADT;AAEE,MAAA,SAAS,EAAE;AACTO,QAAAA,IAAI,EAAE,KAAKF,KAAL,CAAWC,IAAX,GAAkBb,OAAlB,GAA4BA,OADzB,CAET;;AAFS,OAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOG,CAAC;AAAEe,MAAAA,IAAF;AAAQC,MAAAA,KAAR;AAAeC,MAAAA;AAAf,KAAD,KAA8B;AAC7B,UAAIA,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACb,UAAID,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAWA,KAAK,CAACE,OAAjB,CAAP;AACX,aACE,MAAC,GAAD;AAAK,QAAA,KAAK,EAAE,CAAC,CAAD,EAAI,IAAI,CAAR,CAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGH,IAAI,CAACI,KAAL,CAAWC,GAAX,CAAe,CAACC,IAAD,EAAOC,KAAP,KACd,MAAC,KAAD;AAAO,QAAA,IAAI,EAAED,IAAb;AAAmB,QAAA,GAAG,EAAEA,IAAI,CAACE,EAA7B;AAAiC,QAAA,KAAK,EAAED,KAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,CADH,CADF;AAOD,KAjBH,CADF,CAFF,EAuBE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAvBF,CADF;AA2BD;;AA7B0C;AAgC7C,SAASf,eAAT","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Query } from \"react-apollo\";\r\nimport gql from \"graphql-tag\";\r\nimport styled from \"styled-components\";\r\nimport Item2 from \"./Item2\";\r\nimport Pagination from \"./Pagination\";\r\nimport { perPage } from \"../config\";\r\nimport { Flex, Image, Box, Header, Text, Link } from \"rebass\";\r\n\r\nconst ALL_ITEMS_QUERY = gql`\r\n  query ALL_ITEMS_QUERY($skip: Int = 0, $first: Int = ${perPage}) {\r\n    items(first: $first, skip: $skip, orderBy: createdAt_DESC) {\r\n      id\r\n      title\r\n      price\r\n      description\r\n      image\r\n      largeImage\r\n      image1\r\n      largeImage1\r\n      image2\r\n      largeImage2\r\n    }\r\n  }\r\n`;\r\n\r\nconst Center = styled.div`\r\n  text-align: center;\r\n`;\r\n\r\nexport default class Items extends Component {\r\n  render() {\r\n    return (\r\n      <Center>\r\n        <Pagination page={this.props.page} />\r\n        <Flex justifyContent=\"center\" mx={-2}>\r\n          <Query\r\n            query={ALL_ITEMS_QUERY}\r\n            variables={{\r\n              skip: this.props.page * perPage - perPage\r\n              // first: perPage\r\n            }}\r\n          >\r\n            {({ data, error, loading }) => {\r\n              if (loading) return <p>Loading...</p>;\r\n              if (error) return <p>Error: {error.message}</p>;\r\n              return (\r\n                <Box width={[1, 1 / 3]}>\r\n                  {data.items.map((item, index) => (\r\n                    <Item2 item={item} key={item.id} index={index} />\r\n                  ))}\r\n                </Box>\r\n              );\r\n            }}\r\n          </Query>\r\n        </Flex>\r\n        <Pagination />\r\n      </Center>\r\n    );\r\n  }\r\n}\r\n\r\nexport { ALL_ITEMS_QUERY };\r\n"]},"metadata":{},"sourceType":"module"}