{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Wade\\\\Documents\\\\AHCA Web\\\\Frontend AHCA\\\\components\\\\Cart.js\",\n    _this = this;\n\nvar __jsx = React.createElement;\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation {\\n    toggleCart @client\\n  }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  query {\\n    cartOpen @client\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation UPDATE_PHONE_ADDRESS(\\n    $name: String\\n    $address: String\\n    $postal: String\\n    $phone: String\\n    $email: String\\n  ) {\\n    updatePhoneAddress(\\n      name: $name\\n      address: $address\\n      postal: $postal\\n      phone: $phone\\n      email: $email\\n    ) {\\n      id\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from \"react\";\nimport { Query, Mutation } from \"react-apollo\";\nimport User from \"./User\";\nimport gql from \"graphql-tag\";\nimport CartStyles from \"./styles/CartStyles\";\nimport Supreme from \"./styles/Supreme\";\nimport CloseButton from \"./styles/CloseButton\";\nimport SickButton from \"./styles/SickButton\";\nimport CartItem from \"./CartItem\";\nimport calcTotalPrice from \"../lib/calcTotalPrice\";\nimport formatMoney from \"../lib/formatMoney\";\nimport { adopt } from \"react-adopt\";\nimport TakeMyMoney from \"./TakeMyMoney\";\nimport SignUpButton from \"./SignUpButton\";\nvar UPDATE_PHONE_ADDRESS = gql(_templateObject());\nvar LOCAL_STATE_QUERY = gql(_templateObject2());\nvar TOGGLE_CART_MUTATION = gql(_templateObject3());\nvar Composed = adopt({\n  user: function user(_ref) {\n    var render = _ref.render;\n    return __jsx(User, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, render);\n  },\n  // cartItem: ({ render }) => <CartItem>{render}</CartItem>,\n  toggleCart: function toggleCart(_ref2) {\n    var render = _ref2.render;\n    return __jsx(Mutation, {\n      mutation: TOGGLE_CART_MUTATION,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, render);\n  },\n  localState: function localState(_ref3) {\n    var render = _ref3.render;\n    return __jsx(Query, {\n      query: LOCAL_STATE_QUERY,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, render);\n  }\n});\n\nvar Cart = function Cart(props, _ref4) {\n  var item = _ref4.item;\n\n  var _useState = useState(\"\"),\n      nameState = _useState[0],\n      setNameState = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      addressState = _useState2[0],\n      setAddressState = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      postalState = _useState3[0],\n      setPostalState = _useState3[1];\n\n  var _useState4 = useState(\"\"),\n      phoneState = _useState4[0],\n      setPhoneState = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      emailState = _useState5[0],\n      setEmailState = _useState5[1];\n\n  return __jsx(Composed, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, function (_ref5) {\n    var user = _ref5.user,\n        toggleCart = _ref5.toggleCart,\n        localState = _ref5.localState;\n    console.log(\"user.data\", user.data);\n    var me = user.data ? user.data.me : null;\n    if (!me) return null;\n    setNameState(me === null || me === void 0 ? void 0 : me.name);\n    setAddressState(me === null || me === void 0 ? void 0 : me.address);\n    setPostalState(me === null || me === void 0 ? void 0 : me.postal);\n    setPhoneState(me === null || me === void 0 ? void 0 : me.phone);\n    setEmailState(me === null || me === void 0 ? void 0 : me.email);\n    return __jsx(CartStyles, {\n      open: localState.data.cartOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, __jsx(\"header\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, __jsx(CloseButton, {\n      onClick: toggleCart,\n      title: \"close\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"\\xD7\"), me.permissions.includes(\"GUEST\") ? __jsx(Supreme, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Guest Cart\") : __jsx(Supreme, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, me.name, \"'s Cart\"), __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"You have \", me.cart.length, \" item\", me.cart.length === 1 ? \"\" : \"s\", \" in your cart\")), __jsx(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, me.cart.map(function (cartItem) {\n      return __jsx(React.Fragment, null, __jsx(CartItem, {\n        key: cartItem.id,\n        cartItem: cartItem,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }));\n    })), __jsx(\"footer\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, formatMoney(calcTotalPrice(me.cart))), me.cart.length ? __jsx(TakeMyMoney, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, __jsx(SickButton, {\n      disabled: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Checkout\")) : me.permissions.includes(\"GUEST\") ? __jsx(SickButton, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, __jsx(SignUpButton, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Register\")) : __jsx(TakeMyMoney, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, __jsx(SickButton, {\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Checkout\"))));\n  });\n};\n\nhandleUpdatePhoneAddress = function handleUpdatePhoneAddress() {\n  return _regeneratorRuntime.async(function handleUpdatePhoneAddress$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _this.props.client.mutate({\n            mutation: UPDATE_PHONE_ADDRESS,\n            variables: (nameState, addressState, postalState, phoneState, emailState)\n          });\n\n        case 1:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default withApollo(Cart);\nexport { LOCAL_STATE_QUERY, TOGGLE_CART_MUTATION };","map":{"version":3,"sources":["C:/Users/Wade/Documents/AHCA Web/Frontend AHCA/components/Cart.js"],"names":["React","useState","Query","Mutation","User","gql","CartStyles","Supreme","CloseButton","SickButton","CartItem","calcTotalPrice","formatMoney","adopt","TakeMyMoney","SignUpButton","UPDATE_PHONE_ADDRESS","LOCAL_STATE_QUERY","TOGGLE_CART_MUTATION","Composed","user","render","toggleCart","localState","Cart","props","item","nameState","setNameState","addressState","setAddressState","postalState","setPostalState","phoneState","setPhoneState","emailState","setEmailState","console","log","data","me","name","address","postal","phone","email","cartOpen","permissions","includes","cart","length","map","cartItem","id","handleUpdatePhoneAddress","client","mutate","mutation","variables","withApollo"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Query, Mutation } from \"react-apollo\";\r\nimport User from \"./User\";\r\nimport gql from \"graphql-tag\";\r\nimport CartStyles from \"./styles/CartStyles\";\r\nimport Supreme from \"./styles/Supreme\";\r\nimport CloseButton from \"./styles/CloseButton\";\r\nimport SickButton from \"./styles/SickButton\";\r\nimport CartItem from \"./CartItem\";\r\nimport calcTotalPrice from \"../lib/calcTotalPrice\";\r\nimport formatMoney from \"../lib/formatMoney\";\r\nimport { adopt } from \"react-adopt\";\r\nimport TakeMyMoney from \"./TakeMyMoney\";\r\nimport SignUpButton from \"./SignUpButton\";\r\n\r\nconst UPDATE_PHONE_ADDRESS = gql`\r\n  mutation UPDATE_PHONE_ADDRESS(\r\n    $name: String\r\n    $address: String\r\n    $postal: String\r\n    $phone: String\r\n    $email: String\r\n  ) {\r\n    updatePhoneAddress(\r\n      name: $name\r\n      address: $address\r\n      postal: $postal\r\n      phone: $phone\r\n      email: $email\r\n    ) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nconst LOCAL_STATE_QUERY = gql`\r\n  query {\r\n    cartOpen @client\r\n  }\r\n`;\r\n\r\nconst TOGGLE_CART_MUTATION = gql`\r\n  mutation {\r\n    toggleCart @client\r\n  }\r\n`;\r\n\r\nconst Composed = adopt({\r\n  user: ({ render }) => <User>{render}</User>,\r\n  // cartItem: ({ render }) => <CartItem>{render}</CartItem>,\r\n  toggleCart: ({ render }) => (\r\n    <Mutation mutation={TOGGLE_CART_MUTATION}>{render}</Mutation>\r\n  ),\r\n  localState: ({ render }) => <Query query={LOCAL_STATE_QUERY}>{render}</Query>\r\n});\r\n\r\nconst Cart = (props, { item }) => {\r\n  const [nameState, setNameState] = useState(\"\");\r\n  const [addressState, setAddressState] = useState(\"\");\r\n  const [postalState, setPostalState] = useState(\"\");\r\n  const [phoneState, setPhoneState] = useState(\"\");\r\n  const [emailState, setEmailState] = useState(\"\");\r\n  return (\r\n    <Composed>\r\n      {({ user, toggleCart, localState }) => {\r\n        console.log(\"user.data\", user.data);\r\n        const me = user.data ? user.data.me : null;\r\n        if (!me) return null;\r\n        setNameState(me?.name);\r\n        setAddressState(me?.address);\r\n        setPostalState(me?.postal);\r\n        setPhoneState(me?.phone);\r\n        setEmailState(me?.email);\r\n        return (\r\n          <CartStyles open={localState.data.cartOpen}>\r\n            <header>\r\n              <CloseButton onClick={toggleCart} title=\"close\">\r\n                &times;\r\n              </CloseButton>\r\n              {me.permissions.includes(\"GUEST\") ? (\r\n                <Supreme>Guest Cart</Supreme>\r\n              ) : (\r\n                <Supreme>{me.name}'s Cart</Supreme>\r\n              )}\r\n              <p>\r\n                You have {me.cart.length} item\r\n                {me.cart.length === 1 ? \"\" : \"s\"} in your cart\r\n              </p>\r\n            </header>\r\n            <ul>\r\n              {me.cart.map(cartItem => (\r\n                <>\r\n                  <CartItem key={cartItem.id} cartItem={cartItem} />\r\n                </>\r\n              ))}\r\n            </ul>\r\n            <footer>\r\n              <p>{formatMoney(calcTotalPrice(me.cart))}</p>\r\n\r\n              {me.cart.length ? (\r\n                <TakeMyMoney>\r\n                  <SickButton disabled={false}>Checkout</SickButton>\r\n                </TakeMyMoney>\r\n              ) : me.permissions.includes(\"GUEST\") ? (\r\n                <SickButton>\r\n                  <SignUpButton>Register</SignUpButton>\r\n                </SickButton>\r\n              ) : (\r\n                <TakeMyMoney>\r\n                  <SickButton disabled={true}>Checkout</SickButton>\r\n                </TakeMyMoney>\r\n              )}\r\n            </footer>\r\n          </CartStyles>\r\n        );\r\n      }}\r\n    </Composed>\r\n  );\r\n};\r\n\r\nhandleUpdatePhoneAddress = async () => {\r\n  this.props.client.mutate({\r\n    mutation: UPDATE_PHONE_ADDRESS,\r\n    variables: (nameState, addressState, postalState, phoneState, emailState)\r\n  });\r\n};\r\n\r\nexport default withApollo(Cart);\r\nexport { LOCAL_STATE_QUERY, TOGGLE_CART_MUTATION };\r\n"]},"metadata":{},"sourceType":"module"}