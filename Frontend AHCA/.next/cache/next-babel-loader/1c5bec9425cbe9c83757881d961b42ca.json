{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport { Mutation } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport Form from \"./styles/Form\";\nimport Error from \"./ErrorMessage\";\nimport { CURRENT_USER_QUERY } from \"./User\";\nconst RESET_MUTATION = gql`\n  mutation RESET_MUTATION(\n    $resetToken: String!\n    $password: String!\n    $confirmPassword: String!\n  ) {\n    resetPassword(\n      resetToken: $resetToken\n      password: $password\n      confirmPassword: $confirmPassword\n    ) {\n      id\n      email\n      name\n    }\n  }\n`;\nexport default class Reset extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      password: \"\",\n      confirmPassword: \"\"\n    });\n\n    _defineProperty(this, \"saveToState\", e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    });\n  }\n\n  render() {\n    return __jsx(Mutation, {\n      mutation: RESET_MUTATION,\n      variables: {\n        resetToken: this.props.resetToken,\n        password: this.state.password,\n        confirmPassword: this.state.confirmPassword\n      },\n      refetchQueries: [{\n        query: CURRENT_USER_QUERY\n      }]\n    }, (reset, {\n      error,\n      loading,\n      called\n    }) => {\n      return __jsx(Form, {\n        method: \"post\",\n        onSubmit: async e => {\n          e.preventDefault();\n          await reset();\n          this.setState({\n            password: \"\",\n            confirmPassword: \"\"\n          });\n        }\n      }, __jsx(\"fieldset\", {\n        disabled: loading,\n        \"aria-busy\": loading\n      }, __jsx(\"h2\", null, \"Reset Your Password\"), __jsx(Error, {\n        error: error\n      }), __jsx(\"label\", {\n        htmlFor: \"password\"\n      }, \"Password\", __jsx(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        placeholder: \"password\",\n        value: this.state.password,\n        onChange: this.saveToState\n      })), __jsx(\"label\", {\n        htmlFor: \"confirmPassword\"\n      }, \"Confirm Password\", __jsx(\"input\", {\n        type: \"password\",\n        name: \"confirmPassword\",\n        placeholder: \"Confirm Password\",\n        value: this.state.confirmPassword,\n        onChange: this.saveToState\n      })), __jsx(\"button\", {\n        type: \"submit\"\n      }, \"Reset!\")));\n    });\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}