{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation updatePriceAfterPromoCode($id: ID!, $promotion: String!) {\\n    updatePriceAfterPromoCode(id: $id, promotion: $promotion) {\\n      id\\n      promotionPrice\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from \"react\";\nimport { Query, Mutation } from \"react-apollo\";\nimport { CURRENT_USER_QUERY } from \"./User\";\nimport gql from \"graphql-tag\";\nimport { Label, Input, Select, Textarea, Radio, Checkbox } from \"@rebass/forms\";\nimport { Flex, Heading, Box, Button } from \"rebass\";\nimport Error from \"./ErrorMessage\";\nvar VALIDATE_APPLY_PROMO_CODE = gql(_templateObject());\n\nvar PromoCode = function PromoCode(props) {\n  var _useState = useState(\"\"),\n      promoState = _useState[0],\n      setPromoState = _useState[1];\n\n  var maround = [1, 3];\n  var pleft = [0, 1, 2, 3];\n  var wconst = [1, 3 / 4];\n  console.log(props);\n  return __jsx(React.Fragment, null, __jsx(Query, {\n    query: CURRENT_USER_QUERY\n  }, function (_ref) {\n    var data = _ref.data,\n        loading = _ref.loading;\n    return __jsx(Mutation, {\n      mutation: VALIDATE_APPLY_PROMO_CODE,\n      variables: {\n        id: props.id,\n        promotion: promoState\n      },\n      refetchQueries: [{\n        query: CURRENT_USER_QUERY\n      }]\n    }, function (updatePriceAfterPromoCode, _ref2) {\n      var loading = _ref2.loading,\n          error = _ref2.error;\n      return __jsx(Box, {\n        as: \"form\",\n        onSubmit: function _callee(e) {\n          var res;\n          return _regeneratorRuntime.async(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  e.preventDefault();\n                  _context.next = 3;\n                  return _regeneratorRuntime.awrap(updatePriceAfterPromoCode());\n\n                case 3:\n                  res = _context.sent;\n\n                case 4:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          });\n        } // pl={pleft}\n        // py={3}\n        ,\n        ml: -2,\n        width: 1\n      }, __jsx(Flex, {\n        flexDirection: \"row\",\n        alignItems: true\n      }, __jsx(Box, {\n        width: 1 / 2,\n        mx: maround,\n        pl: 0\n      }, __jsx(Input, {\n        id: \"promo\",\n        name: \"promo\",\n        type: \"text\",\n        placeholder: \"Promo Code\",\n        value: promoState,\n        onChange: function _callee2(e) {\n          return _regeneratorRuntime.async(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  setPromoState(e.target.value);\n\n                case 1:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          });\n        }\n      })), __jsx(Box, {\n        width: 1 / 8\n      }, __jsx(Button, {\n        type: \"submit\",\n        bg: \"dark-green\"\n      }, \"Submit\"))), __jsx(Error, {\n        error: error\n      }));\n    });\n  }));\n};\n\nexport default PromoCode;","map":null,"metadata":{},"sourceType":"module"}