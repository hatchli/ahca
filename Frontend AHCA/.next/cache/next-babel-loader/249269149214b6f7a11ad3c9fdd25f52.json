{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Users\\\\Wade\\\\Documents\\\\AHCA Web\\\\Frontend AHCA\\\\components\\\\Map.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation UPDATE_PHONE_LOCATION(\\n    $name: String\\n    $location: String\\n    $phone: String\\n    $email: String\\n  ) {\\n    updatePhoneLocation(\\n      name: $name\\n      location: $location\\n      phone: $phone\\n      email: $email\\n    ) {\\n      id\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from \"react\";\nimport { Mutation } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport MapGL, { LinearInterpolator, GeolocateControl } from \"react-map-gl\";\nimport WebMercatorViewport from \"viewport-mercator-project\";\nimport bbox from \"@turf/bbox\";\nimport ControlPanel from \"./ControlPanel\";\nimport MAP_STYLE from \"./styles/MapStyles\";\nimport { Box, Flex } from \"rebass\"; // import MAP_STYLE from 'https://api.mapbox.com/styles/v1/mapbox/light-v9.html?title=false&access_token=pk.eyJ1IjoibXNsZWUiLCJhIjoiclpiTWV5SSJ9.P_h8r37vD8jpIH1A6i1VRg#7.75/33.997/-116.72'\n\nimport LocationCard from \"./LocationCard\";\nvar TOKEN = \"pk.eyJ1Ijoid2xlZXMiLCJhIjoiY2s0YnBoZDQzMGZ6bjNudXFiMmkwbHRsMCJ9.vej5vu3WZhr9AEHiNPrVow\"; // Set your mapbox token here\n\nvar geolocateStyle = {\n  position: \"absolute\",\n  top: 0,\n  left: 0,\n  margin: 10\n};\nvar UPDATE_PHONE_LOCATION = gql(_templateObject());\n\nvar Map =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Map, _Component);\n\n  function Map(props) {\n    var _this;\n\n    _classCallCheck(this, Map);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Map).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"_updateViewport\", function (viewport) {\n      _this.setState({\n        viewport: viewport\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onClick\", function (event) {\n      var countyName = \"\";\n      var clickInfo = null;\n      var county = event.features[0];\n      var feature = event.features[0];\n\n      if (county) {\n        clickInfo = {\n          lngLat: event.lngLat,\n          county: county.properties\n        };\n        countyName = clickInfo.county.name;\n      }\n\n      if (feature) {\n        // calculate the bounding box of the feature\n        var _bbox = bbox(feature),\n            _bbox2 = _slicedToArray(_bbox, 4),\n            minLng = _bbox2[0],\n            minLat = _bbox2[1],\n            maxLng = _bbox2[2],\n            maxLat = _bbox2[3]; // construct a viewport instance from the current state\n\n\n        var viewport = new WebMercatorViewport(_this.state.viewport);\n\n        var _viewport$fitBounds = viewport.fitBounds([[minLng, minLat], [maxLng, maxLat]], {\n          padding: 40\n        }),\n            longitude = _viewport$fitBounds.longitude,\n            latitude = _viewport$fitBounds.latitude,\n            zoom = _viewport$fitBounds.zoom;\n\n        console.log(zoom);\n\n        _this.setState({\n          county: countyName,\n          clickInfo: clickInfo,\n          viewport: _objectSpread({}, _this.state.viewport, {\n            longitude: longitude,\n            latitude: latitude,\n            zoom: zoom,\n            transitionInterpolator: new LinearInterpolator({\n              around: [event.offsetCenter.x, event.offsetCenter.y]\n            }),\n            transitionDuration: 1000\n          })\n        });\n      }\n    });\n\n    _this.state = {\n      county: \"Select Your Location on the Map!\",\n      viewport: {\n        latitude: 34.0537,\n        longitude: -118.243,\n        zoom: 7,\n        bearing: 0,\n        pitch: 0\n      },\n      popupInfo: null,\n      clickInfo: null\n    };\n    _this._map = React.createRef();\n    return _this;\n  }\n\n  _createClass(Map, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var viewport = this.state.viewport;\n      var clickInfo = this.state.clickInfo;\n      var county = this.state.county;\n      var minZoom = 6;\n      return __jsx(Mutation, {\n        mutation: UPDATE_PHONE_LOCATION,\n        variables: this.state,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, function (updatePhoneLocation, _ref) {\n        var loading = _ref.loading,\n            error = _ref.error;\n        return __jsx(Flex, {\n          flexWrap: \"wrap\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }, __jsx(Box, {\n          width: [1, 1, 1 / 2],\n          minHeight: \"300px\",\n          minWidth: \"300px\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }, __jsx(MapGL, _extends({\n          ref: _this2._map,\n          mapStyle: MAP_STYLE,\n          interactiveLayerIds: [\"sf-neighborhoods-fill\"]\n        }, viewport, {\n          width: \"100%\",\n          height: \"100%\",\n          minZoom: minZoom,\n          minHeight: \"1vh\",\n          minWidth: \"1vh\",\n          onClick: _this2._onClick,\n          county: county // countyInfo={}\n          ,\n          onViewportChange: _this2._updateViewport,\n          mapboxApiAccessToken: TOKEN,\n          onTransitionEnd: function _callee() {\n            var res;\n            return _regeneratorRuntime.async(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    console.log(\"onchange called\");\n                    _context.next = 3;\n                    return _regeneratorRuntime.awrap(updatePhoneLocation());\n\n                  case 3:\n                    res = _context.sent;\n                    console.log(res);\n\n                  case 5:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        }), __jsx(ControlPanel, {\n          containerComponent: _this2.props.containerComponent,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144\n          },\n          __self: this\n        }), __jsx(GeolocateControl, {\n          style: geolocateStyle,\n          positionOptions: {\n            enableHighAccuracy: true\n          },\n          trackUserLocation: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147\n          },\n          __self: this\n        }))), __jsx(Box, {\n          px: 3,\n          width: [1, 1, 1 / 2],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154\n          },\n          __self: this\n        }, __jsx(LocationCard, {\n          county: county,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155\n          },\n          __self: this\n        })));\n      });\n    }\n  }]);\n\n  return Map;\n}(Component);\n\nexport { Map as default };","map":{"version":3,"sources":["C:/Users/Wade/Documents/AHCA Web/Frontend AHCA/components/Map.js"],"names":["React","Component","Mutation","gql","MapGL","LinearInterpolator","GeolocateControl","WebMercatorViewport","bbox","ControlPanel","MAP_STYLE","Box","Flex","LocationCard","TOKEN","geolocateStyle","position","top","left","margin","UPDATE_PHONE_LOCATION","Map","props","viewport","setState","event","countyName","clickInfo","county","features","feature","lngLat","properties","name","minLng","minLat","maxLng","maxLat","state","fitBounds","padding","longitude","latitude","zoom","console","log","transitionInterpolator","around","offsetCenter","x","y","transitionDuration","bearing","pitch","popupInfo","_map","createRef","minZoom","updatePhoneLocation","loading","error","_onClick","_updateViewport","res","containerComponent","enableHighAccuracy"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Mutation } from \"react-apollo\";\r\nimport gql from \"graphql-tag\";\r\nimport MapGL, { LinearInterpolator, GeolocateControl } from \"react-map-gl\";\r\nimport WebMercatorViewport from \"viewport-mercator-project\";\r\nimport bbox from \"@turf/bbox\";\r\n\r\nimport ControlPanel from \"./ControlPanel\";\r\nimport MAP_STYLE from \"./styles/MapStyles\";\r\nimport { Box, Flex } from \"rebass\";\r\n// import MAP_STYLE from 'https://api.mapbox.com/styles/v1/mapbox/light-v9.html?title=false&access_token=pk.eyJ1IjoibXNsZWUiLCJhIjoiclpiTWV5SSJ9.P_h8r37vD8jpIH1A6i1VRg#7.75/33.997/-116.72'\r\nimport LocationCard from \"./LocationCard\";\r\n\r\nconst TOKEN =\r\n  \"pk.eyJ1Ijoid2xlZXMiLCJhIjoiY2s0YnBoZDQzMGZ6bjNudXFiMmkwbHRsMCJ9.vej5vu3WZhr9AEHiNPrVow\"; // Set your mapbox token here\r\n\r\nconst geolocateStyle = {\r\n  position: \"absolute\",\r\n  top: 0,\r\n  left: 0,\r\n  margin: 10\r\n};\r\n\r\nconst UPDATE_PHONE_LOCATION = gql`\r\n  mutation UPDATE_PHONE_LOCATION(\r\n    $name: String\r\n    $location: String\r\n    $phone: String\r\n    $email: String\r\n  ) {\r\n    updatePhoneLocation(\r\n      name: $name\r\n      location: $location\r\n      phone: $phone\r\n      email: $email\r\n    ) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nexport default class Map extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      county: \"Select Your Location on the Map!\",\r\n      viewport: {\r\n        latitude: 34.0537,\r\n        longitude: -118.243,\r\n        zoom: 7,\r\n        bearing: 0,\r\n        pitch: 0\r\n      },\r\n      popupInfo: null,\r\n      clickInfo: null\r\n    };\r\n\r\n    this._map = React.createRef();\r\n  }\r\n\r\n  _updateViewport = viewport => {\r\n    this.setState({ viewport });\r\n  };\r\n\r\n  _onClick = event => {\r\n    let countyName = \"\";\r\n    let clickInfo = null;\r\n    let county = event.features[0];\r\n    let feature = event.features[0];\r\n\r\n    if (county) {\r\n      clickInfo = {\r\n        lngLat: event.lngLat,\r\n        county: county.properties\r\n      };\r\n      countyName = clickInfo.county.name;\r\n    }\r\n    if (feature) {\r\n      // calculate the bounding box of the feature\r\n      const [minLng, minLat, maxLng, maxLat] = bbox(feature);\r\n      // construct a viewport instance from the current state\r\n      const viewport = new WebMercatorViewport(this.state.viewport);\r\n      const { longitude, latitude, zoom } = viewport.fitBounds(\r\n        [\r\n          [minLng, minLat],\r\n          [maxLng, maxLat]\r\n        ],\r\n        {\r\n          padding: 40\r\n        }\r\n      );\r\n      console.log(zoom);\r\n\r\n      this.setState({\r\n        county: countyName,\r\n        clickInfo,\r\n        viewport: {\r\n          ...this.state.viewport,\r\n          longitude,\r\n          latitude,\r\n          zoom,\r\n          transitionInterpolator: new LinearInterpolator({\r\n            around: [event.offsetCenter.x, event.offsetCenter.y]\r\n          }),\r\n          transitionDuration: 1000\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { viewport } = this.state;\r\n    const { clickInfo } = this.state;\r\n    const { county } = this.state;\r\n    let minZoom = 6;\r\n\r\n    return (\r\n      <Mutation mutation={UPDATE_PHONE_LOCATION} variables={this.state}>\r\n        {(updatePhoneLocation, { loading, error }) => {\r\n          return (\r\n            <Flex flexWrap=\"wrap\">\r\n              <Box width={[1, 1, 1 / 2]} minHeight=\"300px\" minWidth=\"300px\">\r\n                <MapGL\r\n                  ref={this._map}\r\n                  mapStyle={MAP_STYLE}\r\n                  interactiveLayerIds={[\"sf-neighborhoods-fill\"]}\r\n                  {...viewport}\r\n                  width=\"100%\"\r\n                  height=\"100%\"\r\n                  minZoom={minZoom}\r\n                  minHeight=\"1vh\"\r\n                  minWidth=\"1vh\"\r\n                  onClick={this._onClick}\r\n                  county={county}\r\n                  // countyInfo={}\r\n                  onViewportChange={this._updateViewport}\r\n                  mapboxApiAccessToken={TOKEN}\r\n                  onTransitionEnd={async () => {\r\n                    console.log(\"onchange called\");\r\n                    const res = await updatePhoneLocation();\r\n                    console.log(res);\r\n                  }}\r\n                >\r\n                  <ControlPanel\r\n                    containerComponent={this.props.containerComponent}\r\n                  />\r\n                  <GeolocateControl\r\n                    style={geolocateStyle}\r\n                    positionOptions={{ enableHighAccuracy: true }}\r\n                    trackUserLocation={true}\r\n                  />\r\n                </MapGL>\r\n              </Box>\r\n              <Box px={3} width={[1, 1, 1 / 2]}>\r\n                <LocationCard county={county} />\r\n              </Box>\r\n            </Flex>\r\n          );\r\n        }}\r\n      </Mutation>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}