{"ast":null,"code":"import _parseFloat from \"@babel/runtime-corejs2/core-js/parse-float\";\nvar _jsxFileName = \"C:\\\\Users\\\\Wade\\\\Documents\\\\AHCA Web\\\\Frontend AHCA\\\\pages\\\\shop.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport Items from \"../components/Items\";\nimport { Mutation } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport { CURRENT_USER_QUERY } from \"../components/User\";\nimport User from \"../components/User\";\nconst CREATE_GUEST_MUTATION = gql`\n  mutation CREATE_GUEST_MUTATION(\n    $email: String\n    $name: String\n    $password: String\n  ) {\n    createGuest(email: $email, name: $name, password: $password) {\n      id\n      email\n      name\n    }\n  }\n`;\n\nconst Shop = (props, {\n  id\n}) => __jsx(User, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23\n  },\n  __self: this\n}, ({\n  data\n}) => {\n  let me = data ? data.me : null;\n  let guest = me === null ? true : false;\n  const {\n    0: guestState,\n    1: setGuestState\n  } = useState(false);\n  return !guest ? __jsx(React.Fragment, null, __jsx(Items, {\n    page: _parseFloat(props.query.page) || 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  })) : __jsx(Mutation, {\n    mutation: CREATE_GUEST_MUTATION,\n    variables: {\n      id\n    },\n    refetchQueries: [{\n      query: CURRENT_USER_QUERY\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, (createGuest, {\n    loading,\n    error\n  }) => {\n    {\n      () => {\n        setGuestState(true);\n      };\n    }\n    return __jsx(React.Fragment, null, __jsx(Items, {\n      page: _parseFloat(props.query.page) || 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }));\n  });\n});\n\nexport default Shop;","map":{"version":3,"sources":["C:/Users/Wade/Documents/AHCA Web/Frontend AHCA/pages/shop.js"],"names":["React","useState","useEffect","Items","Mutation","gql","CURRENT_USER_QUERY","User","CREATE_GUEST_MUTATION","Shop","props","id","data","me","guest","guestState","setGuestState","query","page","createGuest","loading","error"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,kBAAT,QAAmC,oBAAnC;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AAEA,MAAMC,qBAAqB,GAAGH,GAAI;;;;;;;;;;;;CAAlC;;AAcA,MAAMI,IAAI,GAAG,CAACC,KAAD,EAAQ;AAAEC,EAAAA;AAAF,CAAR,KACX,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AACb,MAAIC,EAAE,GAAGD,IAAI,GAAGA,IAAI,CAACC,EAAR,GAAa,IAA1B;AACA,MAAIC,KAAK,GAAGD,EAAE,KAAK,IAAP,GAAc,IAAd,GAAqB,KAAjC;AACA,QAAM;AAAA,OAACE,UAAD;AAAA,OAAaC;AAAb,MAA8Bf,QAAQ,CAAC,KAAD,CAA5C;AACA,SAAO,CAACa,KAAD,GACL,4BACE,MAAC,KAAD;AAAO,IAAA,IAAI,EAAE,YAAWJ,KAAK,CAACO,KAAN,CAAYC,IAAvB,KAAgC,CAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADK,GAKL,MAAC,QAAD;AACE,IAAA,QAAQ,EAAEV,qBADZ;AAEE,IAAA,SAAS,EAAE;AAAEG,MAAAA;AAAF,KAFb;AAGE,IAAA,cAAc,EAAE,CAAC;AAAEM,MAAAA,KAAK,EAAEX;AAAT,KAAD,CAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKG,CAACa,WAAD,EAAc;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAAd,KAAqC;AACpC;AACE,YAAM;AACJL,QAAAA,aAAa,CAAC,IAAD,CAAb;AACD,OAFD;AAGD;AACD,WACE,4BACE,MAAC,KAAD;AAAO,MAAA,IAAI,EAAE,YAAWN,KAAK,CAACO,KAAN,CAAYC,IAAvB,KAAgC,CAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD,GAhBH,CALF;AAwBD,CA7BH,CADF;;AAkCA,eAAeT,IAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Items from \"../components/Items\";\r\nimport { Mutation } from \"react-apollo\";\r\nimport gql from \"graphql-tag\";\r\nimport { CURRENT_USER_QUERY } from \"../components/User\";\r\nimport User from \"../components/User\";\r\n\r\nconst CREATE_GUEST_MUTATION = gql`\r\n  mutation CREATE_GUEST_MUTATION(\r\n    $email: String\r\n    $name: String\r\n    $password: String\r\n  ) {\r\n    createGuest(email: $email, name: $name, password: $password) {\r\n      id\r\n      email\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\nconst Shop = (props, { id }) => (\r\n  <User>\r\n    {({ data }) => {\r\n      let me = data ? data.me : null;\r\n      let guest = me === null ? true : false;\r\n      const [guestState, setGuestState] = useState(false);\r\n      return !guest ? (\r\n        <>\r\n          <Items page={parseFloat(props.query.page) || 1} />\r\n        </>\r\n      ) : (\r\n        <Mutation\r\n          mutation={CREATE_GUEST_MUTATION}\r\n          variables={{ id }}\r\n          refetchQueries={[{ query: CURRENT_USER_QUERY }]}\r\n        >\r\n          {(createGuest, { loading, error }) => {\r\n            {\r\n              () => {\r\n                setGuestState(true);\r\n              };\r\n            }\r\n            return (\r\n              <>\r\n                <Items page={parseFloat(props.query.page) || 1} />\r\n              </>\r\n            );\r\n          }}\r\n        </Mutation>\r\n      );\r\n    }}\r\n  </User>\r\n);\r\n\r\nexport default Shop;\r\n"]},"metadata":{},"sourceType":"module"}