{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\Users\\\\Wade\\\\Documents\\\\AHCA Web\\\\Frontend AHCA\\\\components\\\\SignUpButton.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport Popup from \"reactjs-popup\";\nimport CloseButton from \"./styles/CloseButton\";\nimport SignUp from \"./SignUp\";\nimport SignIn from \"./SignIn\";\nimport { Label, Input, Select, Textarea, Radio, Checkbox } from \"@rebass/forms\";\nimport { Box, Flex, Button, Card, Image, Heading, Text } from \"rebass\";\nimport styled from \"styled-components\";\nconst StyledPopup = styled((_ref) => {\n  let {\n    className\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"className\"]);\n\n  return __jsx(Popup, _extends({\n    contentStyle: className\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }));\n}).withConfig({\n  displayName: \"SignUpButton__StyledPopup\",\n  componentId: \"sc-7z357x-0\"\n})([\"left:0;\"]);\nconst PopUpStyle = styled.div.withConfig({\n  displayName: \"SignUpButton__PopUpStyle\",\n  componentId: \"sc-7z357x-1\"\n})([\".popup-content{position:relative;background:rgb(255,255,255);width:100%;@media (max-width:1000px){width:80%;}@media (min-width:1000px){width:50%;}margin:auto;border:1px solid rgb(187,187,187);padding:5px;}.modal{width:100%;}.close{cursor:pointer;position:absolute;display:block;padding:5px;line-height:20px;text-align:center;right:-5px;top:-10px;background:black;color:white;font-size:3rem;border:0;padding:5px;z-index:2;width:20px;&:before{content:\\\"\\\";width:0px;}&:after{content:\\\"\\\";width:0px;}&:hover,&:focus{outline:none;&:after{width:auto;}@media (max-width:700px){width:auto;}}}.button a{&:before{content:\\\"\\\";width:0px;}&:after{content:\\\"\\\";width:0px;}}\"]);\n\nconst SignUpButton = (props, state) => {\n  const {\n    0: isToggled,\n    1: setToggled\n  } = useState(false);\n\n  __jsx(Popup, {\n    repositionOnResize: true,\n    contentStyle: {\n      width: \"auto\"\n    },\n    trigger: __jsx(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \" \", props.children, \" \"),\n    modal: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, close => __jsx(PopUpStyle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"modal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, __jsx(\"button\", {\n    className: \"close\",\n    onClick: close,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"\\xD7\"), __jsx(\"div\", {\n    className: \"content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, !isToggled && __jsx(SignUp, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }), isToggled && __jsx(SignIn, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }), __jsx(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    onClick: () => setToggled(!isToggled),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"Already have an account?\")), __jsx(\"div\", {\n    className: \"actions\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, __jsx(Popup, {\n    trigger: __jsx(\"button\", {\n      className: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Trigger \"),\n    position: \"top center\",\n    closeOnDocumentClick: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }))))));\n};\n\nexport default SignUpButton;","map":{"version":3,"sources":["C:/Users/Wade/Documents/AHCA Web/Frontend AHCA/components/SignUpButton.js"],"names":["React","useState","useEffect","Popup","CloseButton","SignUp","SignIn","Label","Input","Select","Textarea","Radio","Checkbox","Box","Flex","Button","Card","Image","Heading","Text","styled","StyledPopup","className","props","PopUpStyle","div","SignUpButton","state","isToggled","setToggled","width","children","close"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,KAAT,EAAgBC,KAAhB,EAAuBC,MAAvB,EAA+BC,QAA/B,EAAyCC,KAAzC,EAAgDC,QAAhD,QAAgE,eAAhE;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,MAApB,EAA4BC,IAA5B,EAAkCC,KAAlC,EAAyCC,OAAzC,EAAkDC,IAAlD,QAA8D,QAA9D;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,WAAW,GAAGD,MAAM,CAAC;AAAA,MAAC;AAAEE,IAAAA;AAAF,GAAD;AAAA,MAAiBC,KAAjB;;AAAA,SACzB,MAAC,KAAD;AAAO,IAAA,YAAY,EAAED;AAArB,KAAoCC,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADyB;AAAA,CAAD,CAAT;AAAA;AAAA;AAAA,eAAjB;AAMA,MAAMC,UAAU,GAAGJ,MAAM,CAACK,GAAV;AAAA;AAAA;AAAA,6pBAAhB;;AAkEA,MAAMC,YAAY,GAAG,CAACH,KAAD,EAAQI,KAAR,KAAkB;AACrC,QAAM;AAAA,OAACC,SAAD;AAAA,OAAYC;AAAZ,MAA0B5B,QAAQ,CAAC,KAAD,CAAxC;;AACA,QAAC,KAAD;AACE,IAAA,kBAAkB,EAAE,IADtB;AAEE,IAAA,YAAY,EAAE;AAAE6B,MAAAA,KAAK,EAAE;AAAT,KAFhB;AAGE,IAAA,OAAO,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAUP,KAAK,CAACQ,QAAhB,MAHX;AAIE,IAAA,KAAK,MAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGC,KAAK,IACJ,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,SAAS,EAAC,OAAlB;AAA0B,IAAA,OAAO,EAAEA,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAKE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACJ,SAAD,IAAc,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADjB,EAEGA,SAAS,IAAI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFhB,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,OAAO,EAAE,MAAMC,UAAU,CAAC,CAACD,SAAF,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADF,CAHF,EAQE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AACE,IAAA,OAAO,EAAE;AAAQ,MAAA,SAAS,EAAC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADX;AAEE,IAAA,QAAQ,EAAC,YAFX;AAGE,IAAA,oBAAoB,MAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CARF,CALF,CADF,CAPJ;AAiCD,CAnCD;;AAqCA,eAAeF,YAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Popup from \"reactjs-popup\";\r\nimport CloseButton from \"./styles/CloseButton\";\r\nimport SignUp from \"./SignUp\";\r\nimport SignIn from \"./SignIn\";\r\nimport { Label, Input, Select, Textarea, Radio, Checkbox } from \"@rebass/forms\";\r\nimport { Box, Flex, Button, Card, Image, Heading, Text } from \"rebass\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledPopup = styled(({ className, ...props }) => (\r\n  <Popup contentStyle={className} {...props} />\r\n))`\r\n  left: 0;\r\n`;\r\n\r\nconst PopUpStyle = styled.div`\r\n  .popup-content {\r\n    position: relative;\r\n    background: rgb(255, 255, 255);\r\n    width: 100%;\r\n    @media (max-width: 1000px) {\r\n      width: 80%;\r\n    }\r\n    @media (min-width: 1000px) {\r\n      width: 50%;\r\n    }\r\n    margin: auto;\r\n    border: 1px solid rgb(187, 187, 187);\r\n    padding: 5px;\r\n  }\r\n  .modal {\r\n    width: 100%;\r\n  }\r\n\r\n  .close {\r\n    cursor: pointer;\r\n    position: absolute;\r\n    display: block;\r\n    padding: 5px;\r\n    line-height: 20px;\r\n    text-align: center;\r\n    right: -5px;\r\n    top: -10px;\r\n    background: black;\r\n    color: white;\r\n    font-size: 3rem;\r\n    border: 0;\r\n    padding: 5px;\r\n    z-index: 2;\r\n    width: 20px;\r\n    &:before {\r\n      content: \"\";\r\n      width: 0px;\r\n    }\r\n    &:after {\r\n      content: \"\";\r\n      width: 0px;\r\n    }\r\n    &:hover,\r\n    &:focus {\r\n      outline: none;\r\n      &:after {\r\n        width: auto;\r\n      }\r\n      @media (max-width: 700px) {\r\n        width: auto;\r\n      }\r\n    }\r\n  }\r\n  .button a {\r\n    &:before {\r\n      content: \"\";\r\n      width: 0px;\r\n    }\r\n    &:after {\r\n      content: \"\";\r\n      width: 0px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst SignUpButton = (props, state) => {\r\n  const [isToggled, setToggled] = useState(false);\r\n  <Popup\r\n    repositionOnResize={true}\r\n    contentStyle={{ width: \"auto\" }}\r\n    trigger={<button> {props.children} </button>}\r\n    modal\r\n  >\r\n    {close => (\r\n      <PopUpStyle>\r\n        <div className=\"modal\">\r\n          <button className=\"close\" onClick={close}>\r\n            &times;\r\n          </button>\r\n\r\n          <div className=\"content\">\r\n            {!isToggled && <SignUp />}\r\n            {isToggled && <SignIn />}\r\n            <h4>\r\n              <a onClick={() => setToggled(!isToggled)}>\r\n                Already have an account?\r\n              </a>\r\n            </h4>\r\n            <div className=\"actions\">\r\n              <Popup\r\n                trigger={<button className=\"button\">Trigger </button>}\r\n                position=\"top center\"\r\n                closeOnDocumentClick\r\n              ></Popup>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </PopUpStyle>\r\n    )}\r\n  </Popup>;\r\n};\r\n\r\nexport default SignUpButton;\r\n"]},"metadata":{},"sourceType":"module"}