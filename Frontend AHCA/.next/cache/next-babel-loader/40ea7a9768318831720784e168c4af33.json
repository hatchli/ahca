{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _parseFloat from \"@babel/runtime-corejs2/core-js/parse-float\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Users\\\\Wade\\\\Documents\\\\AHCA Web\\\\Frontend AHCA\\\\components\\\\LocationCard.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation UPDATE_PHONE_LOCATION(\\n    $name: String\\n    $location: String\\n    $phone: String\\n    $email: String\\n  ) {\\n    updatePhoneLocation(\\n      name: $name\\n      location: $location\\n      phone: $phone\\n      email: $email\\n    ) {\\n      id\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from \"react\";\nimport wait from \"waait\";\nimport { Query, Mutation, withApollo } from \"react-apollo\";\nimport { CURRENT_USER_QUERY } from \"./User\";\nimport gql from \"graphql-tag\";\nimport { Label, Input, Select, Textarea, Radio, Checkbox } from \"@rebass/forms\";\nimport { Box, Flex, Button, Card, Image, Heading, Text } from \"rebass\";\nvar UPDATE_PHONE_LOCATION = gql(_templateObject());\n\nvar LocationCard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LocationCard, _Component);\n\n  function LocationCard() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, LocationCard);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(LocationCard)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      name: \"\",\n      location: \"\",\n      phone: \"\"\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (e) {\n      var _e$target = e.target,\n          name = _e$target.name,\n          type = _e$target.type,\n          value = _e$target.value;\n      var val = type === \"number\" ? _parseFloat(value) : value;\n\n      if (val != \"\") {\n        _this.setState(_defineProperty({}, name, val));\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleUpdateLocation\", function () {\n      var event = new Event(\"input\", {\n        bubbles: true\n      });\n\n      _this.myinput.dispatchEvent(event);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChangeLocation\", function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(wait(300));\n\n            case 2:\n              _this.props.client.mutate({\n                mutation: UPDATE_PHONE_LOCATION,\n                variables: _this.state\n              });\n\n              console.log(_this.state.location);\n              console.log(\"handleChangeLocation called\");\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(LocationCard, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this2 = this;\n\n      if (this.props.county !== prevProps.county && this.props.county !== \"Select Your Location on the Map!\") {\n        this.setState(function (prevState) {\n          return _objectSpread({}, prevState, {\n            location: _this2.props.county\n          });\n        });\n        console.log(this.state.location);\n        this.handleChangeLocation();\n        console.log(this.state.location);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var maround = [1, 3];\n      var pleft = [0, 1, 2, 3];\n      var wconst = [1, 1 / 4]; // const [county] = this.props;\n\n      return __jsx(React.Fragment, null, __jsx(Query, {\n        query: CURRENT_USER_QUERY,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, function (_ref) {\n        var data = _ref.data,\n            loading = _ref.loading;\n        console.log(\"Current User Query\", data.me);\n        return __jsx(Mutation, {\n          mutation: UPDATE_PHONE_LOCATION,\n          variables: _this3.state,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, function (updatePhoneLocation, _ref2) {\n          var loading = _ref2.loading,\n              error = _ref2.error;\n          return __jsx(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 76\n            },\n            __self: this\n          }, __jsx(Box, {\n            as: \"form\",\n            onSubmit: function _callee2(e) {\n              var res;\n              return _regeneratorRuntime.async(function _callee2$(_context2) {\n                while (1) {\n                  switch (_context2.prev = _context2.next) {\n                    case 0:\n                      e.preventDefault();\n                      _context2.next = 3;\n                      return _regeneratorRuntime.awrap(updatePhoneLocation());\n\n                    case 3:\n                      res = _context2.sent;\n\n                    case 4:\n                    case \"end\":\n                      return _context2.stop();\n                  }\n                }\n              });\n            },\n            pl: pleft,\n            py: 3,\n            width: 1,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 77\n            },\n            __self: this\n          }, __jsx(Heading, {\n            pcolor: \"near-black\",\n            fontSize: [4, 5, 6],\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 87\n            },\n            __self: this\n          }, \"Are we in your neighboorhood?\"), __jsx(Flex, {\n            flexWrap: \"wrap\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 90\n            },\n            __self: this\n          }, __jsx(Box, {\n            width: wconst,\n            mx: maround,\n            pl: pleft,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 91\n            },\n            __self: this\n          }, __jsx(Label, {\n            htmlFor: \"name\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 92\n            },\n            __self: this\n          }, \"Name\"), __jsx(Input, {\n            id: \"name\",\n            name: \"name\",\n            type: \"text\",\n            placeholder: \"Name\",\n            value: data.me.name,\n            onChange: function _callee3(e) {\n              var res;\n              return _regeneratorRuntime.async(function _callee3$(_context3) {\n                while (1) {\n                  switch (_context3.prev = _context3.next) {\n                    case 0:\n                      _this3.handleChange(e);\n\n                      _context3.next = 3;\n                      return _regeneratorRuntime.awrap(wait(3000));\n\n                    case 3:\n                      _context3.next = 5;\n                      return _regeneratorRuntime.awrap(updatePhoneLocation());\n\n                    case 5:\n                      res = _context3.sent;\n                      error && alert(error);\n\n                    case 7:\n                    case \"end\":\n                      return _context3.stop();\n                  }\n                }\n              });\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 93\n            },\n            __self: this\n          })), __jsx(Box, {\n            width: wconst,\n            mx: maround,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 109\n            },\n            __self: this\n          }, __jsx(Label, {\n            htmlFor: \"name\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 110\n            },\n            __self: this\n          }, \"Phone\"), __jsx(Input, {\n            id: \"phone\",\n            name: \"phone\",\n            type: \"text\",\n            placeholder: \"Phone\",\n            value: data.me.phone,\n            onChange: function _callee4(e) {\n              var res;\n              return _regeneratorRuntime.async(function _callee4$(_context4) {\n                while (1) {\n                  switch (_context4.prev = _context4.next) {\n                    case 0:\n                      _this3.handleChange(e);\n\n                      _context4.next = 3;\n                      return _regeneratorRuntime.awrap(wait(3000));\n\n                    case 3:\n                      _context4.next = 5;\n                      return _regeneratorRuntime.awrap(updatePhoneLocation());\n\n                    case 5:\n                      res = _context4.sent;\n\n                    case 6:\n                    case \"end\":\n                      return _context4.stop();\n                  }\n                }\n              });\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 111\n            },\n            __self: this\n          })), __jsx(Box, {\n            width: wconst,\n            mx: maround,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 124\n            },\n            __self: this\n          }, __jsx(Label, {\n            htmlFor: \"location\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 125\n            },\n            __self: this\n          }, \"Location\"), _this3.state.location !== \"\" ? __jsx(Heading, {\n            fontSize: [3, 4, 5],\n            color: \"near-black\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 127\n            },\n            __self: this\n          }, _this3.props.county) : __jsx(Heading, {\n            fontSize: [3, 4, 3],\n            color: \"near-black\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 131\n            },\n            __self: this\n          }, _this3.props.county))), __jsx(Flex, {\n            mx: -2,\n            flexWrap: \"wrap\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 137\n            },\n            __self: this\n          }, __jsx(Box, {\n            p: 2,\n            ml: \"[3, 4, 5, 6]\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 138\n            },\n            __self: this\n          }, __jsx(Button, {\n            type: \"submit\",\n            bg: \"dark-green\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 139\n            },\n            __self: this\n          }, \"Submit\")))));\n        });\n      }));\n    }\n  }]);\n\n  return LocationCard;\n}(Component);\n\nexport default withApollo(LocationCard);","map":{"version":3,"sources":["C:/Users/Wade/Documents/AHCA Web/Frontend AHCA/components/LocationCard.js"],"names":["React","Component","wait","Query","Mutation","withApollo","CURRENT_USER_QUERY","gql","Label","Input","Select","Textarea","Radio","Checkbox","Box","Flex","Button","Card","Image","Heading","Text","UPDATE_PHONE_LOCATION","LocationCard","name","location","phone","e","target","type","value","val","setState","event","Event","bubbles","myinput","dispatchEvent","props","client","mutate","mutation","variables","state","console","log","prevProps","prevState","county","handleChangeLocation","maround","pleft","wconst","data","loading","me","updatePhoneLocation","error","preventDefault","res","handleChange","alert"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport wait from \"waait\";\r\nimport { Query, Mutation, withApollo } from \"react-apollo\";\r\nimport { CURRENT_USER_QUERY } from \"./User\";\r\nimport gql from \"graphql-tag\";\r\nimport { Label, Input, Select, Textarea, Radio, Checkbox } from \"@rebass/forms\";\r\nimport { Box, Flex, Button, Card, Image, Heading, Text } from \"rebass\";\r\n\r\nconst UPDATE_PHONE_LOCATION = gql`\r\n  mutation UPDATE_PHONE_LOCATION(\r\n    $name: String\r\n    $location: String\r\n    $phone: String\r\n    $email: String\r\n  ) {\r\n    updatePhoneLocation(\r\n      name: $name\r\n      location: $location\r\n      phone: $phone\r\n      email: $email\r\n    ) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nclass LocationCard extends Component {\r\n  state = {\r\n    name: \"\",\r\n    location: \"\",\r\n    phone: \"\"\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (\r\n      this.props.county !== prevProps.county &&\r\n      this.props.county !== \"Select Your Location on the Map!\"\r\n    ) {\r\n      this.setState(prevState => ({\r\n        ...prevState,\r\n        location: this.props.county\r\n      }));\r\n      console.log(this.state.location);\r\n      this.handleChangeLocation();\r\n      console.log(this.state.location);\r\n    }\r\n  }\r\n\r\n  handleChange = e => {\r\n    const { name, type, value } = e.target;\r\n    const val = type === \"number\" ? parseFloat(value) : value;\r\n    if (val != \"\") {\r\n      this.setState({ [name]: val });\r\n    }\r\n  };\r\n\r\n  handleUpdateLocation = () => {\r\n    var event = new Event(\"input\", { bubbles: true });\r\n    this.myinput.dispatchEvent(event);\r\n  };\r\n  render() {\r\n    const maround = [1, 3];\r\n    const pleft = [0, 1, 2, 3];\r\n    const wconst = [1, 1 / 4];\r\n\r\n    // const [county] = this.props;\r\n    return (\r\n      <>\r\n        <Query query={CURRENT_USER_QUERY}>\r\n          {({ data, loading }) => {\r\n            console.log(\"Current User Query\", data.me);\r\n            return (\r\n              <Mutation mutation={UPDATE_PHONE_LOCATION} variables={this.state}>\r\n                {(updatePhoneLocation, { loading, error }) => {\r\n                  return (\r\n                    <div>\r\n                      <Box\r\n                        as=\"form\"\r\n                        onSubmit={async e => {\r\n                          e.preventDefault();\r\n                          const res = await updatePhoneLocation();\r\n                        }}\r\n                        pl={pleft}\r\n                        py={3}\r\n                        width={1}\r\n                      >\r\n                        <Heading pcolor=\"near-black\" fontSize={[4, 5, 6]}>\r\n                          Are we in your neighboorhood?\r\n                        </Heading>\r\n                        <Flex flexWrap=\"wrap\">\r\n                          <Box width={wconst} mx={maround} pl={pleft}>\r\n                            <Label htmlFor=\"name\">Name</Label>\r\n                            <Input\r\n                              id=\"name\"\r\n                              name=\"name\"\r\n                              type=\"text\"\r\n                              placeholder=\"Name\"\r\n                              value={data.me.name}\r\n                              onChange={async e => {\r\n                                this.handleChange(e);\r\n                                await wait(3000);\r\n                                const res = await updatePhoneLocation();\r\n                                {\r\n                                  error && alert(error);\r\n                                }\r\n                              }}\r\n                            />\r\n                          </Box>\r\n                          <Box width={wconst} mx={maround}>\r\n                            <Label htmlFor=\"name\">Phone</Label>\r\n                            <Input\r\n                              id=\"phone\"\r\n                              name=\"phone\"\r\n                              type=\"text\"\r\n                              placeholder=\"Phone\"\r\n                              value={data.me.phone}\r\n                              onChange={async e => {\r\n                                this.handleChange(e);\r\n                                await wait(3000);\r\n                                const res = await updatePhoneLocation();\r\n                              }}\r\n                            />\r\n                          </Box>\r\n                          <Box width={wconst} mx={maround}>\r\n                            <Label htmlFor=\"location\">Location</Label>\r\n                            {this.state.location !== \"\" ? (\r\n                              <Heading fontSize={[3, 4, 5]} color=\"near-black\">\r\n                                {this.props.county}\r\n                              </Heading>\r\n                            ) : (\r\n                              <Heading fontSize={[3, 4, 3]} color=\"near-black\">\r\n                                {this.props.county}\r\n                              </Heading>\r\n                            )}\r\n                          </Box>\r\n                        </Flex>\r\n                        <Flex mx={-2} flexWrap=\"wrap\">\r\n                          <Box p={2} ml=\"[3, 4, 5, 6]\">\r\n                            <Button type=\"submit\" bg=\"dark-green\">\r\n                              Submit\r\n                            </Button>\r\n                          </Box>\r\n                        </Flex>\r\n                      </Box>\r\n                    </div>\r\n                  );\r\n                }}\r\n              </Mutation>\r\n            );\r\n          }}\r\n        </Query>\r\n      </>\r\n    );\r\n  }\r\n  handleChangeLocation = async () => {\r\n    await wait(300);\r\n    this.props.client.mutate({\r\n      mutation: UPDATE_PHONE_LOCATION,\r\n      variables: this.state\r\n    });\r\n    console.log(this.state.location);\r\n    console.log(\"handleChangeLocation called\");\r\n  };\r\n}\r\n\r\nexport default withApollo(LocationCard);\r\n"]},"metadata":{},"sourceType":"module"}