{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _parseFloat from \"@babel/runtime-corejs2/core-js/parse-float\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Wade\\\\Documents\\\\AHCA Web\\\\Frontend AHCA\\\\components\\\\UpdateItem.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from \"react\";\nimport { Mutation, Query } from \"react-apollo\";\nimport Form from \"./styles/Form\";\nimport formatMoney from \"../lib/formatMoney\";\nimport gql from \"graphql-tag\";\nimport Error from \"./ErrorMessage\";\nimport Router from \"next/router\";\nconst SINGLE_ITEM_QUERY = gql`\n  query SINGLE_ITEM_QUERY($id: ID!) {\n    item(where: { id: $id }) {\n      id\n      title\n      description\n      price\n    }\n  }\n`;\nconst UPDATE_ITEM_MUTATION = gql`\n  mutation UPDATE_ITEM_MUTATION(\n    $id: ID!\n    $title: String\n    $description: String\n    $price: Int\n  ) {\n    updateItem(\n      id: $id\n      title: $title\n      description: $description\n      price: $price #   image: $image #   largeImage: $largeImage\n    ) {\n      id\n      title\n      price\n    }\n  }\n`;\n\nclass UpdateItem extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {});\n\n    _defineProperty(this, \"handleChange\", e => {\n      const {\n        name,\n        type,\n        value\n      } = e.target;\n      const val = type === \"number\" ? _parseFloat(value) : value;\n      this.setState({\n        [name]: val\n      });\n    });\n\n    _defineProperty(this, \"updateItem\", async (e, updateItemMutation) => {\n      e.preventDefault();\n      console.log(\"Updating Item\");\n      console.log(this.state);\n      const res = await updateItemMutation({\n        variables: _objectSpread({\n          id: this.props.id\n        }, this.state)\n      });\n      console.log(\"updated!\");\n    });\n  }\n\n  render() {\n    return __jsx(Query, {\n      query: SINGLE_ITEM_QUERY,\n      variables: {\n        id: this.props.id\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, ({\n      data,\n      loading\n    }) => {\n      if (loading) return __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"Loading...\");\n      if (!data.item) return __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"No Item Found for ID \", this.props.id);\n      return __jsx(Mutation, {\n        mutation: UPDATE_ITEM_MUTATION,\n        variables: this.state,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, (updateItem, {\n        loading,\n        error\n      }) => __jsx(Form, {\n        onSubmit: e => this.updateItem(e, updateItem),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, __jsx(Error, {\n        error: error,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }), __jsx(\"fieldset\", {\n        disabled: loading,\n        \"aria-busy\": loading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, __jsx(\"label\", {\n        htmlFor: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Title\", __jsx(\"input\", {\n        type: \"text\",\n        id: \"title\",\n        name: \"title\",\n        placeholder: \"Title\",\n        required: true,\n        defaultValue: data.item.title,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      })), __jsx(\"label\", {\n        htmlFor: \"description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"Description\", __jsx(\"textarea\", {\n        id: \"description\",\n        name: \"description\",\n        placeholder: \"Enter a description\",\n        required: true,\n        defaultValue: data.item.description,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      })), __jsx(\"label\", {\n        htmlFor: \"price\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"Price\", __jsx(\"input\", {\n        type: \"number\",\n        id: \"price\",\n        name: \"price\",\n        placeholder: \"Price\",\n        required: true,\n        defaultValue: data.item.price,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      })), __jsx(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"Sav\", loading ? \"ing\" : \"e\", \" Changes\"))));\n    });\n  }\n\n}\n\nexport default UpdateItem;\nexport { UPDATE_ITEM_MUTATION };","map":{"version":3,"sources":["C:/Users/Wade/Documents/AHCA Web/Frontend AHCA/components/UpdateItem.js"],"names":["React","Component","Mutation","Query","Form","formatMoney","gql","Error","Router","SINGLE_ITEM_QUERY","UPDATE_ITEM_MUTATION","UpdateItem","e","name","type","value","target","val","setState","updateItemMutation","preventDefault","console","log","state","res","variables","id","props","render","data","loading","item","updateItem","error","title","handleChange","description","price"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Mutation, Query } from \"react-apollo\";\r\nimport Form from \"./styles/Form\";\r\nimport formatMoney from \"../lib/formatMoney\";\r\nimport gql from \"graphql-tag\";\r\nimport Error from \"./ErrorMessage\";\r\nimport Router from \"next/router\";\r\n\r\nconst SINGLE_ITEM_QUERY = gql`\r\n  query SINGLE_ITEM_QUERY($id: ID!) {\r\n    item(where: { id: $id }) {\r\n      id\r\n      title\r\n      description\r\n      price\r\n    }\r\n  }\r\n`;\r\n\r\nconst UPDATE_ITEM_MUTATION = gql`\r\n  mutation UPDATE_ITEM_MUTATION(\r\n    $id: ID!\r\n    $title: String\r\n    $description: String\r\n    $price: Int\r\n  ) {\r\n    updateItem(\r\n      id: $id\r\n      title: $title\r\n      description: $description\r\n      price: $price #   image: $image #   largeImage: $largeImage\r\n    ) {\r\n      id\r\n      title\r\n      price\r\n    }\r\n  }\r\n`;\r\n\r\nclass UpdateItem extends Component {\r\n  state = {};\r\n\r\n  handleChange = e => {\r\n    const { name, type, value } = e.target;\r\n    const val = type === \"number\" ? parseFloat(value) : value;\r\n    this.setState({ [name]: val });\r\n  };\r\n\r\n  updateItem = async (e, updateItemMutation) => {\r\n    e.preventDefault();\r\n    console.log(\"Updating Item\");\r\n    console.log(this.state);\r\n    const res = await updateItemMutation({\r\n      variables: {\r\n        id: this.props.id,\r\n        ...this.state\r\n      }\r\n    });\r\n    console.log(\"updated!\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Query\r\n        query={SINGLE_ITEM_QUERY}\r\n        variables={{\r\n          id: this.props.id\r\n        }}\r\n      >\r\n        {({ data, loading }) => {\r\n          if (loading) return <p>Loading...</p>;\r\n          if (!data.item) return <p>No Item Found for ID {this.props.id}</p>;\r\n          return (\r\n            <Mutation mutation={UPDATE_ITEM_MUTATION} variables={this.state}>\r\n              {(updateItem, { loading, error }) => (\r\n                <Form onSubmit={e => this.updateItem(e, updateItem)}>\r\n                  <Error error={error} />\r\n                  <fieldset disabled={loading} aria-busy={loading}>\r\n                    <label htmlFor=\"title\">\r\n                      Title\r\n                      <input\r\n                        type=\"text\"\r\n                        id=\"title\"\r\n                        name=\"title\"\r\n                        placeholder=\"Title\"\r\n                        required\r\n                        defaultValue={data.item.title}\r\n                        onChange={this.handleChange}\r\n                      />\r\n                    </label>\r\n                    <label htmlFor=\"description\">\r\n                      Description\r\n                      <textarea\r\n                        id=\"description\"\r\n                        name=\"description\"\r\n                        placeholder=\"Enter a description\"\r\n                        required\r\n                        defaultValue={data.item.description}\r\n                        onChange={this.handleChange}\r\n                      />\r\n                    </label>\r\n\r\n                    <label htmlFor=\"price\">\r\n                      Price\r\n                      <input\r\n                        type=\"number\"\r\n                        id=\"price\"\r\n                        name=\"price\"\r\n                        placeholder=\"Price\"\r\n                        required\r\n                        defaultValue={data.item.price}\r\n                        onChange={this.handleChange}\r\n                      />\r\n                    </label>\r\n                    <button type=\"submit\">\r\n                      Sav{loading ? \"ing\" : \"e\"} Changes\r\n                    </button>\r\n                  </fieldset>\r\n                </Form>\r\n              )}\r\n            </Mutation>\r\n          );\r\n        }}\r\n      </Query>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UpdateItem;\r\nexport { UPDATE_ITEM_MUTATION };\r\n"]},"metadata":{},"sourceType":"module"}