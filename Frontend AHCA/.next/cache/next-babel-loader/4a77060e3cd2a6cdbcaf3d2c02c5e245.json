{"ast":null,"code":"import _parseFloat from \"@babel/runtime-corejs2/core-js/parse-float\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Wade\\\\Documents\\\\AHCA Web\\\\Frontend AHCA\\\\components\\\\UpdatePhoneAddress.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport { Query, Mutation } from \"react-apollo\";\nimport { CURRENT_USER_QUERY } from \"./User\";\nimport gql from \"graphql-tag\";\nimport { Label, Input, Select, Textarea, Radio, Checkbox } from \"@rebass/forms\";\nimport { Box, Flex, Button, Card, Image, Heading, Text } from \"rebass\";\nimport Head from \"next/head\";\nimport TakeMyMoney from \"./TakeMyMoney\";\nconst UPDATE_PHONE_ADDRESS = gql`\n  mutation UPDATE_PHONE_ADDRESS(\n    $name: String\n    $address: String\n    $postal: String\n    $phone: String\n    $email: String\n  ) {\n    updatePhoneAddress(\n      name: $name\n      address: $address\n      postal: $postal\n      phone: $phone\n      email: $email\n    ) {\n      id\n    }\n  }\n`;\n\nclass updatePhoneAddress extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      name: \"\",\n      address: \"\",\n      postal: \"\",\n      email: \"\",\n      phone: \"\",\n      checkout: false\n    });\n\n    _defineProperty(this, \"handleChange\", e => {\n      const {\n        name,\n        type,\n        value\n      } = e.target;\n      const val = type === \"number\" ? _parseFloat(value) : value;\n      this.setState({\n        [name]: val\n      });\n\n      if (this.state.name !== \"\" && this.state.address !== \"\" && this.state.postal !== \"\" && this.state.email !== \"\" && this.state.phone !== \"\") {\n        this.setState({\n          checkout: true\n        });\n      }\n    });\n  }\n\n  render() {\n    const maround = 0;\n    const pleft = 0;\n    const wconst = [1, 3 / 4];\n    const fconst = [1, 2];\n    const myconst = [2]; // const hconst = [7, 2];\n    // const [county] = this.props;\n\n    return __jsx(React.Fragment, null, __jsx(Query, {\n      query: CURRENT_USER_QUERY,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, ({\n      data,\n      loading\n    }) => {\n      return __jsx(Mutation, {\n        mutation: UPDATE_PHONE_ADDRESS,\n        variables: this.state,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, (updatePhoneLocation, {\n        loading,\n        error\n      }) => {\n        return __jsx(Box, {\n          as: \"form\",\n          onSubmit: async e => {\n            e.preventDefault();\n            const res = await updatePhoneLocation();\n          },\n          pl: pleft,\n          py: 3,\n          fontSize: fconst,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, __jsx(Flex, {\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, __jsx(Box, {\n          alignItems: \"center\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          width: \"100%\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }, __jsx(Heading, {\n          fontSize: [3, 5],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }), __jsx(Box, {\n          width: wconst,\n          mx: maround,\n          pl: pleft,\n          my: myconst,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, __jsx(Input, {\n          required: true,\n          id: \"name\",\n          name: \"name\",\n          type: \"text\",\n          placeholder: \"Name\",\n          value: this.state.name,\n          onChange: async e => {\n            this.handleChange(e);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        })), __jsx(Box, {\n          width: wconst,\n          mx: maround,\n          my: myconst,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }, __jsx(Input, {\n          required: true,\n          id: \"phone\",\n          name: \"phone\",\n          type: \"text\",\n          placeholder: \"Phone\",\n          value: this.state.phone,\n          onChange: async e => {\n            this.handleChange(e);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        })), __jsx(Box, {\n          width: wconst,\n          mx: maround,\n          my: myconst,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }, __jsx(Input, {\n          required: true,\n          id: \"email\",\n          name: \"email\",\n          type: \"text\",\n          placeholder: \"Email\",\n          value: this.state.email,\n          onChange: async e => {\n            this.handleChange(e);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        })), __jsx(Box, {\n          width: wconst,\n          mx: maround,\n          my: myconst,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134\n          },\n          __self: this\n        }, __jsx(Input, {\n          required: true,\n          id: \"address\",\n          name: \"address\",\n          type: \"text\",\n          placeholder: \"Address\",\n          value: this.state.address,\n          onChange: async e => {\n            this.handleChange(e);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        })), __jsx(Box, {\n          width: wconst,\n          mx: maround,\n          my: myconst,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147\n          },\n          __self: this\n        }, __jsx(Input, {\n          required: true,\n          id: \"postal\",\n          name: \"postal\",\n          type: \"text\",\n          placeholder: \"Zip Code\",\n          value: this.state.postal,\n          onChange: async e => {\n            this.handleChange(e);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148\n          },\n          __self: this\n        })), this.state.checkout ? __jsx(TakeMyMoney, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161\n          },\n          __self: this\n        }, __jsx(Button, {\n          type: \"submit\",\n          bg: \"dark-green\",\n          width: wconst,\n          mx: maround,\n          my: myconst,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162\n          },\n          __self: this\n        }, \"Proceed to Checkout\")) : __jsx(Button, {\n          disabled: true,\n          type: \"submit\",\n          bg: \"dark-gray\",\n          width: wconst,\n          mx: maround,\n          my: myconst,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173\n          },\n          __self: this\n        }, \"Proceed to Checkout\"))));\n      });\n    }));\n  }\n\n}\n\nexport default updatePhoneAddress;","map":{"version":3,"sources":["C:/Users/Wade/Documents/AHCA Web/Frontend AHCA/components/UpdatePhoneAddress.js"],"names":["React","Component","Query","Mutation","CURRENT_USER_QUERY","gql","Label","Input","Select","Textarea","Radio","Checkbox","Box","Flex","Button","Card","Image","Heading","Text","Head","TakeMyMoney","UPDATE_PHONE_ADDRESS","updatePhoneAddress","name","address","postal","email","phone","checkout","e","type","value","target","val","setState","state","render","maround","pleft","wconst","fconst","myconst","data","loading","updatePhoneLocation","error","preventDefault","res","handleChange"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Query, Mutation } from \"react-apollo\";\r\nimport { CURRENT_USER_QUERY } from \"./User\";\r\nimport gql from \"graphql-tag\";\r\nimport { Label, Input, Select, Textarea, Radio, Checkbox } from \"@rebass/forms\";\r\nimport { Box, Flex, Button, Card, Image, Heading, Text } from \"rebass\";\r\nimport Head from \"next/head\";\r\nimport TakeMyMoney from \"./TakeMyMoney\";\r\n\r\nconst UPDATE_PHONE_ADDRESS = gql`\r\n  mutation UPDATE_PHONE_ADDRESS(\r\n    $name: String\r\n    $address: String\r\n    $postal: String\r\n    $phone: String\r\n    $email: String\r\n  ) {\r\n    updatePhoneAddress(\r\n      name: $name\r\n      address: $address\r\n      postal: $postal\r\n      phone: $phone\r\n      email: $email\r\n    ) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nclass updatePhoneAddress extends Component {\r\n  state = {\r\n    name: \"\",\r\n    address: \"\",\r\n    postal: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    checkout: false\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name, type, value } = e.target;\r\n    const val = type === \"number\" ? parseFloat(value) : value;\r\n    this.setState({ [name]: val });\r\n    if (\r\n      this.state.name !== \"\" &&\r\n      this.state.address !== \"\" &&\r\n      this.state.postal !== \"\" &&\r\n      this.state.email !== \"\" &&\r\n      this.state.phone !== \"\"\r\n    ) {\r\n      this.setState({ checkout: true });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const maround = 0;\r\n    const pleft = 0;\r\n    const wconst = [1, 3 / 4];\r\n    const fconst = [1, 2];\r\n    const myconst = [2];\r\n    // const hconst = [7, 2];\r\n\r\n    // const [county] = this.props;\r\n    return (\r\n      <>\r\n        <Query query={CURRENT_USER_QUERY}>\r\n          {({ data, loading }) => {\r\n            return (\r\n              <Mutation mutation={UPDATE_PHONE_ADDRESS} variables={this.state}>\r\n                {(updatePhoneLocation, { loading, error }) => {\r\n                  return (\r\n                    <Box\r\n                      as=\"form\"\r\n                      onSubmit={async e => {\r\n                        e.preventDefault();\r\n                        const res = await updatePhoneLocation();\r\n                      }}\r\n                      pl={pleft}\r\n                      py={3}\r\n                      fontSize={fconst}\r\n                    >\r\n                      <Flex alignItems=\"center\" justifyContent=\"center\">\r\n                        <Box\r\n                          alignItems=\"center\"\r\n                          display=\"flex\"\r\n                          flexDirection=\"column\"\r\n                          width=\"100%\"\r\n                        >\r\n                          <Heading fontSize={[3, 5]}></Heading>\r\n                          <Box\r\n                            width={wconst}\r\n                            mx={maround}\r\n                            pl={pleft}\r\n                            my={myconst}\r\n                          >\r\n                            <Input\r\n                              required\r\n                              id=\"name\"\r\n                              name=\"name\"\r\n                              type=\"text\"\r\n                              placeholder=\"Name\"\r\n                              value={this.state.name}\r\n                              onChange={async e => {\r\n                                this.handleChange(e);\r\n                              }}\r\n                            />\r\n                          </Box>\r\n                          <Box width={wconst} mx={maround} my={myconst}>\r\n                            <Input\r\n                              required\r\n                              id=\"phone\"\r\n                              name=\"phone\"\r\n                              type=\"text\"\r\n                              placeholder=\"Phone\"\r\n                              value={this.state.phone}\r\n                              onChange={async e => {\r\n                                this.handleChange(e);\r\n                              }}\r\n                            />\r\n                          </Box>\r\n                          <Box width={wconst} mx={maround} my={myconst}>\r\n                            <Input\r\n                              required\r\n                              id=\"email\"\r\n                              name=\"email\"\r\n                              type=\"text\"\r\n                              placeholder=\"Email\"\r\n                              value={this.state.email}\r\n                              onChange={async e => {\r\n                                this.handleChange(e);\r\n                              }}\r\n                            />\r\n                          </Box>\r\n                          <Box width={wconst} mx={maround} my={myconst}>\r\n                            <Input\r\n                              required\r\n                              id=\"address\"\r\n                              name=\"address\"\r\n                              type=\"text\"\r\n                              placeholder=\"Address\"\r\n                              value={this.state.address}\r\n                              onChange={async e => {\r\n                                this.handleChange(e);\r\n                              }}\r\n                            />\r\n                          </Box>\r\n                          <Box width={wconst} mx={maround} my={myconst}>\r\n                            <Input\r\n                              required\r\n                              id=\"postal\"\r\n                              name=\"postal\"\r\n                              type=\"text\"\r\n                              placeholder=\"Zip Code\"\r\n                              value={this.state.postal}\r\n                              onChange={async e => {\r\n                                this.handleChange(e);\r\n                              }}\r\n                            />\r\n                          </Box>\r\n                          {this.state.checkout ? (\r\n                            <TakeMyMoney>\r\n                              <Button\r\n                                type=\"submit\"\r\n                                bg=\"dark-green\"\r\n                                width={wconst}\r\n                                mx={maround}\r\n                                my={myconst}\r\n                              >\r\n                                Proceed to Checkout\r\n                              </Button>\r\n                            </TakeMyMoney>\r\n                          ) : (\r\n                            <Button\r\n                              disabled\r\n                              type=\"submit\"\r\n                              bg=\"dark-gray\"\r\n                              width={wconst}\r\n                              mx={maround}\r\n                              my={myconst}\r\n                            >\r\n                              Proceed to Checkout\r\n                            </Button>\r\n                          )}\r\n                        </Box>\r\n                      </Flex>\r\n                    </Box>\r\n                  );\r\n                }}\r\n              </Mutation>\r\n            );\r\n          }}\r\n        </Query>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default updatePhoneAddress;\r\n"]},"metadata":{},"sourceType":"module"}