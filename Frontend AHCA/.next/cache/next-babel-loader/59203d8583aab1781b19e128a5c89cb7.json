{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Wade\\\\Documents\\\\AHCA Web\\\\Frontend AHCA\\\\components\\\\PromoCode.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport { Query, Mutation } from \"react-apollo\";\nimport { CURRENT_USER_QUERY } from \"./User\";\nimport gql from \"graphql-tag\";\nimport { Label, Input, Select, Textarea, Radio, Checkbox } from \"@rebass/forms\";\nimport { Flex, Heading, Box, Button } from \"rebass\";\nimport Error from \"./ErrorMessage\";\nconst VALIDATE_APPLY_PROMO_CODE = gql`\n  mutation updatePriceAfterPromoCode($id: ID!, $promotion: String!) {\n    updatePriceAfterPromoCode(id: $id, promotion: $promotion) {\n      id\n      promotionPrice\n    }\n  }\n`;\n\nconst PromoCode = props => {\n  const {\n    0: promoState,\n    1: setPromoState\n  } = useState(\"\");\n  const maround = [1, 3];\n  const pleft = [0, 1, 2, 3];\n  const wconst = [1, 3 / 4];\n  console.log(props);\n  return __jsx(React.Fragment, null, __jsx(Query, {\n    query: CURRENT_USER_QUERY,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, ({\n    data,\n    loading\n  }) => {\n    return __jsx(Mutation, {\n      mutation: VALIDATE_APPLY_PROMO_CODE,\n      variables: {\n        id: props.id,\n        promotion: promoState\n      },\n      refetchQueries: [{\n        query: CURRENT_USER_QUERY\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, (updatePriceAfterPromoCode, {\n      loading,\n      error\n    }) => {\n      return __jsx(Box, {\n        as: \"form\",\n        onSubmit: async e => {\n          e.preventDefault();\n          const res = await updatePriceAfterPromoCode();\n        },\n        pl: pleft,\n        py: 3,\n        width: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, __jsx(Flex, {\n        f: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, __jsx(Box, {\n        width: wconst,\n        mx: maround,\n        pl: pleft,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, __jsx(Error, {\n        error: error,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }), __jsx(Label, {\n        htmlFor: \"promo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Promo Code\"), __jsx(Input, {\n        id: \"promo\",\n        name: \"promo\",\n        type: \"text\",\n        placeholder: \"Promo Code\",\n        value: promoState,\n        onChange: async e => {\n          setPromoState(e.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      })), __jsx(Box, {\n        p: 2,\n        ml: \"[3, 4, 5, 6]\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, __jsx(Button, {\n        type: \"submit\",\n        bg: \"dark-green\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Submit\"))), __jsx(Flex, {\n        mx: -2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }));\n    });\n  }));\n};\n\nexport default PromoCode;","map":{"version":3,"sources":["C:/Users/Wade/Documents/AHCA Web/Frontend AHCA/components/PromoCode.js"],"names":["React","useState","Query","Mutation","CURRENT_USER_QUERY","gql","Label","Input","Select","Textarea","Radio","Checkbox","Flex","Heading","Box","Button","Error","VALIDATE_APPLY_PROMO_CODE","PromoCode","props","promoState","setPromoState","maround","pleft","wconst","console","log","data","loading","id","promotion","query","updatePriceAfterPromoCode","error","e","preventDefault","res","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Query, Mutation } from \"react-apollo\";\r\nimport { CURRENT_USER_QUERY } from \"./User\";\r\nimport gql from \"graphql-tag\";\r\nimport { Label, Input, Select, Textarea, Radio, Checkbox } from \"@rebass/forms\";\r\nimport { Flex, Heading, Box, Button } from \"rebass\";\r\nimport Error from \"./ErrorMessage\";\r\n\r\nconst VALIDATE_APPLY_PROMO_CODE = gql`\r\n  mutation updatePriceAfterPromoCode($id: ID!, $promotion: String!) {\r\n    updatePriceAfterPromoCode(id: $id, promotion: $promotion) {\r\n      id\r\n      promotionPrice\r\n    }\r\n  }\r\n`;\r\n\r\nconst PromoCode = props => {\r\n  const [promoState, setPromoState] = useState(\"\");\r\n  const maround = [1, 3];\r\n  const pleft = [0, 1, 2, 3];\r\n  const wconst = [1, 3 / 4];\r\n  console.log(props);\r\n  return (\r\n    <>\r\n      <Query query={CURRENT_USER_QUERY}>\r\n        {({ data, loading }) => {\r\n          return (\r\n            <Mutation\r\n              mutation={VALIDATE_APPLY_PROMO_CODE}\r\n              variables={{ id: props.id, promotion: promoState }}\r\n              refetchQueries={[{ query: CURRENT_USER_QUERY }]}\r\n            >\r\n              {(updatePriceAfterPromoCode, { loading, error }) => {\r\n                return (\r\n                  <Box\r\n                    as=\"form\"\r\n                    onSubmit={async e => {\r\n                      e.preventDefault();\r\n                      const res = await updatePriceAfterPromoCode();\r\n                    }}\r\n                    pl={pleft}\r\n                    py={3}\r\n                    width={1}\r\n                  >\r\n                    <Flex f>\r\n                      <Box width={wconst} mx={maround} pl={pleft}>\r\n                        <Error error={error} />\r\n                        <Label htmlFor=\"promo\">Promo Code</Label>\r\n                        <Input\r\n                          id=\"promo\"\r\n                          name=\"promo\"\r\n                          type=\"text\"\r\n                          placeholder=\"Promo Code\"\r\n                          value={promoState}\r\n                          onChange={async e => {\r\n                            setPromoState(e.target.value);\r\n                          }}\r\n                        />\r\n                      </Box>\r\n                      <Box p={2} ml=\"[3, 4, 5, 6]\">\r\n                        <Button type=\"submit\" bg=\"dark-green\">\r\n                          Submit\r\n                        </Button>\r\n                      </Box>\r\n                    </Flex>\r\n                    <Flex mx={-2}></Flex>\r\n                  </Box>\r\n                );\r\n              }}\r\n            </Mutation>\r\n          );\r\n        }}\r\n      </Query>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PromoCode;\r\n"]},"metadata":{},"sourceType":"module"}