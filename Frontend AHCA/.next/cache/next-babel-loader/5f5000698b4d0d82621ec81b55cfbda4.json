{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport styled from \"styled-components\"; // import FrontPageItem from \"./FrontPageItem\";\n\nimport { ProductCard } from \"./ProductCard\";\nimport { Flex } from \"rebass\";\nimport ItemsFrontPage from \"./ItemsFrontPage\";\nconst ALL_ITEMS_QUERY = gql`\n  query ALL_ITEMS_QUERY($skip: Int = 0, $first: Int = 3) {\n    items(first: $first, skip: $skip, orderBy: createdAt_DESC) {\n      id\n      title\n      categories\n      features\n      highlights\n      sale\n      price\n      description\n      image\n      largeImage\n    }\n  }\n`;\nconst Center = styled.div.withConfig({\n  displayName: \"ProductsFeature__Center\",\n  componentId: \"q55n4p-0\"\n})([\"max-width:\", \";margin:0 auto;\"], props => props.theme.maxWidth);\nexport default class ProductsFeature extends Component {\n  render() {\n    return __jsx(Query, {\n      query: ALL_ITEMS_QUERY,\n      variables: {// skip: this.props.page * perPage - perPage\n        // first: perPage\n      }\n    }, ({\n      data,\n      error,\n      loading\n    }) => {\n      if (loading) return __jsx(\"p\", null, \"Loading...\");\n      if (error) return __jsx(\"p\", null, \"Error: \", error.message);\n      return __jsx(Flex, {\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"center\"\n      }, data.items.map((item, index) => __jsx(ItemsFrontPage, {\n        key: item.id,\n        item: item,\n        index: index\n      })));\n    });\n  }\n\n}\nexport { ALL_ITEMS_QUERY };","map":null,"metadata":{},"sourceType":"module"}