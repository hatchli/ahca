{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport AddToCart from \"./AddToCart\";\nimport PriceTag from \"./styles/PriceTag\";\nimport formatMoney from \"../lib/formatMoney\";\nimport gql from \"graphql-tag\";\nimport { Query } from \"react-apollo\";\nimport Error from \"./ErrorMessage\";\nimport styled from \"styled-components\";\nimport Head from \"next/head\";\nimport { Box, Flex, Heading, Text, Link, Image } from \"rebass\";\nconst SingleItemStyles = styled.div.withConfig({\n  displayName: \"SingleItem__SingleItemStyles\",\n  componentId: \"rqg3bd-0\"\n})([\"box-shadow:\", \";min-height:800px;display:flex;\"], props => props.theme.bs);\nconst SINGLE_ITEM_QUERY = gql`\n  query SINGLE_ITEM_QUERY($id: ID!) {\n    item(where: { id: $id }) {\n      id\n      title\n      price\n      description\n      sale\n      features\n      highlights\n      largeImage\n      largeImage1\n      largeImage2\n    }\n  }\n`;\nconst pad = [3, 4];\n\nconst Divider = props => __jsx(Box, _extends({}, props, {\n  as: \"hr\",\n  sx: {\n    bg: \"dark-gray\",\n    border: 0,\n    height: 2,\n    width: [\"100%\", \"80%\"],\n    marginBottom: [\"2\", \"3\"]\n  }\n}));\n\nconst SingleItem = (props, {\n  item,\n  index\n}) => {\n  return __jsx(Query, {\n    query: SINGLE_ITEM_QUERY,\n    variables: {\n      id: props.id\n    }\n  }, ({\n    error,\n    loading,\n    data\n  }) => {\n    if (error) return __jsx(Error, {\n      error: error\n    });\n    if (loading) return __jsx(\"p\", null, \"Loading...\");\n    if (!data.item) return __jsx(\"p\", null, \"No Item found for \", props.id);\n    const item = data.item;\n    console.log(\"item within return\", item);\n    return __jsx(SingleItemStyles, null, __jsx(Flex, {\n      flexWrap: \"wrap\",\n      justifyContent: \"center\"\n    }, __jsx(Box, {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n      maxWidth: [\"90%\", \"70%\"],\n      justifyContent: \"center\"\n    }, __jsx(Head, null, __jsx(\"title\", null, \"AHCA | \", item.title)), __jsx(Heading, {\n      fontSize: [6, 7, 8]\n    }, item.title), __jsx(Divider, null), __jsx(Box, {\n      width: [1, 1 / 2]\n    }, __jsx(Image, {\n      src: item.largeImage\n    })), __jsx(Box, {\n      pl: pad,\n      width: [1, 1 / 2]\n    }, __jsx(Text, {\n      pl: [0, 3],\n      fontSize: [2, 3],\n      lineHeight: 1.5\n    }, item.description), __jsx(Box, {\n      display: \"flex\",\n      mt: [2, 3]\n    }, __jsx(Box, {\n      display: \"flex\",\n      flexDirection: \"column\",\n      width: 1 / 2,\n      alignItems: \"flex-end\"\n    }, __jsx(Text, {\n      fontSize: [3, 4],\n      fontWeight: \"bold\"\n    }, formatMoney(item.price)), __jsx(Text, {\n      fontSize: [1, 2],\n      fontWeight: \"body\"\n    }, \"Installation included\")), __jsx(Box, {\n      pl: [2, 4],\n      width: 1 / 2,\n      display: \"flex\"\n    }, __jsx(AddToCart, {\n      id: item.id\n    })))), __jsx(Flex, {\n      flexWrap: \"wrap-reverse\"\n    }, __jsx(Box, {\n      width: [1, 1 / 2],\n      py: [3, 5]\n    }, __jsx(Heading, {\n      fontSize: [4, 5, 6]\n    }, \"Features\"), __jsx(\"ul\", null, item.features.filter((feature, i) => i <= 2).map((feature, i) => __jsx(Text, {\n      pl: [0, 3],\n      fontSize: [2, 3],\n      lineHeight: 1.25,\n      pr: [0, 3],\n      mb: [2, 3]\n    }, __jsx(\"li\", null, feature))))), __jsx(Box, {\n      width: [1, 1 / 2],\n      py: [3, 5]\n    }, __jsx(Image, {\n      src: item.largeImage1\n    }))), __jsx(Box, {\n      width: [1, 1 / 2]\n    }, __jsx(Image, {\n      src: item.largeImage2\n    })), __jsx(Box, {\n      pl: pad,\n      width: [1, 1 / 2]\n    }, __jsx(Heading, {\n      fontSize: [4, 5, 6]\n    }, \"Specifications\"), __jsx(\"ul\", null, item.highlights.filter((highlight, i) => i <= 2).map((highlight, i) => __jsx(Text, {\n      pl: [0, 3],\n      fontSize: [2, 3],\n      lineHeight: 1.25,\n      pr: [0, 3],\n      mb: [2, 3]\n    }, __jsx(\"li\", null, highlight))))))));\n  });\n};\n\nexport default SingleItem;\nexport { SINGLE_ITEM_QUERY };","map":null,"metadata":{},"sourceType":"module"}