{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar __jsx = React.createElement;\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation {\\n    toggleCart @client\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query {\\n    cartOpen @client\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from \"react\";\nimport wait from \"waait\";\nimport { Query, Mutation } from \"react-apollo\";\nimport User from \"./User\";\nimport gql from \"graphql-tag\";\nimport CartStyles from \"./styles/CartStyles\";\nimport Supreme from \"./styles/Supreme\";\nimport CloseButton from \"./styles/CloseButton\";\nimport SickButton from \"./styles/SickButton\";\nimport CartItem from \"./CartItem\";\nimport calcTotalPrice from \"../lib/calcTotalPrice\";\nimport formatMoney from \"../lib/formatMoney\";\nimport { adopt } from \"react-adopt\";\nimport TakeMyMoney from \"./TakeMyMoney\";\nimport UpdatePhoneAddress from \"./UpdatePhoneAddress\";\nvar LOCAL_STATE_QUERY = gql(_templateObject());\nvar TOGGLE_CART_MUTATION = gql(_templateObject2());\nvar Composed = adopt({\n  user: function user(_ref) {\n    var render = _ref.render;\n    return __jsx(User, null, render);\n  },\n  // cartItem: ({ render }) => <CartItem>{render}</CartItem>,\n  toggleCart: function toggleCart(_ref2) {\n    var render = _ref2.render;\n    return __jsx(Mutation, {\n      mutation: TOGGLE_CART_MUTATION\n    }, render);\n  },\n  localState: function localState(_ref3) {\n    var render = _ref3.render;\n    return __jsx(Query, {\n      query: LOCAL_STATE_QUERY\n    }, render);\n  }\n});\n\nvar Cart = function Cart(props, _ref4) {\n  var item = _ref4.item;\n\n  var _useState = useState(true),\n      cartState = _useState[0],\n      setCartState = _useState[1];\n\n  var flipCart = function flipCart() {\n    return setCartState(!cartState);\n  };\n\n  return __jsx(Composed, null, function (_ref5) {\n    var user = _ref5.user,\n        toggleCart = _ref5.toggleCart,\n        localState = _ref5.localState;\n    console.log(\"user.data\", user.data);\n    var me = user.data ? user.data.me : null;\n    if (!me) return null;\n    console.log(me);\n    return __jsx(CartStyles, {\n      open: localState.data.cartOpen\n    }, __jsx(\"header\", null, __jsx(CloseButton, {\n      onClick: toggleCart,\n      title: \"close\"\n    }, \"\\xD7\"), me.permissions.includes(\"GUEST\") ? __jsx(Supreme, null, \"Guest Cart\") : __jsx(Supreme, null, me.name, \"'s Cart\"), __jsx(\"p\", null, \"You have \", me.cart.length, \" item\", me.cart.length === 1 ? \"\" : \"s\", \" in your cart\")), __jsx(\"ul\", null, cartState && me.cart.map(function (cartItem) {\n      return __jsx(React.Fragment, null, __jsx(CartItem, {\n        key: cartItem.id,\n        cartItem: cartItem\n      }));\n    }), !cartState && me.permissions.includes(\"GUEST\") && __jsx(UpdatePhoneAddress, null)), __jsx(\"footer\", null, __jsx(\"p\", null, formatMoney(calcTotalPrice(me.cart))), me.cart.length && !cartState ? __jsx(TakeMyMoney, null, __jsx(SickButton, {\n      disabled: false\n    }, \"Checkout\")) : me.permissions.includes(\"GUEST\") ? __jsx(SickButton, {\n      onClick: function onClick() {\n        return flipCart();\n      },\n      disabled: false\n    }, \"Checkout\") : __jsx(TakeMyMoney, null, __jsx(SickButton, {\n      disabled: true\n    }, \"Checkout\"))));\n  });\n};\n\nexport default Cart;\nexport { LOCAL_STATE_QUERY, TOGGLE_CART_MUTATION };","map":null,"metadata":{},"sourceType":"module"}