{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _parseFloat from \"@babel/runtime-corejs2/core-js/parse-float\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Users\\\\Wade\\\\Documents\\\\AHCA Web\\\\Frontend AHCA\\\\components\\\\UpdatePhoneAddress.js\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation UPDATE_PHONE_ADDRESS(\\n    $name: String\\n    $address: String\\n    $postal: String\\n    $phone: String\\n    $email: String\\n  ) {\\n    updatePhoneAddress(\\n      name: $name\\n      address: $address\\n      postal: $postal\\n      phone: $phone\\n      email: $email\\n    ) {\\n      id\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from \"react\";\nimport { Query, Mutation } from \"react-apollo\";\nimport { CURRENT_USER_QUERY } from \"./User\";\nimport gql from \"graphql-tag\";\nimport { Label, Input, Select, Textarea, Radio, Checkbox } from \"@rebass/forms\";\nimport { Box, Flex, Button, Card, Image, Heading, Text } from \"rebass\";\nimport Head from \"next/head\";\nimport TakeMyMoney from \"./TakeMyMoney\";\nvar UPDATE_PHONE_ADDRESS = gql(_templateObject());\n\nvar updatePhoneAddress =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(updatePhoneAddress, _Component);\n\n  function updatePhoneAddress() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, updatePhoneAddress);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(updatePhoneAddress)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      name: \"\",\n      address: \"\",\n      postal: \"\",\n      email: \"\",\n      phone: \"\",\n      checkout: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (e) {\n      var _e$target = e.target,\n          name = _e$target.name,\n          type = _e$target.type,\n          value = _e$target.value;\n      var val = type === \"number\" ? _parseFloat(value) : value;\n\n      _this.setState(_defineProperty({}, name, val));\n\n      if (_this.state.name !== \"\" && _this.state.address !== \"\" && _this.state.postal !== \"\" && _this.state.email !== \"\" && _this.state.phone !== \"\") {\n        _this.setState({\n          checkout: true\n        });\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(updatePhoneAddress, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var maround = 0;\n      var pleft = 0;\n      var wconst = [1, 3 / 4];\n      var fconst = [1, 2];\n      var myconst = [2]; // const hconst = [7, 2];\n      // const [county] = this.props;\n\n      return __jsx(React.Fragment, null, __jsx(Query, {\n        query: CURRENT_USER_QUERY,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, function (_ref) {\n        var data = _ref.data,\n            loading = _ref.loading;\n        return __jsx(Mutation, {\n          mutation: UPDATE_PHONE_ADDRESS,\n          variables: _this2.state,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, function (updatePhoneLocation, _ref2) {\n          var loading = _ref2.loading,\n              error = _ref2.error;\n          return __jsx(Box, {\n            as: \"form\",\n            onSubmit: function _callee(e) {\n              var res;\n              return _regeneratorRuntime.async(function _callee$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      e.preventDefault();\n                      _context.next = 3;\n                      return _regeneratorRuntime.awrap(updatePhoneLocation());\n\n                    case 3:\n                      res = _context.sent;\n\n                    case 4:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              });\n            },\n            pl: pleft,\n            py: 3,\n            fontSize: fconst,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 72\n            },\n            __self: this\n          }, __jsx(Flex, {\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 82\n            },\n            __self: this\n          }, __jsx(Box, {\n            alignItems: \"center\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            width: \"100%\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 83\n            },\n            __self: this\n          }, __jsx(Heading, {\n            fontSize: [3, 5],\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 89\n            },\n            __self: this\n          }), __jsx(Box, {\n            width: wconst,\n            mx: maround,\n            pl: pleft,\n            my: myconst,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 90\n            },\n            __self: this\n          }, __jsx(Input, {\n            required: true,\n            id: \"name\",\n            name: \"name\",\n            type: \"text\",\n            placeholder: \"Name\",\n            value: _this2.state.name,\n            onChange: function _callee2(e) {\n              return _regeneratorRuntime.async(function _callee2$(_context2) {\n                while (1) {\n                  switch (_context2.prev = _context2.next) {\n                    case 0:\n                      _this2.handleChange(e);\n\n                    case 1:\n                    case \"end\":\n                      return _context2.stop();\n                  }\n                }\n              });\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 96\n            },\n            __self: this\n          })), __jsx(Box, {\n            width: wconst,\n            mx: maround,\n            my: myconst,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 108\n            },\n            __self: this\n          }, __jsx(Input, {\n            required: true,\n            id: \"phone\",\n            name: \"phone\",\n            type: \"text\",\n            placeholder: \"Phone\",\n            value: _this2.state.phone,\n            onChange: function _callee3(e) {\n              return _regeneratorRuntime.async(function _callee3$(_context3) {\n                while (1) {\n                  switch (_context3.prev = _context3.next) {\n                    case 0:\n                      _this2.handleChange(e);\n\n                    case 1:\n                    case \"end\":\n                      return _context3.stop();\n                  }\n                }\n              });\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 109\n            },\n            __self: this\n          })), __jsx(Box, {\n            width: wconst,\n            mx: maround,\n            my: myconst,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 121\n            },\n            __self: this\n          }, __jsx(Input, {\n            required: true,\n            id: \"email\",\n            name: \"email\",\n            type: \"text\",\n            placeholder: \"Email\",\n            value: _this2.state.email,\n            onChange: function _callee4(e) {\n              return _regeneratorRuntime.async(function _callee4$(_context4) {\n                while (1) {\n                  switch (_context4.prev = _context4.next) {\n                    case 0:\n                      _this2.handleChange(e);\n\n                    case 1:\n                    case \"end\":\n                      return _context4.stop();\n                  }\n                }\n              });\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 122\n            },\n            __self: this\n          })), __jsx(Box, {\n            width: wconst,\n            mx: maround,\n            my: myconst,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 134\n            },\n            __self: this\n          }, __jsx(Input, {\n            required: true,\n            id: \"address\",\n            name: \"address\",\n            type: \"text\",\n            placeholder: \"Address\",\n            value: _this2.state.address,\n            onChange: function _callee5(e) {\n              return _regeneratorRuntime.async(function _callee5$(_context5) {\n                while (1) {\n                  switch (_context5.prev = _context5.next) {\n                    case 0:\n                      _this2.handleChange(e);\n\n                    case 1:\n                    case \"end\":\n                      return _context5.stop();\n                  }\n                }\n              });\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 135\n            },\n            __self: this\n          })), __jsx(Box, {\n            width: wconst,\n            mx: maround,\n            my: myconst,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 147\n            },\n            __self: this\n          }, __jsx(Input, {\n            required: true,\n            id: \"zip\",\n            name: \"zip\",\n            type: \"text\",\n            placeholder: \"Zip Code\",\n            value: _this2.state.postal,\n            onChange: function _callee6(e) {\n              return _regeneratorRuntime.async(function _callee6$(_context6) {\n                while (1) {\n                  switch (_context6.prev = _context6.next) {\n                    case 0:\n                      _this2.handleChange(e);\n\n                    case 1:\n                    case \"end\":\n                      return _context6.stop();\n                  }\n                }\n              });\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 148\n            },\n            __self: this\n          })), _this2.state.checkout ? __jsx(TakeMyMoney, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 161\n            },\n            __self: this\n          }, __jsx(Button, {\n            type: \"submit\",\n            bg: \"dark-green\",\n            width: wconst,\n            mx: maround,\n            my: myconst,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 162\n            },\n            __self: this\n          }, \"Proceed to Checkout\")) : __jsx(Button, {\n            disabled: true,\n            type: \"submit\",\n            bg: \"dark-gray\",\n            width: wconst,\n            mx: maround,\n            my: myconst,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 173\n            },\n            __self: this\n          }, \"Proceed to Checkout\"))));\n        });\n      }));\n    }\n  }]);\n\n  return updatePhoneAddress;\n}(Component);\n\nexport default updatePhoneAddress;","map":{"version":3,"sources":["C:/Users/Wade/Documents/AHCA Web/Frontend AHCA/components/UpdatePhoneAddress.js"],"names":["React","Component","Query","Mutation","CURRENT_USER_QUERY","gql","Label","Input","Select","Textarea","Radio","Checkbox","Box","Flex","Button","Card","Image","Heading","Text","Head","TakeMyMoney","UPDATE_PHONE_ADDRESS","updatePhoneAddress","name","address","postal","email","phone","checkout","e","target","type","value","val","setState","state","maround","pleft","wconst","fconst","myconst","data","loading","updatePhoneLocation","error","preventDefault","res","handleChange"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Query, Mutation } from \"react-apollo\";\r\nimport { CURRENT_USER_QUERY } from \"./User\";\r\nimport gql from \"graphql-tag\";\r\nimport { Label, Input, Select, Textarea, Radio, Checkbox } from \"@rebass/forms\";\r\nimport { Box, Flex, Button, Card, Image, Heading, Text } from \"rebass\";\r\nimport Head from \"next/head\";\r\nimport TakeMyMoney from \"./TakeMyMoney\";\r\n\r\nconst UPDATE_PHONE_ADDRESS = gql`\r\n  mutation UPDATE_PHONE_ADDRESS(\r\n    $name: String\r\n    $address: String\r\n    $postal: String\r\n    $phone: String\r\n    $email: String\r\n  ) {\r\n    updatePhoneAddress(\r\n      name: $name\r\n      address: $address\r\n      postal: $postal\r\n      phone: $phone\r\n      email: $email\r\n    ) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nclass updatePhoneAddress extends Component {\r\n  state = {\r\n    name: \"\",\r\n    address: \"\",\r\n    postal: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    checkout: false\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name, type, value } = e.target;\r\n    const val = type === \"number\" ? parseFloat(value) : value;\r\n    this.setState({ [name]: val });\r\n    if (\r\n      this.state.name !== \"\" &&\r\n      this.state.address !== \"\" &&\r\n      this.state.postal !== \"\" &&\r\n      this.state.email !== \"\" &&\r\n      this.state.phone !== \"\"\r\n    ) {\r\n      this.setState({ checkout: true });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const maround = 0;\r\n    const pleft = 0;\r\n    const wconst = [1, 3 / 4];\r\n    const fconst = [1, 2];\r\n    const myconst = [2];\r\n    // const hconst = [7, 2];\r\n\r\n    // const [county] = this.props;\r\n    return (\r\n      <>\r\n        <Query query={CURRENT_USER_QUERY}>\r\n          {({ data, loading }) => {\r\n            return (\r\n              <Mutation mutation={UPDATE_PHONE_ADDRESS} variables={this.state}>\r\n                {(updatePhoneLocation, { loading, error }) => {\r\n                  return (\r\n                    <Box\r\n                      as=\"form\"\r\n                      onSubmit={async e => {\r\n                        e.preventDefault();\r\n                        const res = await updatePhoneLocation();\r\n                      }}\r\n                      pl={pleft}\r\n                      py={3}\r\n                      fontSize={fconst}\r\n                    >\r\n                      <Flex alignItems=\"center\" justifyContent=\"center\">\r\n                        <Box\r\n                          alignItems=\"center\"\r\n                          display=\"flex\"\r\n                          flexDirection=\"column\"\r\n                          width=\"100%\"\r\n                        >\r\n                          <Heading fontSize={[3, 5]}></Heading>\r\n                          <Box\r\n                            width={wconst}\r\n                            mx={maround}\r\n                            pl={pleft}\r\n                            my={myconst}\r\n                          >\r\n                            <Input\r\n                              required\r\n                              id=\"name\"\r\n                              name=\"name\"\r\n                              type=\"text\"\r\n                              placeholder=\"Name\"\r\n                              value={this.state.name}\r\n                              onChange={async e => {\r\n                                this.handleChange(e);\r\n                              }}\r\n                            />\r\n                          </Box>\r\n                          <Box width={wconst} mx={maround} my={myconst}>\r\n                            <Input\r\n                              required\r\n                              id=\"phone\"\r\n                              name=\"phone\"\r\n                              type=\"text\"\r\n                              placeholder=\"Phone\"\r\n                              value={this.state.phone}\r\n                              onChange={async e => {\r\n                                this.handleChange(e);\r\n                              }}\r\n                            />\r\n                          </Box>\r\n                          <Box width={wconst} mx={maround} my={myconst}>\r\n                            <Input\r\n                              required\r\n                              id=\"email\"\r\n                              name=\"email\"\r\n                              type=\"text\"\r\n                              placeholder=\"Email\"\r\n                              value={this.state.email}\r\n                              onChange={async e => {\r\n                                this.handleChange(e);\r\n                              }}\r\n                            />\r\n                          </Box>\r\n                          <Box width={wconst} mx={maround} my={myconst}>\r\n                            <Input\r\n                              required\r\n                              id=\"address\"\r\n                              name=\"address\"\r\n                              type=\"text\"\r\n                              placeholder=\"Address\"\r\n                              value={this.state.address}\r\n                              onChange={async e => {\r\n                                this.handleChange(e);\r\n                              }}\r\n                            />\r\n                          </Box>\r\n                          <Box width={wconst} mx={maround} my={myconst}>\r\n                            <Input\r\n                              required\r\n                              id=\"zip\"\r\n                              name=\"zip\"\r\n                              type=\"text\"\r\n                              placeholder=\"Zip Code\"\r\n                              value={this.state.postal}\r\n                              onChange={async e => {\r\n                                this.handleChange(e);\r\n                              }}\r\n                            />\r\n                          </Box>\r\n                          {this.state.checkout ? (\r\n                            <TakeMyMoney>\r\n                              <Button\r\n                                type=\"submit\"\r\n                                bg=\"dark-green\"\r\n                                width={wconst}\r\n                                mx={maround}\r\n                                my={myconst}\r\n                              >\r\n                                Proceed to Checkout\r\n                              </Button>\r\n                            </TakeMyMoney>\r\n                          ) : (\r\n                            <Button\r\n                              disabled\r\n                              type=\"submit\"\r\n                              bg=\"dark-gray\"\r\n                              width={wconst}\r\n                              mx={maround}\r\n                              my={myconst}\r\n                            >\r\n                              Proceed to Checkout\r\n                            </Button>\r\n                          )}\r\n                        </Box>\r\n                      </Flex>\r\n                    </Box>\r\n                  );\r\n                }}\r\n              </Mutation>\r\n            );\r\n          }}\r\n        </Query>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default updatePhoneAddress;\r\n"]},"metadata":{},"sourceType":"module"}