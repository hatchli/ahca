{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Users\\\\Wade\\\\Documents\\\\AHCA Web\\\\Frontend AHCA\\\\components\\\\DeleteItem.js\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation DELETE_ITEM_MUTATION($id: ID!) {\\n    deleteItem(id: $id) {\\n      id\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from \"react\";\nimport { Mutation } from \"react-apollo\";\nimport { ALL_ITEMS_QUERY } from \"./Items\";\nimport gql from \"graphql-tag\";\nvar DELETE_ITEM_MUTATION = gql(_templateObject());\n\nvar DeleteItem =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DeleteItem, _Component);\n\n  function DeleteItem() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, DeleteItem);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(DeleteItem)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"update\", function (cache, payload) {\n      //manually update the cache on the client, so it maches the server\n      //1. Read the cache for the items we want\n      var data = cache.readQuery({\n        query: ALL_ITEMS_QUERY\n      }); // console.log(data);\n      //2. Filter the deleted item out of the page\n\n      data.items = data.items.filter(function (item) {\n        return item.id !== payload.data.deleteItem.id;\n      }); //3. Put items back!\n\n      cache.writeQuery({\n        query: ALL_ITEMS_QUERY,\n        data: data\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(DeleteItem, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(Mutation, {\n        mutation: DELETE_ITEM_MUTATION,\n        variables: {\n          id: this.props.id\n        },\n        update: this.update,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, function (deleteItem, _ref) {\n        var error = _ref.error;\n        return __jsx(\"button\", {\n          onClick: function onClick() {\n            if (confirm(\"Are you sure you want to delete this?\")) {\n              deleteItem()[\"catch\"](function (err) {\n                alert(err.message);\n              });\n            }\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, _this2.props.children);\n      });\n    }\n  }]);\n\n  return DeleteItem;\n}(Component);\n\nexport { DeleteItem as default };","map":{"version":3,"sources":["C:/Users/Wade/Documents/AHCA Web/Frontend AHCA/components/DeleteItem.js"],"names":["React","Component","Mutation","ALL_ITEMS_QUERY","gql","DELETE_ITEM_MUTATION","DeleteItem","cache","payload","data","readQuery","query","items","filter","item","id","deleteItem","writeQuery","props","update","error","confirm","err","alert","message","children"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,SAASC,eAAT,QAAgC,SAAhC;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,IAAMC,oBAAoB,GAAGD,GAAH,mBAA1B;;IAQqBE,U;;;;;;;;;;;;;;;;;;6DACV,UAACC,KAAD,EAAQC,OAAR,EAAoB;AAC3B;AACA;AACA,UAAMC,IAAI,GAAGF,KAAK,CAACG,SAAN,CAAgB;AAAEC,QAAAA,KAAK,EAAER;AAAT,OAAhB,CAAb,CAH2B,CAI3B;AACA;;AACAM,MAAAA,IAAI,CAACG,KAAL,GAAaH,IAAI,CAACG,KAAL,CAAWC,MAAX,CACX,UAAAC,IAAI;AAAA,eAAIA,IAAI,CAACC,EAAL,KAAYP,OAAO,CAACC,IAAR,CAAaO,UAAb,CAAwBD,EAAxC;AAAA,OADO,CAAb,CAN2B,CAS3B;;AACAR,MAAAA,KAAK,CAACU,UAAN,CAAiB;AAAEN,QAAAA,KAAK,EAAER,eAAT;AAA0BM,QAAAA,IAAI,EAAJA;AAA1B,OAAjB;AACD,K;;;;;;;6BACQ;AAAA;;AACP,aACE,MAAC,QAAD;AACE,QAAA,QAAQ,EAAEJ,oBADZ;AAEE,QAAA,SAAS,EAAE;AAAEU,UAAAA,EAAE,EAAE,KAAKG,KAAL,CAAWH;AAAjB,SAFb;AAGE,QAAA,MAAM,EAAE,KAAKI,MAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKG,UAACH,UAAD;AAAA,YAAeI,KAAf,QAAeA,KAAf;AAAA,eACC;AACE,UAAA,OAAO,EAAE,mBAAM;AACb,gBAAIC,OAAO,CAAC,uCAAD,CAAX,EAAsD;AACpDL,cAAAA,UAAU,WAAV,CAAmB,UAAAM,GAAG,EAAI;AACxBC,gBAAAA,KAAK,CAACD,GAAG,CAACE,OAAL,CAAL;AACD,eAFD;AAGD;AACF,WAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WASG,MAAI,CAACN,KAAL,CAAWO,QATd,CADD;AAAA,OALH,CADF;AAqBD;;;;EAnCqCxB,S;;SAAnBK,U","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Mutation } from \"react-apollo\";\r\nimport { ALL_ITEMS_QUERY } from \"./Items\";\r\nimport gql from \"graphql-tag\";\r\n\r\nconst DELETE_ITEM_MUTATION = gql`\r\n  mutation DELETE_ITEM_MUTATION($id: ID!) {\r\n    deleteItem(id: $id) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nexport default class DeleteItem extends Component {\r\n  update = (cache, payload) => {\r\n    //manually update the cache on the client, so it maches the server\r\n    //1. Read the cache for the items we want\r\n    const data = cache.readQuery({ query: ALL_ITEMS_QUERY });\r\n    // console.log(data);\r\n    //2. Filter the deleted item out of the page\r\n    data.items = data.items.filter(\r\n      item => item.id !== payload.data.deleteItem.id\r\n    );\r\n    //3. Put items back!\r\n    cache.writeQuery({ query: ALL_ITEMS_QUERY, data });\r\n  };\r\n  render() {\r\n    return (\r\n      <Mutation\r\n        mutation={DELETE_ITEM_MUTATION}\r\n        variables={{ id: this.props.id }}\r\n        update={this.update}\r\n      >\r\n        {(deleteItem, { error }) => (\r\n          <button\r\n            onClick={() => {\r\n              if (confirm(\"Are you sure you want to delete this?\")) {\r\n                deleteItem().catch(err => {\r\n                  alert(err.message);\r\n                });\r\n              }\r\n            }}\r\n          >\r\n            {this.props.children}\r\n          </button>\r\n        )}\r\n      </Mutation>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}