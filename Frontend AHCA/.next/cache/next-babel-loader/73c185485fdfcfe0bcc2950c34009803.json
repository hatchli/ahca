{"ast":null,"code":"var __jsx = React.createElement;\nimport React from \"react\";\nimport PaginationStyles from \"./styles/PaginationStyles\";\nimport gql from \"graphql-tag\";\nimport { Query } from \"react-apollo\";\nimport { perPage } from \"../config\";\nimport Head from \"next/head\";\nimport Link from \"next/link\";\nconst PAGINATION_QUERY = gql`\n  query PAGINATION_QUERY {\n    itemsConnection {\n      aggregate {\n        count\n      }\n    }\n  }\n`;\n\nconst Pagination = props => __jsx(Query, {\n  query: PAGINATION_QUERY\n}, ({\n  data,\n  loading,\n  error\n}) => {\n  if (loading) return __jsx(\"p\", null, \"Loading...\");\n  const count = data.itemsConnection.aggregate.count;\n  const pages = Math.ceil(count / perPage);\n  const page = props.page;\n  return __jsx(PaginationStyles, {\n    \"data-test\": \"pagination\"\n  }, __jsx(Head, null, __jsx(\"title\", null, \"AHCA | Page \", page, \" of \", pages)), __jsx(Link, {\n    prefetch: true,\n    href: {\n      pathname: \"shop\",\n      query: {\n        page: page - 1\n      }\n    }\n  }, __jsx(\"a\", {\n    className: \"prev\",\n    \"aria-disabled\": page <= 1\n  }, \"\\uD83E\\uDC44 Prev\")), count - props.page * perPage >= 1 ? __jsx(\"p\", null, \" \", count - props.page * perPage, \" More Items\") : __jsx(\"p\", null, \"No More Items\"), __jsx(Link, {\n    href: {\n      pathname: \"shop\",\n      query: {\n        page: page + 1\n      }\n    }\n  }, __jsx(\"a\", {\n    className: \"next\",\n    \"aria-disabled\": page >= pages\n  }, \"Next \\uD83E\\uDC46\")));\n});\n\nexport default Pagination;\nexport { PAGINATION_QUERY };","map":null,"metadata":{},"sourceType":"module"}