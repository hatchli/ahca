{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"C:\\\\Users\\\\Wade\\\\Documents\\\\AHCA Web\\\\Frontend AHCA\\\\pages\\\\_app.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport App, { Container } from \"next/app\";\nimport Page from \"../components/Page\";\nimport { ApolloProvider } from \"react-apollo\";\nimport withData from \"../lib/withData\";\n\nclass MyApp extends App {\n  static async getInitialProps({\n    Component,\n    ctx\n  }) {\n    let pageProps = {};\n\n    if (Component.getInitialProps) {\n      pageProps = await Component.getInitialProps(ctx);\n    } // this exposes the query to the user\n\n\n    pageProps.query = ctx.query;\n    return {\n      pageProps\n    };\n  }\n\n  render() {\n    const {\n      Component,\n      apollo,\n      pageProps\n    } = this.props;\n    return (// <Container>\n      __jsx(ApolloProvider, {\n        client: apollo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, __jsx(Page, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, __jsx(Component, _extends({}, pageProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      })))) // </Container>\n\n    );\n  }\n\n}\n\nexport default withData(MyApp);","map":{"version":3,"sources":["C:/Users/Wade/Documents/AHCA Web/Frontend AHCA/pages/_app.js"],"names":["App","Container","Page","ApolloProvider","withData","MyApp","getInitialProps","Component","ctx","pageProps","query","render","apollo","props"],"mappings":";;;;AAAA,OAAOA,GAAP,IAAcC,SAAd,QAA+B,UAA/B;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,SAASC,cAAT,QAA+B,cAA/B;AACA,OAAOC,QAAP,MAAqB,iBAArB;;AAEA,MAAMC,KAAN,SAAoBL,GAApB,CAAwB;AACtB,eAAaM,eAAb,CAA6B;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,GAA7B,EAAiD;AAC/C,QAAIC,SAAS,GAAG,EAAhB;;AACA,QAAIF,SAAS,CAACD,eAAd,EAA+B;AAC7BG,MAAAA,SAAS,GAAG,MAAMF,SAAS,CAACD,eAAV,CAA0BE,GAA1B,CAAlB;AACD,KAJ8C,CAK/C;;;AACAC,IAAAA,SAAS,CAACC,KAAV,GAAkBF,GAAG,CAACE,KAAtB;AACA,WAAO;AAAED,MAAAA;AAAF,KAAP;AACD;;AACDE,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEJ,MAAAA,SAAF;AAAaK,MAAAA,MAAb;AAAqBH,MAAAA;AAArB,QAAmC,KAAKI,KAA9C;AAEA,WACE;AACA,YAAC,cAAD;AAAgB,QAAA,MAAM,EAAED,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,SAAD,eAAeH,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,CADF,CAFF,CAOE;;AAPF;AASD;;AAtBqB;;AAyBxB,eAAeL,QAAQ,CAACC,KAAD,CAAvB","sourcesContent":["import App, { Container } from \"next/app\";\r\nimport Page from \"../components/Page\";\r\nimport { ApolloProvider } from \"react-apollo\";\r\nimport withData from \"../lib/withData\";\r\n\r\nclass MyApp extends App {\r\n  static async getInitialProps({ Component, ctx }) {\r\n    let pageProps = {};\r\n    if (Component.getInitialProps) {\r\n      pageProps = await Component.getInitialProps(ctx);\r\n    }\r\n    // this exposes the query to the user\r\n    pageProps.query = ctx.query;\r\n    return { pageProps };\r\n  }\r\n  render() {\r\n    const { Component, apollo, pageProps } = this.props;\r\n\r\n    return (\r\n      // <Container>\r\n      <ApolloProvider client={apollo}>\r\n        <Page>\r\n          <Component {...pageProps} />\r\n        </Page>\r\n      </ApolloProvider>\r\n      // </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withData(MyApp);\r\n"]},"metadata":{},"sourceType":"module"}