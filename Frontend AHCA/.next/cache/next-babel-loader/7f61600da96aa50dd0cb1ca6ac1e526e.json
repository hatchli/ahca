{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _Array$from from \"@babel/runtime-corejs2/core-js/array/from\";\nimport _parseFloat from \"@babel/runtime-corejs2/core-js/parse-float\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Wade\\\\Documents\\\\AHCA Web\\\\Frontend AHCA\\\\components\\\\CreateItem.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from \"react\";\nimport { Box, Flex } from \"rebass\";\nimport { Mutation } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport Router from \"next/router\";\nimport Form from \"./styles/Form\";\nimport Error from \"./ErrorMessage\";\nimport WidthStyles from \"./styles/WidthStyles\";\nconst possibleCategories = [\"AirConditioner\", \"Furnace\", \"WholeHomeManifold\", \"TanklessWaterSystem\", \"WaterSofteners\", \"WaterFiltration\", \"Plumbing\", \"HeatPumps\", \"DuctlessMiniSplit\"];\nconst CREATE_ITEM_MUTATION = gql`\n  mutation CREATE_ITEM_MUTATION(\n    $title: String!\n    $description: String!\n    $feature: String!\n    $highlight: String!\n    $sale: Boolean\n    $categories: [Category]\n    $price: Int!\n    $image: String\n    $largeImage: String\n    $image1: String\n    $largeImage1: String\n    $image2: String\n    $largeImage2: String\n  ) {\n    createItem(\n      title: $title\n      description: $description\n      feature: $feature\n      highlight: $highlight\n      sale: $sale\n      categories: $categories\n      price: $price\n      image: $image\n      largeImage: $largeImage\n      image1: $image1\n      largeImage1: $largeImage1\n      image2: $image2\n      largeImage2: $largeImage2\n    ) {\n      id\n    }\n  }\n`;\n\nclass CreateItem extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      title: \"\",\n      description: \"\",\n      feature: \"\",\n      highlight: \"\",\n      sale: false,\n      categories: \"\",\n      imageArray: [],\n      largeImageArray: [],\n      image: \"\",\n      largeImage: \"\",\n      image1: \"\",\n      largeImage1: \"\",\n      image2: \"\",\n      largeImage2: \"\",\n      price: 0\n    });\n\n    _defineProperty(this, \"handleChange\", e => {\n      const {\n        name,\n        type,\n        value\n      } = e.target;\n      const val = type === \"number\" ? _parseFloat(value) : value;\n      this.setState({\n        [name]: val\n      });\n    });\n\n    _defineProperty(this, \"handleCategories\", e => {\n      this.setState({\n        value: e.target.value\n      });\n    });\n\n    _defineProperty(this, \"uploadFileHandler\", async e => {\n      console.log(\"... uploading\");\n      const files = e.target.files;\n      const data = new FormData();\n\n      _Array$from(files).map(async file => {\n        data.append(\"file\", file);\n        data.append(\"upload_preset\", \"americansavings\");\n        const res = await fetch(\"https://api.cloudinary.com/v1_1/americansavings/image/upload\", {\n          method: \"POST\",\n          body: data\n        });\n        const fileResp = await res.json();\n        console.log(\"fileResp\", fileResp);\n\n        if (!fileResp.error) {\n          this.setState(prevState => _objectSpread({}, prevState, {\n            imageArray: [...prevState.imageArray, fileResp.secure_url],\n            largeImageArray: [...prevState.largeImageArray, fileResp.eager[0].secure_url]\n          }));\n        } else {\n          this.setState(prevState => _objectSpread({}, prevState, {\n            imageArray: [...prevState.image],\n            largeImageArray: [...prevState.largeImage]\n          }));\n        }\n      });\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log(\"prevState\", prevState.imageArray);\n    console.log(\"state of imageArray\", this.state.imageArray);\n\n    if (this.state.imageArray !== prevState.imageArray) {\n      this.setState(prevState => _objectSpread({}, prevState, {\n        image: this.state.imageArray[0],\n        largeImage: this.state.largeImageArray[0],\n        image1: this.state.imageArray[1],\n        largeImage1: this.state.largeImageArray[1],\n        image2: this.state.imageArray[2],\n        largeImage2: this.state.largeImageArray[2]\n      }));\n    }\n  }\n\n  render() {\n    return __jsx(WidthStyles, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, __jsx(Mutation, {\n      mutation: CREATE_ITEM_MUTATION,\n      variables: this.state,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, (createItem, {\n      loading,\n      error\n    }) => __jsx(Form, {\n      \"data-test\": \"form\",\n      onSubmit: async e => {\n        // Stop the form from submitting\n        e.preventDefault(); // call the mutation\n\n        const res = await createItem(); // change them to the single item page\n\n        console.log(res);\n        Router.push({\n          pathname: \"/item\",\n          query: {\n            id: res.data.createItem.id\n          }\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, __jsx(Error, {\n      error: error,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }), __jsx(\"fieldset\", {\n      disabled: loading,\n      \"aria-busy\": loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, __jsx(Flex, {\n      px: 2,\n      justifyContent: \"space-between\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      htmlFor: \"file\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, \"Images\", __jsx(\"input\", {\n      multiple: true,\n      type: \"file\",\n      id: \"file\",\n      name: \"file\",\n      placeholder: \"Upload an image\",\n      required: true,\n      onChange: this.uploadFileHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }))), __jsx(\"label\", {\n      htmlFor: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, \"Title\", __jsx(\"input\", {\n      type: \"text\",\n      id: \"title\",\n      name: \"title\",\n      placeholder: \"Title\",\n      required: true,\n      value: this.state.title,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    })), __jsx(\"label\", {\n      htmlFor: \"price\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, \"Price\", __jsx(\"input\", {\n      type: \"number\",\n      id: \"price\",\n      name: \"price\",\n      placeholder: \"Price\",\n      required: true,\n      value: this.state.price,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    })), __jsx(\"label\", {\n      htmlFor: \"sale\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, \"Sale\", __jsx(\"input\", {\n      type: \"checkbox\",\n      id: \"sale\",\n      name: \"sale\",\n      value: this.state.sale,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    })), __jsx(\"label\", {\n      htmlFor: \"category\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, \"Category\", __jsx(\"select\", {\n      value: this.state.category,\n      name: \"category\",\n      id: \"category\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, __jsx(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, \"--Please choose an option--\"), possibleCategories.map(category => __jsx(\"option\", {\n      key: category,\n      value: category,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, category)))), __jsx(\"label\", {\n      htmlFor: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, \"Description\", __jsx(\"textarea\", {\n      id: \"description\",\n      name: \"description\",\n      placeholder: \"Enter A Description\",\n      required: true,\n      value: this.state.description,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    })), __jsx(\"label\", {\n      htmlFor: \"feature\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, \"feature\", __jsx(\"textarea\", {\n      id: \"feature\",\n      name: \"feature\",\n      placeholder: \"Enter A Feature\",\n      required: true,\n      value: this.state.feature,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    })), __jsx(\"label\", {\n      htmlFor: \"highlight\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, \"Highlight\", __jsx(\"textarea\", {\n      id: \"highlight\",\n      name: \"highlight\",\n      placeholder: \"Enter A Highlight\",\n      required: true,\n      value: this.state.highlight,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    })), __jsx(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, \"Submit\")))));\n  }\n\n}\n\nexport default CreateItem;\nexport { CREATE_ITEM_MUTATION };","map":{"version":3,"sources":["C:/Users/Wade/Documents/AHCA Web/Frontend AHCA/components/CreateItem.js"],"names":["React","Component","Box","Flex","Mutation","gql","Router","Form","Error","WidthStyles","possibleCategories","CREATE_ITEM_MUTATION","CreateItem","title","description","feature","highlight","sale","categories","imageArray","largeImageArray","image","largeImage","image1","largeImage1","image2","largeImage2","price","e","name","type","value","target","val","setState","console","log","files","data","FormData","map","file","append","res","fetch","method","body","fileResp","json","error","prevState","secure_url","eager","componentDidUpdate","prevProps","state","render","createItem","loading","preventDefault","push","pathname","query","id","uploadFileHandler","handleChange","category"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Box, Flex } from \"rebass\";\r\nimport { Mutation } from \"react-apollo\";\r\nimport gql from \"graphql-tag\";\r\nimport Router from \"next/router\";\r\nimport Form from \"./styles/Form\";\r\nimport Error from \"./ErrorMessage\";\r\nimport WidthStyles from \"./styles/WidthStyles\";\r\n\r\nconst possibleCategories = [\r\n  \"AirConditioner\",\r\n  \"Furnace\",\r\n  \"WholeHomeManifold\",\r\n  \"TanklessWaterSystem\",\r\n  \"WaterSofteners\",\r\n  \"WaterFiltration\",\r\n  \"Plumbing\",\r\n  \"HeatPumps\",\r\n  \"DuctlessMiniSplit\"\r\n];\r\n\r\nconst CREATE_ITEM_MUTATION = gql`\r\n  mutation CREATE_ITEM_MUTATION(\r\n    $title: String!\r\n    $description: String!\r\n    $feature: String!\r\n    $highlight: String!\r\n    $sale: Boolean\r\n    $categories: [Category]\r\n    $price: Int!\r\n    $image: String\r\n    $largeImage: String\r\n    $image1: String\r\n    $largeImage1: String\r\n    $image2: String\r\n    $largeImage2: String\r\n  ) {\r\n    createItem(\r\n      title: $title\r\n      description: $description\r\n      feature: $feature\r\n      highlight: $highlight\r\n      sale: $sale\r\n      categories: $categories\r\n      price: $price\r\n      image: $image\r\n      largeImage: $largeImage\r\n      image1: $image1\r\n      largeImage1: $largeImage1\r\n      image2: $image2\r\n      largeImage2: $largeImage2\r\n    ) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nclass CreateItem extends Component {\r\n  state = {\r\n    title: \"\",\r\n    description: \"\",\r\n    feature: \"\",\r\n    highlight: \"\",\r\n    sale: false,\r\n    categories: \"\",\r\n    imageArray: [],\r\n    largeImageArray: [],\r\n    image: \"\",\r\n    largeImage: \"\",\r\n    image1: \"\",\r\n    largeImage1: \"\",\r\n    image2: \"\",\r\n    largeImage2: \"\",\r\n    price: 0\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    console.log(\"prevState\", prevState.imageArray);\r\n    console.log(\"state of imageArray\", this.state.imageArray);\r\n    if (this.state.imageArray !== prevState.imageArray) {\r\n      this.setState(prevState => ({\r\n        ...prevState,\r\n        image: this.state.imageArray[0],\r\n        largeImage: this.state.largeImageArray[0],\r\n        image1: this.state.imageArray[1],\r\n        largeImage1: this.state.largeImageArray[1],\r\n        image2: this.state.imageArray[2],\r\n        largeImage2: this.state.largeImageArray[2]\r\n      }));\r\n    }\r\n  }\r\n\r\n  handleChange = e => {\r\n    const { name, type, value } = e.target;\r\n    const val = type === \"number\" ? parseFloat(value) : value;\r\n    this.setState({ [name]: val });\r\n  };\r\n\r\n  handleCategories = e => {\r\n    this.setState({ value: e.target.value });\r\n  };\r\n\r\n  uploadFileHandler = async e => {\r\n    console.log(\"... uploading\");\r\n    const files = e.target.files;\r\n\r\n    const data = new FormData();\r\n    Array.from(files).map(async file => {\r\n      data.append(\"file\", file);\r\n      data.append(\"upload_preset\", \"americansavings\");\r\n\r\n      const res = await fetch(\r\n        \"https://api.cloudinary.com/v1_1/americansavings/image/upload\",\r\n        {\r\n          method: \"POST\",\r\n          body: data\r\n        }\r\n      );\r\n      const fileResp = await res.json();\r\n      console.log(\"fileResp\", fileResp);\r\n\r\n      if (!fileResp.error) {\r\n        this.setState(prevState => ({\r\n          ...prevState,\r\n          imageArray: [...prevState.imageArray, fileResp.secure_url],\r\n          largeImageArray: [\r\n            ...prevState.largeImageArray,\r\n            fileResp.eager[0].secure_url\r\n          ]\r\n        }));\r\n      } else {\r\n        this.setState(prevState => ({\r\n          ...prevState,\r\n          imageArray: [...prevState.image],\r\n          largeImageArray: [...prevState.largeImage]\r\n        }));\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <WidthStyles>\r\n        <Mutation mutation={CREATE_ITEM_MUTATION} variables={this.state}>\r\n          {(createItem, { loading, error }) => (\r\n            <Form\r\n              data-test=\"form\"\r\n              onSubmit={async e => {\r\n                // Stop the form from submitting\r\n                e.preventDefault();\r\n                // call the mutation\r\n                const res = await createItem();\r\n                // change them to the single item page\r\n                console.log(res);\r\n                Router.push({\r\n                  pathname: \"/item\",\r\n                  query: { id: res.data.createItem.id }\r\n                });\r\n              }}\r\n            >\r\n              <Error error={error} />\r\n              <fieldset disabled={loading} aria-busy={loading}>\r\n                <Flex px={2} justifyContent=\"space-between\">\r\n                  <label htmlFor=\"file\">\r\n                    Images\r\n                    <input\r\n                      multiple\r\n                      type=\"file\"\r\n                      id=\"file\"\r\n                      name=\"file\"\r\n                      placeholder=\"Upload an image\"\r\n                      required\r\n                      onChange={this.uploadFileHandler}\r\n                    />\r\n                    {/* {this.state.image &&\r\n                      this.state.image.map(image => (\r\n                        <img width=\"200\" src={image} alt=\"Upload Preview\" />\r\n                      ))} */}\r\n                  </label>\r\n                </Flex>\r\n\r\n                <label htmlFor=\"title\">\r\n                  Title\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"title\"\r\n                    name=\"title\"\r\n                    placeholder=\"Title\"\r\n                    required\r\n                    value={this.state.title}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </label>\r\n\r\n                <label htmlFor=\"price\">\r\n                  Price\r\n                  <input\r\n                    type=\"number\"\r\n                    id=\"price\"\r\n                    name=\"price\"\r\n                    placeholder=\"Price\"\r\n                    required\r\n                    value={this.state.price}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </label>\r\n                <label htmlFor=\"sale\">\r\n                  Sale\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    id=\"sale\"\r\n                    name=\"sale\"\r\n                    value={this.state.sale}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </label>\r\n                <label htmlFor=\"category\">\r\n                  Category\r\n                  <select\r\n                    value={this.state.category}\r\n                    name=\"category\"\r\n                    id=\"category\"\r\n                    onChange={this.handleChange}\r\n                  >\r\n                    <option value=\"\">--Please choose an option--</option>\r\n                    {possibleCategories.map(category => (\r\n                      <option key={category} value={category}>\r\n                        {category}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </label>\r\n\r\n                <label htmlFor=\"description\">\r\n                  Description\r\n                  <textarea\r\n                    id=\"description\"\r\n                    name=\"description\"\r\n                    placeholder=\"Enter A Description\"\r\n                    required\r\n                    value={this.state.description}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </label>\r\n                <label htmlFor=\"feature\">\r\n                  feature\r\n                  <textarea\r\n                    id=\"feature\"\r\n                    name=\"feature\"\r\n                    placeholder=\"Enter A Feature\"\r\n                    required\r\n                    value={this.state.feature}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </label>\r\n                <label htmlFor=\"highlight\">\r\n                  Highlight\r\n                  <textarea\r\n                    id=\"highlight\"\r\n                    name=\"highlight\"\r\n                    placeholder=\"Enter A Highlight\"\r\n                    required\r\n                    value={this.state.highlight}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </label>\r\n                <button type=\"submit\">Submit</button>\r\n              </fieldset>\r\n            </Form>\r\n          )}\r\n        </Mutation>\r\n      </WidthStyles>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreateItem;\r\nexport { CREATE_ITEM_MUTATION };\r\n"]},"metadata":{},"sourceType":"module"}