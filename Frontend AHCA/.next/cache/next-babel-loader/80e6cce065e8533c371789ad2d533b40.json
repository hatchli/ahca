{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Wade\\\\Documents\\\\AHCA Web\\\\Frontend AHCA\\\\components\\\\SignUp.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport { Mutation } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport Form from \"./styles/Form\";\nimport Error from \"./ErrorMessage\";\nimport { CURRENT_USER_QUERY } from \"./User\";\nconst SIGNUP_MUTATION = gql`\n  mutation SIGNUP_MUTATION(\n    $email: String!\n    $name: String!\n    $password: String!\n  ) {\n    signup(email: $email, name: $name, password: $password) {\n      id\n      email\n      name\n    }\n  }\n`;\nexport default class Signup extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      name: \"\",\n      password: \"\",\n      email: \"\"\n    });\n\n    _defineProperty(this, \"saveToState\", e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    });\n  }\n\n  render() {\n    return __jsx(Mutation, {\n      mutation: SIGNUP_MUTATION,\n      variables: this.state,\n      refetchQueries: [{\n        query: CURRENT_USER_QUERY\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, (signup, {\n      error,\n      loading\n    }) => {\n      return __jsx(Form, {\n        method: \"post\",\n        onSubmit: async e => {\n          e.preventDefault();\n          const res = await signup();\n          this.setState({\n            name: \"\",\n            password: \"\",\n            email: \"\"\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, __jsx(\"fieldset\", {\n        disabled: loading,\n        \"aria-busy\": loading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, __jsx(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \" Signup for an account\"), __jsx(Error, {\n        error: error,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }), __jsx(\"label\", {\n        htmlFor: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"Email\", __jsx(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        placeholder: \"email\",\n        value: this.state.email,\n        onChange: this.saveToState,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      })), __jsx(\"label\", {\n        htmlFor: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"Name\", __jsx(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        placeholder: \"name\",\n        value: this.state.name,\n        onChange: this.saveToState,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      })), __jsx(\"label\", {\n        htmlFor: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"Password\", __jsx(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        placeholder: \"password\",\n        value: this.state.password,\n        onChange: this.saveToState,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      })), __jsx(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Sign Up\")));\n    });\n  }\n\n}\nexport { SIGNUP_MUTATION };","map":{"version":3,"sources":["C:/Users/Wade/Documents/AHCA Web/Frontend AHCA/components/SignUp.js"],"names":["React","Component","Mutation","gql","Form","Error","CURRENT_USER_QUERY","SIGNUP_MUTATION","Signup","name","password","email","e","setState","target","value","render","state","query","signup","error","loading","preventDefault","res","saveToState"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Mutation } from \"react-apollo\";\r\nimport gql from \"graphql-tag\";\r\nimport Form from \"./styles/Form\";\r\nimport Error from \"./ErrorMessage\";\r\nimport { CURRENT_USER_QUERY } from \"./User\";\r\n\r\nconst SIGNUP_MUTATION = gql`\r\n  mutation SIGNUP_MUTATION(\r\n    $email: String!\r\n    $name: String!\r\n    $password: String!\r\n  ) {\r\n    signup(email: $email, name: $name, password: $password) {\r\n      id\r\n      email\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\nexport default class Signup extends Component {\r\n  state = {\r\n    name: \"\",\r\n    password: \"\",\r\n    email: \"\"\r\n  };\r\n  saveToState = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  render() {\r\n    return (\r\n      <Mutation\r\n        mutation={SIGNUP_MUTATION}\r\n        variables={this.state}\r\n        refetchQueries={[{ query: CURRENT_USER_QUERY }]}\r\n      >\r\n        {(signup, { error, loading }) => {\r\n          return (\r\n            <Form\r\n              method=\"post\"\r\n              onSubmit={async e => {\r\n                e.preventDefault();\r\n                const res = await signup();\r\n                this.setState({ name: \"\", password: \"\", email: \"\" });\r\n              }}\r\n            >\r\n              <fieldset disabled={loading} aria-busy={loading}>\r\n                <h2> Signup for an account</h2>\r\n                <Error error={error} />\r\n                <label htmlFor=\"email\">\r\n                  Email\r\n                  <input\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    placeholder=\"email\"\r\n                    value={this.state.email}\r\n                    onChange={this.saveToState}\r\n                  />\r\n                </label>\r\n                <label htmlFor=\"name\">\r\n                  Name\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    placeholder=\"name\"\r\n                    value={this.state.name}\r\n                    onChange={this.saveToState}\r\n                  />\r\n                </label>\r\n                <label htmlFor=\"password\">\r\n                  Password\r\n                  <input\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    placeholder=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.saveToState}\r\n                  />\r\n                </label>\r\n                <button type=\"submit\">Sign Up</button>\r\n              </fieldset>\r\n            </Form>\r\n          );\r\n        }}\r\n      </Mutation>\r\n    );\r\n  }\r\n}\r\n\r\nexport { SIGNUP_MUTATION };\r\n"]},"metadata":{},"sourceType":"module"}