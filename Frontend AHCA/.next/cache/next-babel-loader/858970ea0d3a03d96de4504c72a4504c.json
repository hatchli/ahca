{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Users\\\\Wade\\\\Documents\\\\AHCA Web\\\\Frontend AHCA\\\\components\\\\RemoveFromCart.js\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation removeFromCart($id: ID!) {\\n    removeFromCart(id: $id) {\\n      id\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport { Mutation } from \"react-apollo\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport gql from \"graphql-tag\";\nimport { CURRENT_USER_QUERY } from \"./User\";\nvar REMOVE_FROM_CART_MUTATION = gql(_templateObject());\nvar BigButton = styled.button.withConfig({\n  displayName: \"RemoveFromCart__BigButton\",\n  componentId: \"emvtd6-0\"\n})([\"max-width:30px;font-size:3rem;background:none;border:0;margin:0 auto;&:hover{color:\", \";cursor:pointer;}\"], function (props) {\n  return props.theme.red;\n});\n\nvar RemoveFromCart =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(RemoveFromCart, _React$Component);\n\n  function RemoveFromCart() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, RemoveFromCart);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(RemoveFromCart)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"update\", function (cache, payload) {\n      // read the cache\n      var data = cache.readQuery({\n        query: CURRENT_USER_QUERY\n      }); //remove item from the cart\n\n      var cartItemId = payload.data.removeFromCart.id;\n      data.me.cart = data.me.cart.filter(function (cartItem) {\n        return cartItem.id !== cartItemId;\n      }); // write back to the cache\n\n      cache.writeQuery({\n        query: CURRENT_USER_QUERY,\n        data: data\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(RemoveFromCart, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(Mutation, {\n        mutation: REMOVE_FROM_CART_MUTATION,\n        variables: {\n          id: this.props.id\n        },\n        update: this.update,\n        optimisticResponse: {\n          __typename: \"Mutation\",\n          removeFromCart: {\n            __typename: \"CartItem\",\n            id: this.props.id\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, function (removeFromCart, _ref) {\n        var loading = _ref.loading,\n            error = _ref.error;\n        return __jsx(BigButton, {\n          disabled: loading,\n          onClick: function onClick() {\n            removeFromCart()[\"catch\"](function (err) {\n              return alert(err.message);\n            });\n          },\n          title: \"Delete Item\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, \"\\xD7\");\n      });\n    }\n  }]);\n\n  return RemoveFromCart;\n}(React.Component);\n\n_defineProperty(RemoveFromCart, \"propTypes\", {\n  id: PropTypes.string.isRequired\n});\n\nexport default RemoveFromCart;\nexport { REMOVE_FROM_CART_MUTATION };","map":{"version":3,"sources":["C:/Users/Wade/Documents/AHCA Web/Frontend AHCA/components/RemoveFromCart.js"],"names":["React","Mutation","styled","PropTypes","gql","CURRENT_USER_QUERY","REMOVE_FROM_CART_MUTATION","BigButton","button","props","theme","red","RemoveFromCart","cache","payload","data","readQuery","query","cartItemId","removeFromCart","id","me","cart","filter","cartItem","writeQuery","update","__typename","loading","error","err","alert","message","Component","string","isRequired"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,kBAAT,QAAmC,QAAnC;AAEA,IAAMC,yBAAyB,GAAGF,GAAH,mBAA/B;AAQA,IAAMG,SAAS,GAAGL,MAAM,CAACM,MAAV;AAAA;AAAA;AAAA,iHAOF,UAAAC,KAAK;AAAA,SAAIA,KAAK,CAACC,KAAN,CAAYC,GAAhB;AAAA,CAPH,CAAf;;IAYMC,c;;;;;;;;;;;;;;;;;;6DAKK,UAACC,KAAD,EAAQC,OAAR,EAAoB;AAC3B;AACA,UAAMC,IAAI,GAAGF,KAAK,CAACG,SAAN,CAAgB;AAAEC,QAAAA,KAAK,EAAEZ;AAAT,OAAhB,CAAb,CAF2B,CAG3B;;AACA,UAAMa,UAAU,GAAGJ,OAAO,CAACC,IAAR,CAAaI,cAAb,CAA4BC,EAA/C;AACAL,MAAAA,IAAI,CAACM,EAAL,CAAQC,IAAR,GAAeP,IAAI,CAACM,EAAL,CAAQC,IAAR,CAAaC,MAAb,CAAoB,UAAAC,QAAQ;AAAA,eAAIA,QAAQ,CAACJ,EAAT,KAAgBF,UAApB;AAAA,OAA5B,CAAf,CAL2B,CAM3B;;AACAL,MAAAA,KAAK,CAACY,UAAN,CAAiB;AAAER,QAAAA,KAAK,EAAEZ,kBAAT;AAA6BU,QAAAA,IAAI,EAAJA;AAA7B,OAAjB;AACD,K;;;;;;;6BACQ;AACP,aACE,MAAC,QAAD;AACE,QAAA,QAAQ,EAAET,yBADZ;AAEE,QAAA,SAAS,EAAE;AAAEc,UAAAA,EAAE,EAAE,KAAKX,KAAL,CAAWW;AAAjB,SAFb;AAGE,QAAA,MAAM,EAAE,KAAKM,MAHf;AAIE,QAAA,kBAAkB,EAAE;AAClBC,UAAAA,UAAU,EAAE,UADM;AAElBR,UAAAA,cAAc,EAAE;AACdQ,YAAAA,UAAU,EAAE,UADE;AAEdP,YAAAA,EAAE,EAAE,KAAKX,KAAL,CAAWW;AAFD;AAFE,SAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAYG,UAACD,cAAD;AAAA,YAAmBS,OAAnB,QAAmBA,OAAnB;AAAA,YAA4BC,KAA5B,QAA4BA,KAA5B;AAAA,eACC,MAAC,SAAD;AACE,UAAA,QAAQ,EAAED,OADZ;AAEE,UAAA,OAAO,EAAE,mBAAM;AACbT,YAAAA,cAAc,WAAd,CAAuB,UAAAW,GAAG;AAAA,qBAAIC,KAAK,CAACD,GAAG,CAACE,OAAL,CAAT;AAAA,aAA1B;AACD,WAJH;AAKE,UAAA,KAAK,EAAC,aALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD;AAAA,OAZH,CADF;AA0BD;;;;EAzC0BhC,KAAK,CAACiC,S;;gBAA7BrB,c,eACe;AACjBQ,EAAAA,EAAE,EAAEjB,SAAS,CAAC+B,MAAV,CAAiBC;AADJ,C;;AA2CrB,eAAevB,cAAf;AACA,SAASN,yBAAT","sourcesContent":["import React from \"react\";\r\nimport { Mutation } from \"react-apollo\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\nimport gql from \"graphql-tag\";\r\nimport { CURRENT_USER_QUERY } from \"./User\";\r\n\r\nconst REMOVE_FROM_CART_MUTATION = gql`\r\n  mutation removeFromCart($id: ID!) {\r\n    removeFromCart(id: $id) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nconst BigButton = styled.button`\r\n  max-width: 30px;\r\n  font-size: 3rem;\r\n  background: none;\r\n  border: 0;\r\n  margin: 0 auto;\r\n  &:hover {\r\n    color: ${props => props.theme.red};\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nclass RemoveFromCart extends React.Component {\r\n  static propTypes = {\r\n    id: PropTypes.string.isRequired\r\n  };\r\n  // called as soon as we get a response back from the server after a mutation has been performed\r\n  update = (cache, payload) => {\r\n    // read the cache\r\n    const data = cache.readQuery({ query: CURRENT_USER_QUERY });\r\n    //remove item from the cart\r\n    const cartItemId = payload.data.removeFromCart.id;\r\n    data.me.cart = data.me.cart.filter(cartItem => cartItem.id !== cartItemId);\r\n    // write back to the cache\r\n    cache.writeQuery({ query: CURRENT_USER_QUERY, data });\r\n  };\r\n  render() {\r\n    return (\r\n      <Mutation\r\n        mutation={REMOVE_FROM_CART_MUTATION}\r\n        variables={{ id: this.props.id }}\r\n        update={this.update}\r\n        optimisticResponse={{\r\n          __typename: \"Mutation\",\r\n          removeFromCart: {\r\n            __typename: \"CartItem\",\r\n            id: this.props.id\r\n          }\r\n        }}\r\n      >\r\n        {(removeFromCart, { loading, error }) => (\r\n          <BigButton\r\n            disabled={loading}\r\n            onClick={() => {\r\n              removeFromCart().catch(err => alert(err.message));\r\n            }}\r\n            title=\"Delete Item\"\r\n          >\r\n            &times;\r\n          </BigButton>\r\n        )}\r\n      </Mutation>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RemoveFromCart;\r\nexport { REMOVE_FROM_CART_MUTATION };\r\n"]},"metadata":{},"sourceType":"module"}