{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _Array$from from \"@babel/runtime-corejs2/core-js/array/from\";\nimport _parseFloat from \"@babel/runtime-corejs2/core-js/parse-float\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Wade\\\\Documents\\\\AHCA Web\\\\Frontend AHCA\\\\components\\\\CreateItem.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from \"react\";\nimport { Box, Flex } from \"rebass\";\nimport { Mutation } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport Router from \"next/router\";\nimport Form from \"./styles/Form\";\nimport Error from \"./ErrorMessage\";\nimport WidthStyles from \"./styles/WidthStyles\";\nconst possibleCategories = [\"AIRCONDITIONER\", \"FURNACE\", \"WHOLEHOMEMANIFOLD\", \"TANKLESSWATERSYSTEM\", \"WATERSOFTENER\", \"WATERFILTRATION\", \"PLUMBING\", \"HEATPUMP\", \"DUCTLESSMINISPLIT\"];\nconst promoCodes = [\"LACOUNTY2020\", \"SFCOUNTY2020\"];\nconst CREATE_ITEM_MUTATION = gql`\n  mutation CREATE_ITEM_MUTATION(\n    $title: String!\n    $description: String!\n    $features: [FeatureInput!]\n    $highlights: [HighlightInput!]\n    $sale: Boolean\n    $categories: [Category]\n    $price: Int!\n    $promo: [ValidPromoCodes]\n    $image: String\n    $largeImage: String\n    $image1: String\n    $largeImage1: String\n    $image2: String\n    $largeImage2: String\n  ) {\n    createItem(\n      title: $title\n      description: $description\n      features: $features\n      highlights: $highlights\n      sale: $sale\n      categories: $categories\n      price: $price\n      promo: $promo\n      image: $image\n      largeImage: $largeImage\n      image1: $image1\n      largeImage1: $largeImage1\n      image2: $image2\n      largeImage2: $largeImage2\n    ) {\n      id\n    }\n  }\n`;\n\nclass CreateItem extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      title: \"\",\n      description: \"\",\n      features: [\"Placeholder\"],\n      highlights: [],\n      sale: false,\n      categories: \"\",\n      imageArray: [],\n      largeImageArray: [],\n      image: \"\",\n      largeImage: \"\",\n      image1: \"\",\n      largeImage1: \"\",\n      image2: \"\",\n      largeImage2: \"\",\n      price: 0,\n      promo: []\n    });\n\n    _defineProperty(this, \"handleChange\", e => {\n      const {\n        name,\n        type,\n        value\n      } = e.target;\n      const val = type === \"number\" ? _parseFloat(value) : value;\n      console.log(\"name: \", name, \"val: \", val);\n      this.setState({\n        [name]: val\n      });\n    });\n\n    _defineProperty(this, \"keyPress\", e => {\n      if (e.keyCode == 13) {\n        this.setState({\n          features: this.state.features.concat(\"\")\n        });\n      }\n    });\n\n    _defineProperty(this, \"handleArrayChange\", e => {\n      this.setState({\n        promo: _Array$from(e.target.selectedOptions, item => item.value)\n      });\n    });\n\n    _defineProperty(this, \"uploadFileHandler\", async e => {\n      console.log(\"... uploading\");\n      const files = e.target.files;\n      const data = new FormData();\n\n      _Array$from(files).map(async file => {\n        data.append(\"file\", file);\n        data.append(\"upload_preset\", \"americansavings\");\n        const res = await fetch(\"https://api.cloudinary.com/v1_1/americansavings/image/upload\", {\n          method: \"POST\",\n          body: data\n        });\n        const fileResp = await res.json();\n        console.log(\"fileResp\", fileResp);\n\n        if (!fileResp.error) {\n          this.setState(prevState => _objectSpread({}, prevState, {\n            imageArray: [...prevState.imageArray, fileResp.secure_url],\n            largeImageArray: [...prevState.largeImageArray, fileResp.eager[0].secure_url]\n          }));\n        } else {\n          this.setState(prevState => _objectSpread({}, prevState, {\n            imageArray: [...prevState.image],\n            largeImageArray: [...prevState.largeImage]\n          }));\n        }\n      });\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log(\"prevState\", prevState.imageArray);\n    console.log(\"state of imageArray\", this.state.imageArray);\n\n    if (this.state.imageArray !== prevState.imageArray) {\n      this.setState(prevState => _objectSpread({}, prevState, {\n        image: this.state.imageArray[0],\n        largeImage: this.state.largeImageArray[0],\n        image1: this.state.imageArray[1],\n        largeImage1: this.state.largeImageArray[1],\n        image2: this.state.imageArray[2],\n        largeImage2: this.state.largeImageArray[2]\n      }));\n    }\n  }\n\n  render() {\n    return __jsx(WidthStyles, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, __jsx(Mutation, {\n      mutation: CREATE_ITEM_MUTATION,\n      variables: this.state,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, (createItem, {\n      loading,\n      error\n    }) => __jsx(Form, {\n      \"data-test\": \"form\",\n      onSubmit: async e => {\n        // Stop the form from submitting\n        e.preventDefault();\n        this.setState(state => ({\n          features: _Array$from(state.features.split(\"\\n\"))\n        })); // state.features.split(\"\\n\");\n        // call the mutation\n\n        const res = await createItem(); // change them to the single item page\n\n        console.log(res);\n        Router.push({\n          pathname: \"/item\",\n          query: {\n            id: res.data.createItem.id\n          }\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, __jsx(Error, {\n      error: error,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }), __jsx(\"fieldset\", {\n      disabled: loading,\n      \"aria-busy\": loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, __jsx(Flex, {\n      px: 2,\n      justifyContent: \"space-between\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      htmlFor: \"file\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, \"Images\", __jsx(\"input\", {\n      multiple: true,\n      type: \"file\",\n      id: \"file\",\n      name: \"file\",\n      placeholder: \"Upload an image\",\n      required: true,\n      onChange: this.uploadFileHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }))), __jsx(\"label\", {\n      htmlFor: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, \"Title\", __jsx(\"input\", {\n      type: \"text\",\n      id: \"title\",\n      name: \"title\",\n      placeholder: \"Title\",\n      required: true,\n      value: this.state.title,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    })), __jsx(\"label\", {\n      htmlFor: \"price\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, \"Price\", __jsx(\"input\", {\n      type: \"number\",\n      id: \"price\",\n      name: \"price\",\n      placeholder: \"Price\",\n      required: true,\n      value: this.state.price,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    })), __jsx(\"label\", {\n      htmlFor: \"sale\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, \"Sale\", __jsx(\"input\", {\n      type: \"checkbox\",\n      id: \"sale\",\n      name: \"sale\",\n      value: this.state.sale,\n      onChange: () => {\n        this.setState({\n          sale: !this.state.value\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    })), __jsx(\"label\", {\n      htmlFor: \"categories\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, \"Category\", __jsx(\"select\", {\n      value: this.state.categories,\n      name: \"categories\",\n      id: \"categories\",\n      onChange: this.handleChange,\n      multiple: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, possibleCategories.map(category => __jsx(\"option\", {\n      key: category,\n      value: category,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, category)))), __jsx(\"label\", {\n      htmlFor: \"categories\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, \"Promo\", __jsx(\"select\", {\n      value: this.state.promo,\n      name: \"promo\",\n      id: \"promo\" // type=\"array\"\n      ,\n      onChange: this.handleArrayChange,\n      multiple: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }, promoCodes.map(promo => __jsx(\"option\", {\n      key: promo,\n      value: promo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, promo)))), __jsx(\"label\", {\n      htmlFor: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }, \"Description\", __jsx(\"textarea\", {\n      id: \"description\",\n      name: \"description\",\n      placeholder: \"Enter A Description\",\n      required: true,\n      value: this.state.description,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    })), __jsx(\"label\", {\n      htmlFor: \"features\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }, \"Features\", _Object$keys(this.state.features).map((feature, i) => __jsx(\"textarea\", {\n      key: i,\n      type: \"features\",\n      placeholder: `${feature}` // supply a unique \"name\" attribute using string interpolation\n      ,\n      name: `features[${feature}]` // read each unique value by using a combination of\n      // bracket notation and string interpolation that matches\n      // the name attribute above\n      ,\n      value: this.state[`${feature}`],\n      onChange: this.handleChange,\n      onKeyDown: this.keyPress,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }))), __jsx(\"label\", {\n      htmlFor: \"highlights\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319\n      },\n      __self: this\n    }, \"Highlight\", __jsx(\"textarea\", {\n      id: \"highlight\",\n      name: \"highlight\",\n      placeholder: \"Enter A Highlight\",\n      required: true,\n      value: this.state.highlight,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      },\n      __self: this\n    })), __jsx(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330\n      },\n      __self: this\n    }, \"Submit\")))));\n  }\n\n}\n\nexport default CreateItem;\nexport { CREATE_ITEM_MUTATION };","map":{"version":3,"sources":["C:/Users/Wade/Documents/AHCA Web/Frontend AHCA/components/CreateItem.js"],"names":["React","Component","Box","Flex","Mutation","gql","Router","Form","Error","WidthStyles","possibleCategories","promoCodes","CREATE_ITEM_MUTATION","CreateItem","title","description","features","highlights","sale","categories","imageArray","largeImageArray","image","largeImage","image1","largeImage1","image2","largeImage2","price","promo","e","name","type","value","target","val","console","log","setState","keyCode","state","concat","selectedOptions","item","files","data","FormData","map","file","append","res","fetch","method","body","fileResp","json","error","prevState","secure_url","eager","componentDidUpdate","prevProps","render","createItem","loading","preventDefault","split","push","pathname","query","id","uploadFileHandler","handleChange","category","handleArrayChange","feature","i","keyPress","highlight"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Box, Flex } from \"rebass\";\r\nimport { Mutation } from \"react-apollo\";\r\nimport gql from \"graphql-tag\";\r\nimport Router from \"next/router\";\r\nimport Form from \"./styles/Form\";\r\nimport Error from \"./ErrorMessage\";\r\nimport WidthStyles from \"./styles/WidthStyles\";\r\n\r\nconst possibleCategories = [\r\n  \"AIRCONDITIONER\",\r\n  \"FURNACE\",\r\n  \"WHOLEHOMEMANIFOLD\",\r\n  \"TANKLESSWATERSYSTEM\",\r\n  \"WATERSOFTENER\",\r\n  \"WATERFILTRATION\",\r\n  \"PLUMBING\",\r\n  \"HEATPUMP\",\r\n  \"DUCTLESSMINISPLIT\"\r\n];\r\n\r\nconst promoCodes = [\"LACOUNTY2020\", \"SFCOUNTY2020\"];\r\n\r\nconst CREATE_ITEM_MUTATION = gql`\r\n  mutation CREATE_ITEM_MUTATION(\r\n    $title: String!\r\n    $description: String!\r\n    $features: [FeatureInput!]\r\n    $highlights: [HighlightInput!]\r\n    $sale: Boolean\r\n    $categories: [Category]\r\n    $price: Int!\r\n    $promo: [ValidPromoCodes]\r\n    $image: String\r\n    $largeImage: String\r\n    $image1: String\r\n    $largeImage1: String\r\n    $image2: String\r\n    $largeImage2: String\r\n  ) {\r\n    createItem(\r\n      title: $title\r\n      description: $description\r\n      features: $features\r\n      highlights: $highlights\r\n      sale: $sale\r\n      categories: $categories\r\n      price: $price\r\n      promo: $promo\r\n      image: $image\r\n      largeImage: $largeImage\r\n      image1: $image1\r\n      largeImage1: $largeImage1\r\n      image2: $image2\r\n      largeImage2: $largeImage2\r\n    ) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nclass CreateItem extends Component {\r\n  state = {\r\n    title: \"\",\r\n    description: \"\",\r\n    features: [\"Placeholder\"],\r\n    highlights: [],\r\n    sale: false,\r\n    categories: \"\",\r\n    imageArray: [],\r\n    largeImageArray: [],\r\n    image: \"\",\r\n    largeImage: \"\",\r\n    image1: \"\",\r\n    largeImage1: \"\",\r\n    image2: \"\",\r\n    largeImage2: \"\",\r\n    price: 0,\r\n    promo: []\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    console.log(\"prevState\", prevState.imageArray);\r\n    console.log(\"state of imageArray\", this.state.imageArray);\r\n    if (this.state.imageArray !== prevState.imageArray) {\r\n      this.setState(prevState => ({\r\n        ...prevState,\r\n        image: this.state.imageArray[0],\r\n        largeImage: this.state.largeImageArray[0],\r\n        image1: this.state.imageArray[1],\r\n        largeImage1: this.state.largeImageArray[1],\r\n        image2: this.state.imageArray[2],\r\n        largeImage2: this.state.largeImageArray[2]\r\n      }));\r\n    }\r\n  }\r\n\r\n  handleChange = e => {\r\n    const { name, type, value } = e.target;\r\n    const val = type === \"number\" ? parseFloat(value) : value;\r\n    console.log(\"name: \", name, \"val: \", val);\r\n    this.setState({ [name]: val });\r\n  };\r\n\r\n  keyPress = e => {\r\n    if (e.keyCode == 13) {\r\n      this.setState({\r\n        features: this.state.features.concat(\"\")\r\n      });\r\n    }\r\n  };\r\n\r\n  handleArrayChange = e => {\r\n    this.setState({\r\n      promo: Array.from(e.target.selectedOptions, item => item.value)\r\n    });\r\n  };\r\n\r\n  // handleFeatureHighlightChange = e => {\r\n  //   const { name, type, value } = e.target;\r\n  //   this.setState(state => ({\r\n  //     features: Array.from(value.split(\"\\n\"))\r\n  //   }));\r\n  // };\r\n\r\n  uploadFileHandler = async e => {\r\n    console.log(\"... uploading\");\r\n    const files = e.target.files;\r\n\r\n    const data = new FormData();\r\n    Array.from(files).map(async file => {\r\n      data.append(\"file\", file);\r\n      data.append(\"upload_preset\", \"americansavings\");\r\n\r\n      const res = await fetch(\r\n        \"https://api.cloudinary.com/v1_1/americansavings/image/upload\",\r\n        {\r\n          method: \"POST\",\r\n          body: data\r\n        }\r\n      );\r\n      const fileResp = await res.json();\r\n      console.log(\"fileResp\", fileResp);\r\n\r\n      if (!fileResp.error) {\r\n        this.setState(prevState => ({\r\n          ...prevState,\r\n          imageArray: [...prevState.imageArray, fileResp.secure_url],\r\n          largeImageArray: [\r\n            ...prevState.largeImageArray,\r\n            fileResp.eager[0].secure_url\r\n          ]\r\n        }));\r\n      } else {\r\n        this.setState(prevState => ({\r\n          ...prevState,\r\n          imageArray: [...prevState.image],\r\n          largeImageArray: [...prevState.largeImage]\r\n        }));\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <WidthStyles>\r\n        <Mutation mutation={CREATE_ITEM_MUTATION} variables={this.state}>\r\n          {(createItem, { loading, error }) => (\r\n            <Form\r\n              data-test=\"form\"\r\n              onSubmit={async e => {\r\n                // Stop the form from submitting\r\n                e.preventDefault();\r\n                this.setState(state => ({\r\n                  features: Array.from(state.features.split(\"\\n\"))\r\n                }));\r\n\r\n                // state.features.split(\"\\n\");\r\n                // call the mutation\r\n                const res = await createItem();\r\n                // change them to the single item page\r\n                console.log(res);\r\n                Router.push({\r\n                  pathname: \"/item\",\r\n                  query: { id: res.data.createItem.id }\r\n                });\r\n              }}\r\n            >\r\n              <Error error={error} />\r\n              <fieldset disabled={loading} aria-busy={loading}>\r\n                <Flex px={2} justifyContent=\"space-between\">\r\n                  <label htmlFor=\"file\">\r\n                    Images\r\n                    <input\r\n                      multiple\r\n                      type=\"file\"\r\n                      id=\"file\"\r\n                      name=\"file\"\r\n                      placeholder=\"Upload an image\"\r\n                      required\r\n                      onChange={this.uploadFileHandler}\r\n                    />\r\n                    {/* {this.state.image &&\r\n                      this.state.image.map(image => (\r\n                        <img width=\"200\" src={image} alt=\"Upload Preview\" />\r\n                      ))} */}\r\n                  </label>\r\n                </Flex>\r\n\r\n                <label htmlFor=\"title\">\r\n                  Title\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"title\"\r\n                    name=\"title\"\r\n                    placeholder=\"Title\"\r\n                    required\r\n                    value={this.state.title}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </label>\r\n\r\n                <label htmlFor=\"price\">\r\n                  Price\r\n                  <input\r\n                    type=\"number\"\r\n                    id=\"price\"\r\n                    name=\"price\"\r\n                    placeholder=\"Price\"\r\n                    required\r\n                    value={this.state.price}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </label>\r\n                <label htmlFor=\"sale\">\r\n                  Sale\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    id=\"sale\"\r\n                    name=\"sale\"\r\n                    value={this.state.sale}\r\n                    onChange={() => {\r\n                      this.setState({ sale: !this.state.value });\r\n                    }}\r\n                  />\r\n                </label>\r\n                <label htmlFor=\"categories\">\r\n                  Category\r\n                  <select\r\n                    value={this.state.categories}\r\n                    name=\"categories\"\r\n                    id=\"categories\"\r\n                    onChange={this.handleChange}\r\n                    multiple={false}\r\n                  >\r\n                    {possibleCategories.map(category => (\r\n                      <option key={category} value={category}>\r\n                        {category}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </label>\r\n                <label htmlFor=\"categories\">\r\n                  Promo\r\n                  <select\r\n                    value={this.state.promo}\r\n                    name=\"promo\"\r\n                    id=\"promo\"\r\n                    // type=\"array\"\r\n                    onChange={this.handleArrayChange}\r\n                    multiple\r\n                  >\r\n                    {promoCodes.map(promo => (\r\n                      <option key={promo} value={promo}>\r\n                        {promo}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </label>\r\n\r\n                <label htmlFor=\"description\">\r\n                  Description\r\n                  <textarea\r\n                    id=\"description\"\r\n                    name=\"description\"\r\n                    placeholder=\"Enter A Description\"\r\n                    required\r\n                    value={this.state.description}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </label>\r\n                <label htmlFor=\"features\">\r\n                  Features\r\n                  {Object.keys(this.state.features).map((feature, i) => (\r\n                    <textarea\r\n                      key={i}\r\n                      type=\"features\"\r\n                      placeholder={`${feature}`}\r\n                      // supply a unique \"name\" attribute using string interpolation\r\n                      name={`features[${feature}]`}\r\n                      // read each unique value by using a combination of\r\n                      // bracket notation and string interpolation that matches\r\n                      // the name attribute above\r\n                      value={this.state[`${feature}`]}\r\n                      onChange={this.handleChange}\r\n                      onKeyDown={this.keyPress}\r\n                    />\r\n                  ))}\r\n                  {/* <textarea\r\n                    id=\"features\"\r\n                    name=\"features\"\r\n                    placeholder=\"Enter Features\"\r\n                    required\r\n                    rows=\"5\"\r\n                    value={this.state.features}\r\n                    onChange={this.handleChange}\r\n                  /> */}\r\n                </label>\r\n                <label htmlFor=\"highlights\">\r\n                  Highlight\r\n                  <textarea\r\n                    id=\"highlight\"\r\n                    name=\"highlight\"\r\n                    placeholder=\"Enter A Highlight\"\r\n                    required\r\n                    value={this.state.highlight}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </label>\r\n                <button type=\"submit\">Submit</button>\r\n              </fieldset>\r\n            </Form>\r\n          )}\r\n        </Mutation>\r\n      </WidthStyles>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreateItem;\r\nexport { CREATE_ITEM_MUTATION };\r\n"]},"metadata":{},"sourceType":"module"}