{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Wade\\\\Documents\\\\AHCA Web\\\\Frontend AHCA\\\\pages\\\\item.js\";\nvar __jsx = React.createElement;\nimport SingleItem from \"../components/SingleItem\";\nimport React, { useState, useEffect } from \"react\";\nimport { Mutation } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport { CURRENT_USER_QUERY } from \"../components/User\";\nimport User from \"../components/User\";\nimport { ThemeProvider } from \"emotion-theming\";\nimport theme from \"../components/theme\";\nconst CREATE_GUEST_MUTATION = gql`\n  mutation CREATE_GUEST_MUTATION(\n    $email: String\n    $name: String\n    $password: String\n  ) {\n    createGuest(email: $email, name: $name, password: $password) {\n      id\n      email\n      name\n    }\n  }\n`;\n\nconst Item = (props, {\n  id\n}) => __jsx(ThemeProvider, {\n  theme: theme,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25\n  },\n  __self: this\n}, __jsx(User, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26\n  },\n  __self: this\n}, ({\n  data,\n  loading\n}) => {\n  let me = data ? data.me : null;\n  let guest = me === null ? true : false;\n  const {\n    0: guestState,\n    1: setGuestState\n  } = useState(guest);\n  return !guest ? __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, __jsx(SingleItem, {\n    id: props.query.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  })) : loading ? __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Loading\")) : __jsx(Mutation, {\n    mutation: CREATE_GUEST_MUTATION,\n    variables: {\n      id\n    },\n    refetchQueries: [{\n      query: CURRENT_USER_QUERY\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, (createGuest, {\n    loading,\n    error\n  }) => {\n    useEffect(() => {\n      async function fetchData() {\n        await createGuest();\n      }\n\n      !loading && guest && fetchData();\n    }, []);\n    setGuestState(false);\n    return __jsx(React.Fragment, null, __jsx(SingleItem, {\n      id: props.query.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }));\n  });\n}));\n\nexport default Item;","map":{"version":3,"sources":["C:/Users/Wade/Documents/AHCA Web/Frontend AHCA/pages/item.js"],"names":["SingleItem","React","useState","useEffect","Mutation","gql","CURRENT_USER_QUERY","User","ThemeProvider","theme","CREATE_GUEST_MUTATION","Item","props","id","data","loading","me","guest","guestState","setGuestState","query","createGuest","error","fetchData"],"mappings":";;AAAA,OAAOA,UAAP,MAAuB,0BAAvB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,kBAAT,QAAmC,oBAAnC;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AAEA,MAAMC,qBAAqB,GAAGL,GAAI;;;;;;;;;;;;CAAlC;;AAcA,MAAMM,IAAI,GAAG,CAACC,KAAD,EAAQ;AAAEC,EAAAA;AAAF,CAAR,KACX,MAAC,aAAD;AAAe,EAAA,KAAK,EAAEJ,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACG,CAAC;AAAEK,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAuB;AACtB,MAAIC,EAAE,GAAGF,IAAI,GAAGA,IAAI,CAACE,EAAR,GAAa,IAA1B;AACA,MAAIC,KAAK,GAAGD,EAAE,KAAK,IAAP,GAAc,IAAd,GAAqB,KAAjC;AACA,QAAM;AAAA,OAACE,UAAD;AAAA,OAAaC;AAAb,MAA8BjB,QAAQ,CAACe,KAAD,CAA5C;AACA,SAAO,CAACA,KAAD,GACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAY,IAAA,EAAE,EAAEL,KAAK,CAACQ,KAAN,CAAYP,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADK,GAIHE,OAAO,GACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CADS,GAKT,MAAC,QAAD;AACE,IAAA,QAAQ,EAAEL,qBADZ;AAEE,IAAA,SAAS,EAAE;AAAEG,MAAAA;AAAF,KAFb;AAGE,IAAA,cAAc,EAAE,CAAC;AAAEO,MAAAA,KAAK,EAAEd;AAAT,KAAD,CAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKG,CAACe,WAAD,EAAc;AAAEN,IAAAA,OAAF;AAAWO,IAAAA;AAAX,GAAd,KAAqC;AACpCnB,IAAAA,SAAS,CAAC,MAAM;AACd,qBAAeoB,SAAf,GAA2B;AACzB,cAAMF,WAAW,EAAjB;AACD;;AACD,OAACN,OAAD,IAAYE,KAAZ,IAAqBM,SAAS,EAA9B;AACD,KALQ,EAKN,EALM,CAAT;AAMAJ,IAAAA,aAAa,CAAC,KAAD,CAAb;AACA,WACE,4BACE,MAAC,UAAD;AAAY,MAAA,EAAE,EAAEP,KAAK,CAACQ,KAAN,CAAYP,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD,GAlBH,CATF;AA8BD,CAnCH,CADF,CADF;;AA0CA,eAAeF,IAAf","sourcesContent":["import SingleItem from \"../components/SingleItem\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Mutation } from \"react-apollo\";\r\nimport gql from \"graphql-tag\";\r\nimport { CURRENT_USER_QUERY } from \"../components/User\";\r\nimport User from \"../components/User\";\r\nimport { ThemeProvider } from \"emotion-theming\";\r\nimport theme from \"../components/theme\";\r\n\r\nconst CREATE_GUEST_MUTATION = gql`\r\n  mutation CREATE_GUEST_MUTATION(\r\n    $email: String\r\n    $name: String\r\n    $password: String\r\n  ) {\r\n    createGuest(email: $email, name: $name, password: $password) {\r\n      id\r\n      email\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\nconst Item = (props, { id }) => (\r\n  <ThemeProvider theme={theme}>\r\n    <User>\r\n      {({ data, loading }) => {\r\n        let me = data ? data.me : null;\r\n        let guest = me === null ? true : false;\r\n        const [guestState, setGuestState] = useState(guest);\r\n        return !guest ? (\r\n          <div>\r\n            <SingleItem id={props.query.id} />\r\n          </div>\r\n        ) : loading ? (\r\n          <div>\r\n            <h2>Loading</h2>\r\n          </div>\r\n        ) : (\r\n          <Mutation\r\n            mutation={CREATE_GUEST_MUTATION}\r\n            variables={{ id }}\r\n            refetchQueries={[{ query: CURRENT_USER_QUERY }]}\r\n          >\r\n            {(createGuest, { loading, error }) => {\r\n              useEffect(() => {\r\n                async function fetchData() {\r\n                  await createGuest();\r\n                }\r\n                !loading && guest && fetchData();\r\n              }, []);\r\n              setGuestState(false);\r\n              return (\r\n                <>\r\n                  <SingleItem id={props.query.id} />\r\n                </>\r\n              );\r\n            }}\r\n          </Mutation>\r\n        );\r\n      }}\r\n    </User>\r\n  </ThemeProvider>\r\n);\r\n\r\nexport default Item;\r\n"]},"metadata":{},"sourceType":"module"}