{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Wade\\\\Documents\\\\AHCA Web\\\\Frontend AHCA\\\\components\\\\AddToCart.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { Mutation } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport { CURRENT_USER_QUERY } from \"./User\";\nimport User from \"./User\";\nconst ADD_TO_CART_MUTATION = gql`\n  mutation addToCart($id: ID!) {\n    addToCart(id: $id) {\n      id\n      quantity\n    }\n  }\n`;\nconst CREATE_GUEST_MUTATION = gql`\n  mutation CREATE_GUEST_MUTATION(\n    $email: String\n    $name: String\n    $password: String\n  ) {\n    createGuest(email: $email, name: $name, password: $password) {\n      id\n      email\n      name\n    }\n  }\n`;\n\nconst AddToCart = ({\n  id\n}) => __jsx(User, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31\n  },\n  __self: this\n}, ({\n  data\n}) => {\n  let me = data ? data.me : null;\n  let guest = me === null ? true : false;\n  console.log(guest);\n  return !guest ? __jsx(Mutation, {\n    mutation: ADD_TO_CART_MUTATION,\n    variables: {\n      id\n    },\n    refetchQueries: [{\n      query: CURRENT_USER_QUERY\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, (addToCart, {\n    loading,\n    error\n  }) => {\n    return __jsx(\"button\", {\n      onClick: addToCart,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \" \", \"Add\", loading && `ing`, \" to Cart \\uD83D\\uDED2\", \" \");\n  }) : __jsx(Mutation, {\n    mutation: CREATE_GUEST_MUTATION,\n    variables: {\n      id\n    },\n    refetchQueries: [{\n      query: CURRENT_USER_QUERY\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, (createGuest, {\n    loading,\n    error\n  }) => {\n    return __jsx(\"button\", {\n      onClick: createGuest,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \" \", \"Add\", loading && `ing`, \" to Cart \\uD83D\\uDED2\", \" \");\n  });\n});\n\nexport default AddToCart;\nexport { ADD_TO_CART_MUTATION };","map":{"version":3,"sources":["C:/Users/Wade/Documents/AHCA Web/Frontend AHCA/components/AddToCart.js"],"names":["React","Mutation","gql","CURRENT_USER_QUERY","User","ADD_TO_CART_MUTATION","CREATE_GUEST_MUTATION","AddToCart","id","data","me","guest","console","log","query","addToCart","loading","error","createGuest"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,kBAAT,QAAmC,QAAnC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,MAAMC,oBAAoB,GAAGH,GAAI;;;;;;;CAAjC;AASA,MAAMI,qBAAqB,GAAGJ,GAAI;;;;;;;;;;;;CAAlC;;AAcA,MAAMK,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAChB,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AACb,MAAIC,EAAE,GAAGD,IAAI,GAAGA,IAAI,CAACC,EAAR,GAAa,IAA1B;AACA,MAAIC,KAAK,GAAGD,EAAE,KAAK,IAAP,GAAc,IAAd,GAAqB,KAAjC;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,SAAO,CAACA,KAAD,GACL,MAAC,QAAD;AACE,IAAA,QAAQ,EAAEN,oBADZ;AAEE,IAAA,SAAS,EAAE;AAAEG,MAAAA;AAAF,KAFb;AAGE,IAAA,cAAc,EAAE,CAAC;AAAEM,MAAAA,KAAK,EAAEX;AAAT,KAAD,CAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKG,CAACY,SAAD,EAAY;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAAZ,KAAmC;AAClC,WACE;AAAQ,MAAA,OAAO,EAAEF,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,GADH,SAEMC,OAAO,IAAK,KAFlB,2BAEmC,GAFnC,CADF;AAMD,GAZH,CADK,GAgBL,MAAC,QAAD;AACE,IAAA,QAAQ,EAAEV,qBADZ;AAEE,IAAA,SAAS,EAAE;AAAEE,MAAAA;AAAF,KAFb;AAGE,IAAA,cAAc,EAAE,CAAC;AAAEM,MAAAA,KAAK,EAAEX;AAAT,KAAD,CAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKG,CAACe,WAAD,EAAc;AAAEF,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAAd,KAAqC;AACpC,WACE;AAAQ,MAAA,OAAO,EAAEC,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,GADH,SAEMF,OAAO,IAAK,KAFlB,2BAEmC,GAFnC,CADF;AAMD,GAZH,CAhBF;AA+BD,CApCH,CADF;;AAwCA,eAAeT,SAAf;AACA,SAASF,oBAAT","sourcesContent":["import React from \"react\";\r\nimport { Mutation } from \"react-apollo\";\r\nimport gql from \"graphql-tag\";\r\nimport { CURRENT_USER_QUERY } from \"./User\";\r\nimport User from \"./User\";\r\n\r\nconst ADD_TO_CART_MUTATION = gql`\r\n  mutation addToCart($id: ID!) {\r\n    addToCart(id: $id) {\r\n      id\r\n      quantity\r\n    }\r\n  }\r\n`;\r\n\r\nconst CREATE_GUEST_MUTATION = gql`\r\n  mutation CREATE_GUEST_MUTATION(\r\n    $email: String\r\n    $name: String\r\n    $password: String\r\n  ) {\r\n    createGuest(email: $email, name: $name, password: $password) {\r\n      id\r\n      email\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\nconst AddToCart = ({ id }) => (\r\n  <User>\r\n    {({ data }) => {\r\n      let me = data ? data.me : null;\r\n      let guest = me === null ? true : false;\r\n      console.log(guest);\r\n      return !guest ? (\r\n        <Mutation\r\n          mutation={ADD_TO_CART_MUTATION}\r\n          variables={{ id }}\r\n          refetchQueries={[{ query: CURRENT_USER_QUERY }]}\r\n        >\r\n          {(addToCart, { loading, error }) => {\r\n            return (\r\n              <button onClick={addToCart}>\r\n                {\" \"}\r\n                Add{loading && `ing`} to Cart ðŸ›’{\" \"}\r\n              </button>\r\n            );\r\n          }}\r\n        </Mutation>\r\n      ) : (\r\n        <Mutation\r\n          mutation={CREATE_GUEST_MUTATION}\r\n          variables={{ id }}\r\n          refetchQueries={[{ query: CURRENT_USER_QUERY }]}\r\n        >\r\n          {(createGuest, { loading, error }) => {\r\n            return (\r\n              <button onClick={createGuest}>\r\n                {\" \"}\r\n                Add{loading && `ing`} to Cart ðŸ›’{\" \"}\r\n              </button>\r\n            );\r\n          }}\r\n        </Mutation>\r\n      );\r\n    }}\r\n  </User>\r\n);\r\nexport default AddToCart;\r\nexport { ADD_TO_CART_MUTATION };\r\n"]},"metadata":{},"sourceType":"module"}