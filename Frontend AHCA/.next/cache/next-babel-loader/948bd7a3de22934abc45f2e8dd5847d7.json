{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport styled from \"styled-components\";\nimport Item2 from \"./Item2\";\nimport Pagination from \"./Pagination\";\nimport { perPage } from \"../config\";\nimport { Flex, Image, Box, Header, Text, Link } from \"rebass\";\nimport { ThemeProvider } from \"emotion-theming\";\nimport theme from \"./theme\";\nconst ALL_ITEMS_QUERY = gql`\n  query ALL_ITEMS_QUERY($skip: Int = 0, $first: Int = ${perPage}) {\n    items(first: $first, skip: $skip, orderBy: createdAt_DESC) {\n      id\n      title\n      price\n      description\n      image\n      largeImage\n      image1\n      largeImage1\n      image2\n      largeImage2\n    }\n  }\n`;\nconst Center = styled.div.withConfig({\n  displayName: \"Items__Center\",\n  componentId: \"dj6r4m-0\"\n})([\"text-align:center;padding-left:\", \"px;padding-right:\", \"px;\"], props => props.theme.space[3], props => props.theme.space[3]);\nexport default class Items extends Component {\n  render() {\n    return __jsx(ThemeProvider, {\n      theme: theme\n    }, __jsx(Center, null, __jsx(Pagination, {\n      page: this.props.page\n    })), __jsx(Query, {\n      query: ALL_ITEMS_QUERY,\n      variables: {\n        skip: this.props.page * perPage - perPage // first: perPage\n\n      }\n    }, ({\n      data,\n      error,\n      loading\n    }) => {\n      if (loading) return __jsx(\"p\", null, \"Loading...\");\n      if (error) return __jsx(\"p\", null, \"Error: \", error.message);\n      return __jsx(Flex, {\n        flexWrap: \"wrap\",\n        justifyContent: \"center\"\n      }, data.items.map((item, index) => __jsx(Box, {\n        width: [1, 1 / 2, 1 / 2, 1 / 2, 1 / 3],\n        px: [2, 3, 4],\n        py: 3\n      }, __jsx(Item2, {\n        item: item,\n        key: item.id,\n        index: index\n      }))));\n    }), __jsx(Center, null, __jsx(Pagination, null)));\n  }\n\n}\nexport { ALL_ITEMS_QUERY };","map":null,"metadata":{},"sourceType":"module"}