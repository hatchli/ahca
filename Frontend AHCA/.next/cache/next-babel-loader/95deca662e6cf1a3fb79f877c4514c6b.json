{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _parseFloat from \"@babel/runtime-corejs2/core-js/parse-float\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Wade\\\\Documents\\\\AHCA Web\\\\Frontend AHCA\\\\components\\\\LocationCard.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from \"react\";\nimport wait from \"waait\";\nimport { Mutation, withApollo } from \"react-apollo\";\nimport User, { CURRENT_USER_QUERY } from \"./User\";\nimport gql from \"graphql-tag\";\nimport { Label, Input, Select, Textarea, Radio, Checkbox } from \"@rebass/forms\";\nimport { Box, Flex, Button, Card, Image, Heading, Text } from \"rebass\";\nconst UPDATE_PHONE_LOCATION = gql`\n  mutation UPDATE_PHONE_LOCATION(\n    $name: String\n    $location: String\n    $phone: String\n    $email: String\n  ) {\n    updatePhoneLocation(\n      name: $name\n      location: $location\n      phone: $phone\n      email: $email\n    ) {\n      id\n    }\n  }\n`;\n\nclass LocationCard extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      name: \"\",\n      location: \"\",\n      phone: \"\"\n    });\n\n    _defineProperty(this, \"handleChange\", e => {\n      const {\n        name,\n        type,\n        value\n      } = e.target;\n      const val = type === \"number\" ? _parseFloat(value) : value;\n\n      if (val != \"\") {\n        this.setState({\n          [name]: val\n        });\n      }\n    });\n\n    _defineProperty(this, \"handleUpdateLocation\", () => {\n      var event = new Event(\"input\", {\n        bubbles: true\n      });\n      this.myinput.dispatchEvent(event);\n    });\n\n    _defineProperty(this, \"handleChangeLocation\", async () => {\n      await wait(300);\n      this.props.client.mutate({\n        mutation: UPDATE_PHONE_LOCATION,\n        variables: this.state\n      });\n      console.log(this.state.location);\n      console.log(\"handleChangeLocation called\");\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.county !== prevProps.county && this.props.county !== \"Select Your Location on the Map!\") {\n      this.setState(prevState => _objectSpread({}, prevState, {\n        location: this.props.county\n      }));\n      console.log(this.state.location);\n      this.handleChangeLocation();\n      console.log(this.state.location);\n    }\n  }\n\n  render() {\n    const maround = [1, 3];\n    const pleft = [0, 1, 2, 3];\n    const wconst = [1, 1 / 4]; // const [county] = this.props;\n\n    return __jsx(User, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, async ({\n      data\n    }) => {\n      const me = (await data) ? data.me : null;\n      console.log(me);\n      return __jsx(Mutation, {\n        mutation: UPDATE_PHONE_LOCATION,\n        variables: this.state,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, (updatePhoneLocation, {\n        loading,\n        error\n      }) => {\n        return __jsx(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, __jsx(Box, {\n          as: \"form\",\n          onSubmit: async e => {\n            e.preventDefault();\n            const res = await updatePhoneLocation();\n          },\n          pl: pleft,\n          py: 3,\n          width: 1,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, __jsx(Heading, {\n          pcolor: \"near-black\",\n          fontSize: [4, 5, 6],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, \"Are we in your neighboorhood?\"), __jsx(Flex, {\n          flexWrap: \"wrap\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, __jsx(Box, {\n          width: wconst,\n          mx: maround,\n          pl: pleft,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, __jsx(Label, {\n          htmlFor: \"name\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, \"Name\"), __jsx(Input, {\n          id: \"name\",\n          name: \"name\",\n          type: \"text\",\n          placeholder: \"Name\",\n          value: this.state.name,\n          onChange: async e => {\n            this.handleChange(e);\n            await wait(3000);\n            const res = await updatePhoneLocation();\n            {\n              error && alert(error);\n            }\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        })), __jsx(Box, {\n          width: wconst,\n          mx: maround,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }, __jsx(Label, {\n          htmlFor: \"name\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }, \"Phone\"), __jsx(Input, {\n          id: \"phone\",\n          name: \"phone\",\n          type: \"text\",\n          placeholder: \"Phone\",\n          value: this.state.phone,\n          onChange: async e => {\n            this.handleChange(e);\n            await wait(3000);\n            const res = await updatePhoneLocation();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        })), __jsx(Box, {\n          width: wconst,\n          mx: maround,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }, __jsx(Label, {\n          htmlFor: \"location\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }, \"Location\"), this.state.location !== \"\" ? __jsx(Heading, {\n          fontSize: [3, 4, 5],\n          color: \"near-black\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        }, this.props.county) : __jsx(Heading, {\n          fontSize: [3, 4, 3],\n          color: \"near-black\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131\n          },\n          __self: this\n        }, this.props.county))), __jsx(Flex, {\n          mx: -2,\n          flexWrap: \"wrap\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137\n          },\n          __self: this\n        }, __jsx(Box, {\n          p: 2,\n          ml: \"[3, 4, 5, 6]\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138\n          },\n          __self: this\n        }, __jsx(Button, {\n          type: \"submit\",\n          bg: \"dark-green\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          },\n          __self: this\n        }, \"Submit\")))));\n      });\n    });\n  }\n\n}\n\nexport default withApollo(LocationCard);","map":{"version":3,"sources":["C:/Users/Wade/Documents/AHCA Web/Frontend AHCA/components/LocationCard.js"],"names":["React","Component","wait","Mutation","withApollo","User","CURRENT_USER_QUERY","gql","Label","Input","Select","Textarea","Radio","Checkbox","Box","Flex","Button","Card","Image","Heading","Text","UPDATE_PHONE_LOCATION","LocationCard","name","location","phone","e","type","value","target","val","setState","event","Event","bubbles","myinput","dispatchEvent","props","client","mutate","mutation","variables","state","console","log","componentDidUpdate","prevProps","prevState","county","handleChangeLocation","render","maround","pleft","wconst","data","me","updatePhoneLocation","loading","error","preventDefault","res","handleChange","alert"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport wait from \"waait\";\r\nimport { Mutation, withApollo } from \"react-apollo\";\r\nimport User, { CURRENT_USER_QUERY } from \"./User\";\r\nimport gql from \"graphql-tag\";\r\nimport { Label, Input, Select, Textarea, Radio, Checkbox } from \"@rebass/forms\";\r\nimport { Box, Flex, Button, Card, Image, Heading, Text } from \"rebass\";\r\n\r\nconst UPDATE_PHONE_LOCATION = gql`\r\n  mutation UPDATE_PHONE_LOCATION(\r\n    $name: String\r\n    $location: String\r\n    $phone: String\r\n    $email: String\r\n  ) {\r\n    updatePhoneLocation(\r\n      name: $name\r\n      location: $location\r\n      phone: $phone\r\n      email: $email\r\n    ) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nclass LocationCard extends Component {\r\n  state = {\r\n    name: \"\",\r\n    location: \"\",\r\n    phone: \"\"\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (\r\n      this.props.county !== prevProps.county &&\r\n      this.props.county !== \"Select Your Location on the Map!\"\r\n    ) {\r\n      this.setState(prevState => ({\r\n        ...prevState,\r\n        location: this.props.county\r\n      }));\r\n      console.log(this.state.location);\r\n      this.handleChangeLocation();\r\n      console.log(this.state.location);\r\n    }\r\n  }\r\n\r\n  handleChange = e => {\r\n    const { name, type, value } = e.target;\r\n    const val = type === \"number\" ? parseFloat(value) : value;\r\n    if (val != \"\") {\r\n      this.setState({ [name]: val });\r\n    }\r\n  };\r\n\r\n  handleUpdateLocation = () => {\r\n    var event = new Event(\"input\", { bubbles: true });\r\n    this.myinput.dispatchEvent(event);\r\n  };\r\n  render() {\r\n    const maround = [1, 3];\r\n    const pleft = [0, 1, 2, 3];\r\n    const wconst = [1, 1 / 4];\r\n\r\n    // const [county] = this.props;\r\n    return (\r\n      <User>\r\n        {async ({ data }) => {\r\n          const me = (await data) ? data.me : null;\r\n          console.log(me);\r\n          return (\r\n            <Mutation mutation={UPDATE_PHONE_LOCATION} variables={this.state}>\r\n              {(updatePhoneLocation, { loading, error }) => {\r\n                return (\r\n                  <div>\r\n                    <Box\r\n                      as=\"form\"\r\n                      onSubmit={async e => {\r\n                        e.preventDefault();\r\n                        const res = await updatePhoneLocation();\r\n                      }}\r\n                      pl={pleft}\r\n                      py={3}\r\n                      width={1}\r\n                    >\r\n                      <Heading pcolor=\"near-black\" fontSize={[4, 5, 6]}>\r\n                        Are we in your neighboorhood?\r\n                      </Heading>\r\n                      <Flex flexWrap=\"wrap\">\r\n                        <Box width={wconst} mx={maround} pl={pleft}>\r\n                          <Label htmlFor=\"name\">Name</Label>\r\n                          <Input\r\n                            id=\"name\"\r\n                            name=\"name\"\r\n                            type=\"text\"\r\n                            placeholder=\"Name\"\r\n                            value={this.state.name}\r\n                            onChange={async e => {\r\n                              this.handleChange(e);\r\n                              await wait(3000);\r\n                              const res = await updatePhoneLocation();\r\n                              {\r\n                                error && alert(error);\r\n                              }\r\n                            }}\r\n                          />\r\n                        </Box>\r\n                        <Box width={wconst} mx={maround}>\r\n                          <Label htmlFor=\"name\">Phone</Label>\r\n                          <Input\r\n                            id=\"phone\"\r\n                            name=\"phone\"\r\n                            type=\"text\"\r\n                            placeholder=\"Phone\"\r\n                            value={this.state.phone}\r\n                            onChange={async e => {\r\n                              this.handleChange(e);\r\n                              await wait(3000);\r\n                              const res = await updatePhoneLocation();\r\n                            }}\r\n                          />\r\n                        </Box>\r\n                        <Box width={wconst} mx={maround}>\r\n                          <Label htmlFor=\"location\">Location</Label>\r\n                          {this.state.location !== \"\" ? (\r\n                            <Heading fontSize={[3, 4, 5]} color=\"near-black\">\r\n                              {this.props.county}\r\n                            </Heading>\r\n                          ) : (\r\n                            <Heading fontSize={[3, 4, 3]} color=\"near-black\">\r\n                              {this.props.county}\r\n                            </Heading>\r\n                          )}\r\n                        </Box>\r\n                      </Flex>\r\n                      <Flex mx={-2} flexWrap=\"wrap\">\r\n                        <Box p={2} ml=\"[3, 4, 5, 6]\">\r\n                          <Button type=\"submit\" bg=\"dark-green\">\r\n                            Submit\r\n                          </Button>\r\n                        </Box>\r\n                      </Flex>\r\n                    </Box>\r\n                  </div>\r\n                );\r\n              }}\r\n            </Mutation>\r\n          );\r\n        }}\r\n      </User>\r\n    );\r\n  }\r\n  handleChangeLocation = async () => {\r\n    await wait(300);\r\n    this.props.client.mutate({\r\n      mutation: UPDATE_PHONE_LOCATION,\r\n      variables: this.state\r\n    });\r\n    console.log(this.state.location);\r\n    console.log(\"handleChangeLocation called\");\r\n  };\r\n}\r\n\r\nexport default withApollo(LocationCard);\r\n"]},"metadata":{},"sourceType":"module"}