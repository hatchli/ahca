{"ast":null,"code":"export default function calcTotalPrice(cart) {\n  console.log(cart);\n  var promoItems = cart.filter(function (cartItem) {\n    return cartItem.promotionPrice !== null;\n  });\n  var regularItems = cart.filter(function (cartItem) {\n    return cartItem.promotionPrice === null;\n  });\n  var promoAmount = promoItems.reduce(function (tally, cartItem) {\n    return tally + cartItem.promotionPrice * cartItem.quantity;\n  }, 0);\n  var regularAmount = regularItems.reduce(function (tally, cartItem) {\n    return tally + cartItem.item.price * cartItem.quantity;\n  }, 0);\n  console.log(promoAmount);\n  console.log(regularAmount);\n  return cart.reduce(function (tally, cartItem) {\n    if (!cartItem.item) return tally;\n    return regularAmount + promoAmount;\n  }, 0);\n}","map":{"version":3,"sources":["C:/Users/Wade/Documents/AHCA Web/Frontend AHCA/lib/calcTotalPrice.js"],"names":["calcTotalPrice","cart","console","log","promoItems","filter","cartItem","promotionPrice","regularItems","promoAmount","reduce","tally","quantity","regularAmount","item","price"],"mappings":"AAAA,eAAe,SAASA,cAAT,CAAwBC,IAAxB,EAA8B;AAC3CC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,MAAMG,UAAU,GAAGH,IAAI,CAACI,MAAL,CAAY,UAAAC,QAAQ;AAAA,WAAIA,QAAQ,CAACC,cAAT,KAA4B,IAAhC;AAAA,GAApB,CAAnB;AACA,MAAMC,YAAY,GAAGP,IAAI,CAACI,MAAL,CACnB,UAAAC,QAAQ;AAAA,WAAIA,QAAQ,CAACC,cAAT,KAA4B,IAAhC;AAAA,GADW,CAArB;AAIA,MAAME,WAAW,GAAGL,UAAU,CAACM,MAAX,CAClB,UAACC,KAAD,EAAQL,QAAR;AAAA,WAAqBK,KAAK,GAAGL,QAAQ,CAACC,cAAT,GAA0BD,QAAQ,CAACM,QAAhE;AAAA,GADkB,EAElB,CAFkB,CAApB;AAIA,MAAMC,aAAa,GAAGL,YAAY,CAACE,MAAb,CACpB,UAACC,KAAD,EAAQL,QAAR;AAAA,WAAqBK,KAAK,GAAGL,QAAQ,CAACQ,IAAT,CAAcC,KAAd,GAAsBT,QAAQ,CAACM,QAA5D;AAAA,GADoB,EAEpB,CAFoB,CAAtB;AAKAV,EAAAA,OAAO,CAACC,GAAR,CAAYM,WAAZ;AACAP,EAAAA,OAAO,CAACC,GAAR,CAAYU,aAAZ;AACA,SAAOZ,IAAI,CAACS,MAAL,CAAY,UAACC,KAAD,EAAQL,QAAR,EAAqB;AACtC,QAAI,CAACA,QAAQ,CAACQ,IAAd,EAAoB,OAAOH,KAAP;AACpB,WAAOE,aAAa,GAAGJ,WAAvB;AACD,GAHM,EAGJ,CAHI,CAAP;AAID","sourcesContent":["export default function calcTotalPrice(cart) {\r\n  console.log(cart);\r\n  const promoItems = cart.filter(cartItem => cartItem.promotionPrice !== null);\r\n  const regularItems = cart.filter(\r\n    cartItem => cartItem.promotionPrice === null\r\n  );\r\n\r\n  const promoAmount = promoItems.reduce(\r\n    (tally, cartItem) => tally + cartItem.promotionPrice * cartItem.quantity,\r\n    0\r\n  );\r\n  const regularAmount = regularItems.reduce(\r\n    (tally, cartItem) => tally + cartItem.item.price * cartItem.quantity,\r\n    0\r\n  );\r\n\r\n  console.log(promoAmount);\r\n  console.log(regularAmount);\r\n  return cart.reduce((tally, cartItem) => {\r\n    if (!cartItem.item) return tally;\r\n    return regularAmount + promoAmount;\r\n  }, 0);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}