{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _parseFloat from \"@babel/runtime-corejs2/core-js/parse-float\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Users\\\\Wade\\\\Documents\\\\AHCA Web\\\\Frontend AHCA\\\\components\\\\UpdateItem.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation UPDATE_ITEM_MUTATION(\\n    $id: ID!\\n    $title: String\\n    $description: String\\n    $price: Int\\n  ) {\\n    updateItem(\\n      id: $id\\n      title: $title\\n      description: $description\\n      price: $price #   image: $image #   largeImage: $largeImage\\n    ) {\\n      id\\n      title\\n      price\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query SINGLE_ITEM_QUERY($id: ID!) {\\n    item(where: { id: $id }) {\\n      id\\n      title\\n      description\\n      price\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from \"react\";\nimport { Mutation, Query } from \"react-apollo\";\nimport Form from \"./styles/Form\";\nimport formatMoney from \"../lib/formatMoney\";\nimport gql from \"graphql-tag\";\nimport Error from \"./ErrorMessage\";\nimport Router from \"next/router\";\nvar SINGLE_ITEM_QUERY = gql(_templateObject());\nvar UPDATE_ITEM_MUTATION = gql(_templateObject2());\n\nvar UpdateItem =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(UpdateItem, _Component);\n\n  function UpdateItem() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, UpdateItem);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(UpdateItem)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {});\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (e) {\n      var _e$target = e.target,\n          name = _e$target.name,\n          type = _e$target.type,\n          value = _e$target.value;\n      var val = type === \"number\" ? _parseFloat(value) : value;\n\n      _this.setState(_defineProperty({}, name, val));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"updateItem\", function _callee(e, updateItemMutation) {\n      var res;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              console.log(\"Updating Item\");\n              console.log(_this.state);\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(updateItemMutation({\n                variables: _objectSpread({\n                  id: _this.props.id\n                }, _this.state)\n              }));\n\n            case 5:\n              res = _context.sent;\n              console.log(\"updated!\");\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(UpdateItem, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(Query, {\n        query: SINGLE_ITEM_QUERY,\n        variables: {\n          id: this.props.id\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, function (_ref) {\n        var data = _ref.data,\n            loading = _ref.loading;\n        if (loading) return __jsx(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, \"Loading...\");\n        if (!data.item) return __jsx(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, \"No Item Found for ID \", _this2.props.id);\n        return __jsx(Mutation, {\n          mutation: UPDATE_ITEM_MUTATION,\n          variables: _this2.state,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, function (updateItem, _ref2) {\n          var loading = _ref2.loading,\n              error = _ref2.error;\n          return __jsx(Form, {\n            onSubmit: function onSubmit(e) {\n              return _this2.updateItem(e, updateItem);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 76\n            },\n            __self: this\n          }, __jsx(Error, {\n            error: error,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 77\n            },\n            __self: this\n          }), __jsx(\"fieldset\", {\n            disabled: loading,\n            \"aria-busy\": loading,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 78\n            },\n            __self: this\n          }, __jsx(\"label\", {\n            htmlFor: \"title\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 79\n            },\n            __self: this\n          }, \"Title\", __jsx(\"input\", {\n            type: \"text\",\n            id: \"title\",\n            name: \"title\",\n            placeholder: \"Title\",\n            required: true,\n            defaultValue: data.item.title,\n            onChange: _this2.handleChange,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 81\n            },\n            __self: this\n          })), __jsx(\"label\", {\n            htmlFor: \"description\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 91\n            },\n            __self: this\n          }, \"Description\", __jsx(\"textarea\", {\n            id: \"description\",\n            name: \"description\",\n            placeholder: \"Enter a description\",\n            required: true,\n            defaultValue: data.item.description,\n            onChange: _this2.handleChange,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 93\n            },\n            __self: this\n          })), __jsx(\"label\", {\n            htmlFor: \"price\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 103\n            },\n            __self: this\n          }, \"Price\", __jsx(\"input\", {\n            type: \"number\",\n            id: \"price\",\n            name: \"price\",\n            placeholder: \"Price\",\n            required: true,\n            defaultValue: data.item.price,\n            onChange: _this2.handleChange,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 105\n            },\n            __self: this\n          })), __jsx(\"button\", {\n            type: \"submit\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 115\n            },\n            __self: this\n          }, \"Sav\", loading ? \"ing\" : \"e\", \" Changes\")));\n        });\n      });\n    }\n  }]);\n\n  return UpdateItem;\n}(Component);\n\nexport default UpdateItem;\nexport { UPDATE_ITEM_MUTATION };","map":{"version":3,"sources":["C:/Users/Wade/Documents/AHCA Web/Frontend AHCA/components/UpdateItem.js"],"names":["React","Component","Mutation","Query","Form","formatMoney","gql","Error","Router","SINGLE_ITEM_QUERY","UPDATE_ITEM_MUTATION","UpdateItem","e","target","name","type","value","val","setState","updateItemMutation","preventDefault","console","log","state","variables","id","props","res","data","loading","item","updateItem","error","title","handleChange","description","price"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Mutation, Query } from \"react-apollo\";\r\nimport Form from \"./styles/Form\";\r\nimport formatMoney from \"../lib/formatMoney\";\r\nimport gql from \"graphql-tag\";\r\nimport Error from \"./ErrorMessage\";\r\nimport Router from \"next/router\";\r\n\r\nconst SINGLE_ITEM_QUERY = gql`\r\n  query SINGLE_ITEM_QUERY($id: ID!) {\r\n    item(where: { id: $id }) {\r\n      id\r\n      title\r\n      description\r\n      price\r\n    }\r\n  }\r\n`;\r\n\r\nconst UPDATE_ITEM_MUTATION = gql`\r\n  mutation UPDATE_ITEM_MUTATION(\r\n    $id: ID!\r\n    $title: String\r\n    $description: String\r\n    $price: Int\r\n  ) {\r\n    updateItem(\r\n      id: $id\r\n      title: $title\r\n      description: $description\r\n      price: $price #   image: $image #   largeImage: $largeImage\r\n    ) {\r\n      id\r\n      title\r\n      price\r\n    }\r\n  }\r\n`;\r\n\r\nclass UpdateItem extends Component {\r\n  state = {};\r\n\r\n  handleChange = e => {\r\n    const { name, type, value } = e.target;\r\n    const val = type === \"number\" ? parseFloat(value) : value;\r\n    this.setState({ [name]: val });\r\n  };\r\n\r\n  updateItem = async (e, updateItemMutation) => {\r\n    e.preventDefault();\r\n    console.log(\"Updating Item\");\r\n    console.log(this.state);\r\n    const res = await updateItemMutation({\r\n      variables: {\r\n        id: this.props.id,\r\n        ...this.state\r\n      }\r\n    });\r\n    console.log(\"updated!\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Query\r\n        query={SINGLE_ITEM_QUERY}\r\n        variables={{\r\n          id: this.props.id\r\n        }}\r\n      >\r\n        {({ data, loading }) => {\r\n          if (loading) return <p>Loading...</p>;\r\n          if (!data.item) return <p>No Item Found for ID {this.props.id}</p>;\r\n          return (\r\n            <Mutation mutation={UPDATE_ITEM_MUTATION} variables={this.state}>\r\n              {(updateItem, { loading, error }) => (\r\n                <Form onSubmit={e => this.updateItem(e, updateItem)}>\r\n                  <Error error={error} />\r\n                  <fieldset disabled={loading} aria-busy={loading}>\r\n                    <label htmlFor=\"title\">\r\n                      Title\r\n                      <input\r\n                        type=\"text\"\r\n                        id=\"title\"\r\n                        name=\"title\"\r\n                        placeholder=\"Title\"\r\n                        required\r\n                        defaultValue={data.item.title}\r\n                        onChange={this.handleChange}\r\n                      />\r\n                    </label>\r\n                    <label htmlFor=\"description\">\r\n                      Description\r\n                      <textarea\r\n                        id=\"description\"\r\n                        name=\"description\"\r\n                        placeholder=\"Enter a description\"\r\n                        required\r\n                        defaultValue={data.item.description}\r\n                        onChange={this.handleChange}\r\n                      />\r\n                    </label>\r\n\r\n                    <label htmlFor=\"price\">\r\n                      Price\r\n                      <input\r\n                        type=\"number\"\r\n                        id=\"price\"\r\n                        name=\"price\"\r\n                        placeholder=\"Price\"\r\n                        required\r\n                        defaultValue={data.item.price}\r\n                        onChange={this.handleChange}\r\n                      />\r\n                    </label>\r\n                    <button type=\"submit\">\r\n                      Sav{loading ? \"ing\" : \"e\"} Changes\r\n                    </button>\r\n                  </fieldset>\r\n                </Form>\r\n              )}\r\n            </Mutation>\r\n          );\r\n        }}\r\n      </Query>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UpdateItem;\r\nexport { UPDATE_ITEM_MUTATION };\r\n"]},"metadata":{},"sourceType":"module"}