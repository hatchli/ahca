{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Users\\\\Wade\\\\Documents\\\\AHCA Web\\\\Frontend AHCA\\\\components\\\\Permissions.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  query {\\n    users {\\n      id\\n      name\\n      email\\n      permissions\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation updatePermissions($permissions: [Permission], $userId: ID!) {\\n    updatePermissions(permissions: $permissions, userId: $userId) {\\n      id\\n      permissions\\n      name\\n      email\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { Query, Mutation } from \"react-apollo\";\nimport Error from \"./ErrorMessage\";\nimport gql from \"graphql-tag\";\nimport Table from \"./styles/Table\";\nimport SickButton from \"./styles/SickButton\";\nimport PropTypes from \"prop-types\";\nvar possiblePermissions = [\"ADMIN\", \"USER\", \"ITEMCREATE\", \"ITEMUPDATE\", \"ITEMDELETE\", \"PERMISSIONUPDATE\"];\nvar UPDATE_PERMISSIONS_MUTATION = gql(_templateObject());\nvar ALL_USERS_QUERY = gql(_templateObject2());\n\nvar Permissions = function Permissions(props) {\n  return __jsx(Query, {\n    query: ALL_USERS_QUERY,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, function (_ref) {\n    var data = _ref.data,\n        loading = _ref.loading,\n        error = _ref.error;\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, __jsx(Error, {\n      error: error,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, __jsx(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Manage Permissions\"), __jsx(Table, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, __jsx(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, __jsx(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, __jsx(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Name\"), __jsx(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Email\"), possiblePermissions.map(function (permission) {\n      return __jsx(\"th\", {\n        key: permission,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, permission);\n    }), \"}\", __jsx(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"\\uD83D\\uDC47\\uD83C\\uDFFB\"))), __jsx(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, data.users.map(function (user) {\n      return __jsx(UserPermissions, {\n        user: user,\n        key: user.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      });\n    })))));\n  });\n};\n\nvar UserPermissions =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(UserPermissions, _React$Component);\n\n  function UserPermissions() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, UserPermissions);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(UserPermissions)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      permissions: _this.props.user.permissions\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handlePermissionChange\", function (e) {\n      var checkbox = e.target; // take a copy of the current permissions\n\n      var updatedPermissions = _toConsumableArray(_this.state.permissions); // figure out if we need to remove or add this permission\n\n\n      if (checkbox.checked) {\n        // add it in!\n        updatedPermissions.push(checkbox.value);\n      } else {\n        updatedPermissions = updatedPermissions.filter(function (permission) {\n          return permission !== checkbox.value;\n        });\n      }\n\n      _this.setState({\n        permissions: updatedPermissions\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(UserPermissions, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var user = this.props.user;\n      return __jsx(Mutation, {\n        mutation: UPDATE_PERMISSIONS_MUTATION,\n        variables: {\n          permissions: this.state.permissions,\n          userId: this.props.user.id\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, function (updatePermissions, _ref2) {\n        var loading = _ref2.loading,\n            error = _ref2.error;\n        return __jsx(React.Fragment, null, error && __jsx(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }, __jsx(\"td\", {\n          colspan: \"8\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }, __jsx(Error, {\n          error: error,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }))), __jsx(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        }, __jsx(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          },\n          __self: this\n        }, user.name), __jsx(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          },\n          __self: this\n        }, user.email), possiblePermissions.map(function (permission) {\n          return __jsx(\"td\", {\n            key: permission,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 119\n            },\n            __self: this\n          }, __jsx(\"label\", {\n            htmlFor: \"\".concat(user.id, \"-permission-\").concat(permission),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 120\n            },\n            __self: this\n          }, __jsx(\"input\", {\n            id: \"\".concat(user.id, \"-permission-\").concat(permission),\n            type: \"checkbox\",\n            checked: _this2.state.permissions.includes(permission),\n            value: permission,\n            onChange: _this2.handlePermissionChange,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 121\n            },\n            __self: this\n          })));\n        }), __jsx(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131\n          },\n          __self: this\n        }, __jsx(SickButton, {\n          type: \"button\",\n          disabled: loading,\n          onClick: updatePermissions,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132\n          },\n          __self: this\n        }, \"Updat\", loading ? \"ing\" : \"e\"))));\n      });\n    }\n  }]);\n\n  return UserPermissions;\n}(React.Component);\n\n_defineProperty(UserPermissions, \"propTypes\", {\n  user: PropTypes.shape({\n    name: PropTypes.string,\n    email: PropTypes.string,\n    id: PropTypes.string,\n    permissions: PropTypes.array\n  }).isRequired\n});\n\nexport default Permissions;","map":{"version":3,"sources":["C:/Users/Wade/Documents/AHCA Web/Frontend AHCA/components/Permissions.js"],"names":["Query","Mutation","Error","gql","Table","SickButton","PropTypes","possiblePermissions","UPDATE_PERMISSIONS_MUTATION","ALL_USERS_QUERY","Permissions","props","data","loading","error","map","permission","users","user","id","UserPermissions","permissions","e","checkbox","target","updatedPermissions","state","checked","push","value","filter","setState","userId","updatePermissions","name","email","includes","handlePermissionChange","React","Component","shape","string","array","isRequired"],"mappings":"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","sourcesContent":["import { Query, Mutation } from \"react-apollo\";\r\nimport Error from \"./ErrorMessage\";\r\nimport gql from \"graphql-tag\";\r\nimport Table from \"./styles/Table\";\r\nimport SickButton from \"./styles/SickButton\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst possiblePermissions = [\r\n  \"ADMIN\",\r\n  \"USER\",\r\n  \"ITEMCREATE\",\r\n  \"ITEMUPDATE\",\r\n  \"ITEMDELETE\",\r\n  \"PERMISSIONUPDATE\"\r\n];\r\n\r\nconst UPDATE_PERMISSIONS_MUTATION = gql`\r\n  mutation updatePermissions($permissions: [Permission], $userId: ID!) {\r\n    updatePermissions(permissions: $permissions, userId: $userId) {\r\n      id\r\n      permissions\r\n      name\r\n      email\r\n    }\r\n  }\r\n`;\r\n\r\nconst ALL_USERS_QUERY = gql`\r\n  query {\r\n    users {\r\n      id\r\n      name\r\n      email\r\n      permissions\r\n    }\r\n  }\r\n`;\r\n\r\nconst Permissions = props => (\r\n  <Query query={ALL_USERS_QUERY}>\r\n    {({ data, loading, error }) => (\r\n      <div>\r\n        <Error error={error} />\r\n        <div>\r\n          <h2>Manage Permissions</h2>\r\n          <Table>\r\n            <thead>\r\n              <tr>\r\n                <th>Name</th>\r\n                <th>Email</th>\r\n                {possiblePermissions.map(permission => (\r\n                  <th key={permission}>{permission}</th>\r\n                ))}\r\n                }<th>👇🏻</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {data.users.map(user => (\r\n                <UserPermissions user={user} key={user.id} />\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n      </div>\r\n    )}\r\n  </Query>\r\n);\r\n\r\nclass UserPermissions extends React.Component {\r\n  static propTypes = {\r\n    user: PropTypes.shape({\r\n      name: PropTypes.string,\r\n      email: PropTypes.string,\r\n      id: PropTypes.string,\r\n      permissions: PropTypes.array\r\n    }).isRequired\r\n  };\r\n  state = {\r\n    permissions: this.props.user.permissions\r\n  };\r\n  handlePermissionChange = e => {\r\n    const checkbox = e.target;\r\n    // take a copy of the current permissions\r\n    let updatedPermissions = [...this.state.permissions];\r\n    // figure out if we need to remove or add this permission\r\n    if (checkbox.checked) {\r\n      // add it in!\r\n      updatedPermissions.push(checkbox.value);\r\n    } else {\r\n      updatedPermissions = updatedPermissions.filter(\r\n        permission => permission !== checkbox.value\r\n      );\r\n    }\r\n    this.setState({ permissions: updatedPermissions });\r\n  };\r\n  render() {\r\n    const user = this.props.user;\r\n    return (\r\n      <Mutation\r\n        mutation={UPDATE_PERMISSIONS_MUTATION}\r\n        variables={{\r\n          permissions: this.state.permissions,\r\n          userId: this.props.user.id\r\n        }}\r\n      >\r\n        {(updatePermissions, { loading, error }) => (\r\n          <>\r\n            {error && (\r\n              <tr>\r\n                <td colspan=\"8\">\r\n                  <Error error={error} />\r\n                </td>\r\n              </tr>\r\n            )}\r\n            <tr>\r\n              <td>{user.name}</td>\r\n              <td>{user.email}</td>\r\n              {possiblePermissions.map(permission => (\r\n                <td key={permission}>\r\n                  <label htmlFor={`${user.id}-permission-${permission}`}>\r\n                    <input\r\n                      id={`${user.id}-permission-${permission}`}\r\n                      type=\"checkbox\"\r\n                      checked={this.state.permissions.includes(permission)}\r\n                      value={permission}\r\n                      onChange={this.handlePermissionChange}\r\n                    />\r\n                  </label>\r\n                </td>\r\n              ))}\r\n              <td>\r\n                <SickButton\r\n                  type=\"button\"\r\n                  disabled={loading}\r\n                  onClick={updatePermissions}\r\n                >\r\n                  Updat{loading ? \"ing\" : \"e\"}\r\n                </SickButton>\r\n              </td>\r\n            </tr>\r\n          </>\r\n        )}\r\n      </Mutation>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Permissions;\r\n"]},"metadata":{},"sourceType":"module"}