{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Wade\\\\Documents\\\\AHCA Web\\\\Frontend AHCA\\\\components\\\\Permissions.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Query, Mutation } from \"react-apollo\";\nimport Error from \"./ErrorMessage\";\nimport gql from \"graphql-tag\";\nimport Table from \"./styles/Table\";\nimport SickButton from \"./styles/SickButton\";\nimport PropTypes from \"prop-types\";\nconst possiblePermissions = [\"ADMIN\", \"USER\", \"ITEMCREATE\", \"ITEMUPDATE\", \"ITEMDELETE\", \"PERMISSIONUPDATE\"];\nconst UPDATE_PERMISSIONS_MUTATION = gql`\n  mutation updatePermissions($permissions: [Permission], $userId: ID!) {\n    updatePermissions(permissions: $permissions, userId: $userId) {\n      id\n      permissions\n      name\n      email\n    }\n  }\n`;\nconst ALL_USERS_QUERY = gql`\n  query {\n    users {\n      id\n      name\n      email\n      permissions\n    }\n  }\n`;\n\nconst Permissions = props => __jsx(Query, {\n  query: ALL_USERS_QUERY,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40\n  },\n  __self: this\n}, ({\n  data,\n  loading,\n  error\n}) => {\n  const users = data ? data.users : null;\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, __jsx(Error, {\n    error: error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Manage Permissions\"), __jsx(Table, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, __jsx(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, __jsx(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, __jsx(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Name\"), __jsx(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Email\"), possiblePermissions.map(permission => __jsx(\"th\", {\n    key: permission,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, permission)), \"}\", __jsx(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"\\uD83D\\uDC47\\uD83C\\uDFFB\"))), __jsx(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, users.map(user => __jsx(UserPermissions, {\n    user: user,\n    key: user.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }))))));\n});\n\nclass UserPermissions extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      permissions: this.props.user.permissions\n    });\n\n    _defineProperty(this, \"handlePermissionChange\", e => {\n      const checkbox = e.target; // take a copy of the current permissions\n\n      let updatedPermissions = [...this.state.permissions]; // figure out if we need to remove or add this permission\n\n      if (checkbox.checked) {\n        // add it in!\n        updatedPermissions.push(checkbox.value);\n      } else {\n        updatedPermissions = updatedPermissions.filter(permission => permission !== checkbox.value);\n      }\n\n      this.setState({\n        permissions: updatedPermissions\n      });\n    });\n  }\n\n  render() {\n    const user = this.props.user;\n    return __jsx(Mutation, {\n      mutation: UPDATE_PERMISSIONS_MUTATION,\n      variables: {\n        permissions: this.state.permissions,\n        userId: this.props.user.id\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, (updatePermissions, {\n      loading,\n      error\n    }) => __jsx(React.Fragment, null, error && __jsx(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, __jsx(\"td\", {\n      colspan: \"8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, __jsx(Error, {\n      error: error,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }))), __jsx(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, __jsx(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, user.name), __jsx(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, user.email), possiblePermissions.map(permission => __jsx(\"td\", {\n      key: permission,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      htmlFor: `${user.id}-permission-${permission}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, __jsx(\"input\", {\n      id: `${user.id}-permission-${permission}`,\n      type: \"checkbox\",\n      checked: this.state.permissions.includes(permission),\n      value: permission,\n      onChange: this.handlePermissionChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    })))), __jsx(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, __jsx(SickButton, {\n      type: \"button\",\n      disabled: loading,\n      onClick: updatePermissions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"Updat\", loading ? \"ing\" : \"e\")))));\n  }\n\n}\n\n_defineProperty(UserPermissions, \"propTypes\", {\n  user: PropTypes.shape({\n    name: PropTypes.string,\n    email: PropTypes.string,\n    id: PropTypes.string,\n    permissions: PropTypes.array\n  }).isRequired\n});\n\nexport default Permissions;","map":{"version":3,"sources":["C:/Users/Wade/Documents/AHCA Web/Frontend AHCA/components/Permissions.js"],"names":["Query","Mutation","Error","gql","Table","SickButton","PropTypes","possiblePermissions","UPDATE_PERMISSIONS_MUTATION","ALL_USERS_QUERY","Permissions","props","data","loading","error","users","map","permission","user","id","UserPermissions","React","Component","permissions","e","checkbox","target","updatedPermissions","state","checked","push","value","filter","setState","render","userId","updatePermissions","name","email","includes","handlePermissionChange","shape","string","array","isRequired"],"mappings":"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","sourcesContent":["import { Query, Mutation } from \"react-apollo\";\r\nimport Error from \"./ErrorMessage\";\r\nimport gql from \"graphql-tag\";\r\nimport Table from \"./styles/Table\";\r\nimport SickButton from \"./styles/SickButton\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst possiblePermissions = [\r\n  \"ADMIN\",\r\n  \"USER\",\r\n  \"ITEMCREATE\",\r\n  \"ITEMUPDATE\",\r\n  \"ITEMDELETE\",\r\n  \"PERMISSIONUPDATE\"\r\n];\r\n\r\nconst UPDATE_PERMISSIONS_MUTATION = gql`\r\n  mutation updatePermissions($permissions: [Permission], $userId: ID!) {\r\n    updatePermissions(permissions: $permissions, userId: $userId) {\r\n      id\r\n      permissions\r\n      name\r\n      email\r\n    }\r\n  }\r\n`;\r\n\r\nconst ALL_USERS_QUERY = gql`\r\n  query {\r\n    users {\r\n      id\r\n      name\r\n      email\r\n      permissions\r\n    }\r\n  }\r\n`;\r\n\r\nconst Permissions = props => (\r\n  <Query query={ALL_USERS_QUERY}>\r\n    {({ data, loading, error }) => {\r\n      const users = data ? data.users : null;\r\n      return (\r\n        <div>\r\n          <Error error={error} />\r\n          <div>\r\n            <h2>Manage Permissions</h2>\r\n            <Table>\r\n              <thead>\r\n                <tr>\r\n                  <th>Name</th>\r\n                  <th>Email</th>\r\n                  {possiblePermissions.map(permission => (\r\n                    <th key={permission}>{permission}</th>\r\n                  ))}\r\n                  }<th>👇🏻</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {users.map(user => (\r\n                  <UserPermissions user={user} key={user.id} />\r\n                ))}\r\n              </tbody>\r\n            </Table>\r\n          </div>\r\n        </div>\r\n      );\r\n    }}\r\n  </Query>\r\n);\r\n\r\nclass UserPermissions extends React.Component {\r\n  static propTypes = {\r\n    user: PropTypes.shape({\r\n      name: PropTypes.string,\r\n      email: PropTypes.string,\r\n      id: PropTypes.string,\r\n      permissions: PropTypes.array\r\n    }).isRequired\r\n  };\r\n  state = {\r\n    permissions: this.props.user.permissions\r\n  };\r\n  handlePermissionChange = e => {\r\n    const checkbox = e.target;\r\n    // take a copy of the current permissions\r\n    let updatedPermissions = [...this.state.permissions];\r\n    // figure out if we need to remove or add this permission\r\n    if (checkbox.checked) {\r\n      // add it in!\r\n      updatedPermissions.push(checkbox.value);\r\n    } else {\r\n      updatedPermissions = updatedPermissions.filter(\r\n        permission => permission !== checkbox.value\r\n      );\r\n    }\r\n    this.setState({ permissions: updatedPermissions });\r\n  };\r\n  render() {\r\n    const user = this.props.user;\r\n    return (\r\n      <Mutation\r\n        mutation={UPDATE_PERMISSIONS_MUTATION}\r\n        variables={{\r\n          permissions: this.state.permissions,\r\n          userId: this.props.user.id\r\n        }}\r\n      >\r\n        {(updatePermissions, { loading, error }) => (\r\n          <>\r\n            {error && (\r\n              <tr>\r\n                <td colspan=\"8\">\r\n                  <Error error={error} />\r\n                </td>\r\n              </tr>\r\n            )}\r\n            <tr>\r\n              <td>{user.name}</td>\r\n              <td>{user.email}</td>\r\n              {possiblePermissions.map(permission => (\r\n                <td key={permission}>\r\n                  <label htmlFor={`${user.id}-permission-${permission}`}>\r\n                    <input\r\n                      id={`${user.id}-permission-${permission}`}\r\n                      type=\"checkbox\"\r\n                      checked={this.state.permissions.includes(permission)}\r\n                      value={permission}\r\n                      onChange={this.handlePermissionChange}\r\n                    />\r\n                  </label>\r\n                </td>\r\n              ))}\r\n              <td>\r\n                <SickButton\r\n                  type=\"button\"\r\n                  disabled={loading}\r\n                  onClick={updatePermissions}\r\n                >\r\n                  Updat{loading ? \"ing\" : \"e\"}\r\n                </SickButton>\r\n              </td>\r\n            </tr>\r\n          </>\r\n        )}\r\n      </Mutation>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Permissions;\r\n"]},"metadata":{},"sourceType":"module"}