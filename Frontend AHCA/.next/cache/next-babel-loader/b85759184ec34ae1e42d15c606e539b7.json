{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Wade\\\\Documents\\\\AHCA Web\\\\Frontend AHCA\\\\components\\\\OutsideAlerter.js\";\nvar __jsx = React.createElement;\nimport React, { useRef, useEffect } from \"react\";\n/**\r\n * Hook that alerts clicks outside of the passed ref\r\n */\n\nfunction useOutsideAlerter(ref) {\n  /**\r\n   * Alert if clicked on outside of element\r\n   */\n  function handleClickOutside(event) {\n    if (ref.current && !ref.current.contains(event.target)) {\n      alert(\"You clicked outside of me!\");\n    }\n  }\n\n  useEffect(() => {\n    // Bind the event listener\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      // Unbind the event listener on clean up\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  });\n}\n/**\r\n * Component that alerts if you click outside of it\r\n */\n\n\nexport default function OutsideAlerter(props) {\n  const wrapperRef = useRef(null);\n  useOutsideAlerter(wrapperRef);\n  return __jsx(\"div\", {\n    ref: wrapperRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, props.children);\n}","map":{"version":3,"sources":["C:/Users/Wade/Documents/AHCA Web/Frontend AHCA/components/OutsideAlerter.js"],"names":["React","useRef","useEffect","useOutsideAlerter","ref","handleClickOutside","event","current","contains","target","alert","document","addEventListener","removeEventListener","OutsideAlerter","props","wrapperRef","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,QAAyC,OAAzC;AAEA;;;;AAGA,SAASC,iBAAT,CAA2BC,GAA3B,EAAgC;AAC9B;;;AAGA,WAASC,kBAAT,CAA4BC,KAA5B,EAAmC;AACjC,QAAIF,GAAG,CAACG,OAAJ,IAAe,CAACH,GAAG,CAACG,OAAJ,CAAYC,QAAZ,CAAqBF,KAAK,CAACG,MAA3B,CAApB,EAAwD;AACtDC,MAAAA,KAAK,CAAC,4BAAD,CAAL;AACD;AACF;;AAEDR,EAAAA,SAAS,CAAC,MAAM;AACd;AACAS,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,WAA1B,EAAuCP,kBAAvC;AACA,WAAO,MAAM;AACX;AACAM,MAAAA,QAAQ,CAACE,mBAAT,CAA6B,WAA7B,EAA0CR,kBAA1C;AACD,KAHD;AAID,GAPQ,CAAT;AAQD;AAED;;;;;AAGA,eAAe,SAASS,cAAT,CAAwBC,KAAxB,EAA+B;AAC5C,QAAMC,UAAU,GAAGf,MAAM,CAAC,IAAD,CAAzB;AACAE,EAAAA,iBAAiB,CAACa,UAAD,CAAjB;AAEA,SAAO;AAAK,IAAA,GAAG,EAAEA,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuBD,KAAK,CAACE,QAA7B,CAAP;AACD","sourcesContent":["import React, { useRef, useEffect } from \"react\";\r\n\r\n/**\r\n * Hook that alerts clicks outside of the passed ref\r\n */\r\nfunction useOutsideAlerter(ref) {\r\n  /**\r\n   * Alert if clicked on outside of element\r\n   */\r\n  function handleClickOutside(event) {\r\n    if (ref.current && !ref.current.contains(event.target)) {\r\n      alert(\"You clicked outside of me!\");\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    // Bind the event listener\r\n    document.addEventListener(\"mousedown\", handleClickOutside);\r\n    return () => {\r\n      // Unbind the event listener on clean up\r\n      document.removeEventListener(\"mousedown\", handleClickOutside);\r\n    };\r\n  });\r\n}\r\n\r\n/**\r\n * Component that alerts if you click outside of it\r\n */\r\nexport default function OutsideAlerter(props) {\r\n  const wrapperRef = useRef(null);\r\n  useOutsideAlerter(wrapperRef);\r\n\r\n  return <div ref={wrapperRef}>{props.children}</div>;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}