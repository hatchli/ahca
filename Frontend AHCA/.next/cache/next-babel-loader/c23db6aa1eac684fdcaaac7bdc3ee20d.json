{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Wade\\\\Documents\\\\AHCA Web\\\\Frontend AHCA\\\\components\\\\Items.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport styled from \"styled-components\";\nimport Item2 from \"./Item2\";\nimport Pagination from \"./Pagination\";\nimport { perPage } from \"../config\";\nimport User from \"./User\";\nconst ALL_ITEMS_QUERY = gql`\n  query ALL_ITEMS_QUERY($skip: Int = 0, $first: Int = ${perPage}) {\n    items(first: $first, skip: $skip, orderBy: createdAt_DESC) {\n      id\n      title\n      price\n      description\n      image\n      largeImage\n      image1\n      largeImage1\n      image2\n      largeImage2\n    }\n  }\n`;\nconst CREATE_GUEST_MUTATION = gql`\n  mutation CREATE_GUEST_MUTATION(\n    $email: String\n    $name: String\n    $password: String\n  ) {\n    createGuest(email: $email, name: $name, password: $password) {\n      id\n      email\n      name\n    }\n  }\n`;\nconst Center = styled.div.withConfig({\n  displayName: \"Items__Center\",\n  componentId: \"tikday-0\"\n})([\"text-align:center;\"]);\nconst ItemsList = styled.div.withConfig({\n  displayName: \"Items__ItemsList\",\n  componentId: \"tikday-1\"\n})([\"display:grid;grid-template-columns:1fr 1fr;grid-gap:60px;max-width:\", \";margin:0 auto;\"], props => props.theme.maxWidth);\n\nconst Items = ({\n  id\n}) => __jsx(User, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 54\n  },\n  __self: this\n}, ({\n  data\n}) => {\n  let me = data ? data.me : null;\n  let guest = me === null ? true : false;\n  console.log(guest);\n  return !guest ? __jsx(Center, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, __jsx(Pagination, {\n    page: this.props.page,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), __jsx(Query, {\n    query: ALL_ITEMS_QUERY,\n    variables: {\n      skip: this.props.page * perPage - perPage // first: perPage\n\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, ({\n    data,\n    error,\n    loading\n  }) => {\n    if (loading) return __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Loading...\");\n    if (error) return __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Error: \", error.message);\n    return __jsx(ItemsList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, data.items.map(item => __jsx(Item2, {\n      item: item,\n      key: item.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    })));\n  }), __jsx(Pagination, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  })) : __jsx(Mutation, {\n    mutation: CREATE_GUEST_MUTATION,\n    variables: {\n      id\n    },\n    refetchQueries: [{\n      query: CURRENT_USER_QUERY\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, (createGuest, {\n    loading,\n    error\n  }) => {\n    useEffect(() => {\n      createGuest;\n    });\n    return __jsx(Center, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, __jsx(Pagination, {\n      page: this.props.page,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), __jsx(Query, {\n      query: ALL_ITEMS_QUERY,\n      variables: {\n        skip: this.props.page * perPage - perPage // first: perPage\n\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, ({\n      data,\n      error,\n      loading\n    }) => {\n      if (loading) return __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"Loading...\");\n      if (error) return __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"Error: \", error.message);\n      return __jsx(ItemsList, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, data.items.map(item => __jsx(Item2, {\n        item: item,\n        key: item.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      })));\n    }), __jsx(Pagination, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }));\n  });\n});\n\nexport default Items;\nexport { ALL_ITEMS_QUERY };","map":{"version":3,"sources":["C:/Users/Wade/Documents/AHCA Web/Frontend AHCA/components/Items.js"],"names":["React","useState","useEffect","Query","gql","styled","Item2","Pagination","perPage","User","ALL_ITEMS_QUERY","CREATE_GUEST_MUTATION","Center","div","ItemsList","props","theme","maxWidth","Items","id","data","me","guest","console","log","page","skip","error","loading","message","items","map","item","query","CURRENT_USER_QUERY","createGuest"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Query } from \"react-apollo\";\r\nimport gql from \"graphql-tag\";\r\nimport styled from \"styled-components\";\r\nimport Item2 from \"./Item2\";\r\nimport Pagination from \"./Pagination\";\r\nimport { perPage } from \"../config\";\r\nimport User from \"./User\";\r\n\r\nconst ALL_ITEMS_QUERY = gql`\r\n  query ALL_ITEMS_QUERY($skip: Int = 0, $first: Int = ${perPage}) {\r\n    items(first: $first, skip: $skip, orderBy: createdAt_DESC) {\r\n      id\r\n      title\r\n      price\r\n      description\r\n      image\r\n      largeImage\r\n      image1\r\n      largeImage1\r\n      image2\r\n      largeImage2\r\n    }\r\n  }\r\n`;\r\n\r\nconst CREATE_GUEST_MUTATION = gql`\r\n  mutation CREATE_GUEST_MUTATION(\r\n    $email: String\r\n    $name: String\r\n    $password: String\r\n  ) {\r\n    createGuest(email: $email, name: $name, password: $password) {\r\n      id\r\n      email\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\nconst Center = styled.div`\r\n  text-align: center;\r\n`;\r\n\r\nconst ItemsList = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  grid-gap: 60px;\r\n  max-width: ${props => props.theme.maxWidth};\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst Items = ({ id }) => (\r\n  <User>\r\n    {({ data }) => {\r\n      let me = data ? data.me : null;\r\n      let guest = me === null ? true : false;\r\n      console.log(guest);\r\n\r\n      return !guest ? (\r\n        <Center>\r\n          <Pagination page={this.props.page} />\r\n          <Query\r\n            query={ALL_ITEMS_QUERY}\r\n            variables={{\r\n              skip: this.props.page * perPage - perPage\r\n              // first: perPage\r\n            }}\r\n          >\r\n            {({ data, error, loading }) => {\r\n              if (loading) return <p>Loading...</p>;\r\n              if (error) return <p>Error: {error.message}</p>;\r\n              return (\r\n                <ItemsList>\r\n                  {data.items.map(item => (\r\n                    <Item2 item={item} key={item.id} />\r\n                  ))}\r\n                </ItemsList>\r\n              );\r\n            }}\r\n          </Query>\r\n          <Pagination />\r\n        </Center>\r\n      ) : (\r\n        <Mutation\r\n          mutation={CREATE_GUEST_MUTATION}\r\n          variables={{ id }}\r\n          refetchQueries={[{ query: CURRENT_USER_QUERY }]}\r\n        >\r\n          {(createGuest, { loading, error }) => {\r\n            useEffect(() => {\r\n              createGuest;\r\n            });\r\n            return (\r\n              <Center>\r\n                <Pagination page={this.props.page} />\r\n                <Query\r\n                  query={ALL_ITEMS_QUERY}\r\n                  variables={{\r\n                    skip: this.props.page * perPage - perPage\r\n                    // first: perPage\r\n                  }}\r\n                >\r\n                  {({ data, error, loading }) => {\r\n                    if (loading) return <p>Loading...</p>;\r\n                    if (error) return <p>Error: {error.message}</p>;\r\n                    return (\r\n                      <ItemsList>\r\n                        {data.items.map(item => (\r\n                          <Item2 item={item} key={item.id} />\r\n                        ))}\r\n                      </ItemsList>\r\n                    );\r\n                  }}\r\n                </Query>\r\n                <Pagination />\r\n              </Center>\r\n            );\r\n          }}\r\n        </Mutation>\r\n      );\r\n    }}\r\n  </User>\r\n);\r\nexport default Items;\r\nexport { ALL_ITEMS_QUERY };\r\n"]},"metadata":{},"sourceType":"module"}