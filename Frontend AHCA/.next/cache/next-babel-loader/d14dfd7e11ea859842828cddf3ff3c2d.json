{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport wait from \"waait\";\nimport { Query, Mutation } from \"react-apollo\";\nimport User from \"./User\";\nimport gql from \"graphql-tag\";\nimport CartStyles from \"./styles/CartStyles\";\nimport Supreme from \"./styles/Supreme\";\nimport CloseButton from \"./styles/CloseButton\";\nimport SickButton from \"./styles/SickButton\";\nimport CartItem from \"./CartItem\";\nimport calcTotalPrice from \"../lib/calcTotalPrice\";\nimport formatMoney from \"../lib/formatMoney\";\nimport { adopt } from \"react-adopt\";\nimport TakeMyMoney from \"./TakeMyMoney\";\nimport UpdatePhoneAddress from \"./UpdatePhoneAddress\";\nconst LOCAL_STATE_QUERY = gql`\n  query {\n    cartOpen @client\n  }\n`;\nconst TOGGLE_CART_MUTATION = gql`\n  mutation {\n    toggleCart @client\n  }\n`;\nconst Composed = adopt({\n  user: ({\n    render\n  }) => __jsx(User, null, render),\n  // cartItem: ({ render }) => <CartItem>{render}</CartItem>,\n  toggleCart: ({\n    render\n  }) => __jsx(Mutation, {\n    mutation: TOGGLE_CART_MUTATION\n  }, render),\n  localState: ({\n    render\n  }) => __jsx(Query, {\n    query: LOCAL_STATE_QUERY\n  }, render)\n});\n\nconst Cart = (props, {\n  item\n}) => {\n  const {\n    0: cartState,\n    1: setCartState\n  } = useState(true);\n\n  const flipCart = () => {\n    return setCartState(!cartState);\n  };\n\n  return __jsx(Composed, null, ({\n    user,\n    toggleCart,\n    localState\n  }) => {\n    console.log(\"user.data\", user.data);\n    const me = user.data ? user.data.me : null;\n    if (!me) return null;\n    console.log(me);\n    return __jsx(CartStyles, {\n      open: localState.data.cartOpen\n    }, __jsx(\"header\", null, __jsx(CloseButton, {\n      onClick: toggleCart,\n      title: \"close\"\n    }, \"\\xD7\"), me.permissions.includes(\"GUEST\") ? __jsx(Supreme, null, \"Guest Cart\") : __jsx(Supreme, null, me.name, \"'s Cart\"), __jsx(\"p\", null, \"You have \", me.cart.length, \" item\", me.cart.length === 1 ? \"\" : \"s\", \" in your cart\")), __jsx(\"ul\", null, cartState && me.cart.map(cartItem => __jsx(React.Fragment, null, __jsx(CartItem, {\n      key: cartItem.id,\n      cartItem: cartItem\n    }))), !cartState && me.permissions.includes(\"GUEST\") && __jsx(UpdatePhoneAddress, null)), __jsx(\"footer\", null, __jsx(\"p\", null, formatMoney(calcTotalPrice(me.cart))), me.cart.length && !cartState ? __jsx(TakeMyMoney, null, __jsx(SickButton, {\n      disabled: false\n    }, \"Checkout\")) : me.permissions.includes(\"GUEST\") ? __jsx(SickButton, {\n      onClick: () => flipCart(),\n      disabled: false\n    }, \"Checkout\") : __jsx(TakeMyMoney, null, __jsx(SickButton, {\n      disabled: true\n    }, \"Checkout\"))));\n  });\n};\n\nexport default Cart;\nexport { LOCAL_STATE_QUERY, TOGGLE_CART_MUTATION };","map":null,"metadata":{},"sourceType":"module"}