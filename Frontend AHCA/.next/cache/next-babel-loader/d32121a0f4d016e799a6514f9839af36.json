{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Wade\\\\Documents\\\\AHCA Web\\\\Frontend AHCA\\\\components\\\\Search.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Downshift, { resetIdCounter } from \"downshift\";\nimport Router from \"next/router\";\nimport { ApolloConsumer } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport debounce from \"lodash.debounce\";\nimport { DropDown, DropDownItem, SearchStyles } from \"./styles/DropDown\";\nconst SEARCH_ITEMS_QUERY = gql`\n  query SEARCH_ITEMS_QUERY($searchTerm: String!) {\n    items(\n      where: {\n        OR: [\n          { title_contains: $searchTerm }\n          { description_contains: $searchTerm }\n        ]\n      }\n    ) {\n      id\n      image\n      title\n    }\n  }\n`;\n\nfunction routeToItem(item) {\n  Router.push({\n    pathname: \"/item\",\n    query: {\n      id: item.id\n    }\n  });\n}\n\nexport default class AutoComplete extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      items: [],\n      loading: false\n    });\n\n    _defineProperty(this, \"onChange\", debounce(async (e, client) => {\n      // turn loading on\n      this.setState({\n        loading: true\n      }); //manually query Apollo client\n\n      const res = await client.query({\n        query: SEARCH_ITEMS_QUERY,\n        variables: {\n          searchTerm: e.target.value\n        }\n      });\n      this.setState({\n        items: res.data.items,\n        loading: false\n      });\n    }, 350));\n  }\n\n  render() {\n    resetIdCounter();\n    return __jsx(SearchStyles, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, __jsx(Downshift, {\n      onChange: routeToItem,\n      itemToString: item => item === null ? \"\" : item.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, ({\n      getInputProps,\n      getItemProps,\n      isOpen,\n      inputValue,\n      highlightedIndex\n    }) => __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, __jsx(ApolloConsumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, client => __jsx(\"input\", _extends({}, getInputProps({\n      type: \"search\",\n      placeholder: \"Search For An Item\",\n      id: \"search\",\n      className: this.state.loading ? \"loading\" : \"\",\n      onChange: e => {\n        e.persist();\n        this.onChange(e, client);\n      }\n    }), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }))), isOpen && __jsx(DropDown, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, this.state.items.map((item, index) => __jsx(DropDownItem, _extends({}, getItemProps({\n      item\n    }), {\n      key: item.id,\n      highlighted: index === highlightedIndex,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), __jsx(\"img\", {\n      width: \"50\",\n      src: item.image,\n      alt: item.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), item.title)), !this.state.items.length && !this.state.loading && __jsx(DropDownItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Nothing Found For \", inputValue)))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Wade/Documents/AHCA Web/Frontend AHCA/components/Search.js"],"names":["React","Downshift","resetIdCounter","Router","ApolloConsumer","gql","debounce","DropDown","DropDownItem","SearchStyles","SEARCH_ITEMS_QUERY","routeToItem","item","push","pathname","query","id","AutoComplete","Component","items","loading","e","client","setState","res","variables","searchTerm","target","value","data","render","title","getInputProps","getItemProps","isOpen","inputValue","highlightedIndex","type","placeholder","className","state","onChange","persist","map","index","image","length"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Downshift, { resetIdCounter } from \"downshift\";\r\nimport Router from \"next/router\";\r\nimport { ApolloConsumer } from \"react-apollo\";\r\nimport gql from \"graphql-tag\";\r\nimport debounce from \"lodash.debounce\";\r\nimport { DropDown, DropDownItem, SearchStyles } from \"./styles/DropDown\";\r\n\r\nconst SEARCH_ITEMS_QUERY = gql`\r\n  query SEARCH_ITEMS_QUERY($searchTerm: String!) {\r\n    items(\r\n      where: {\r\n        OR: [\r\n          { title_contains: $searchTerm }\r\n          { description_contains: $searchTerm }\r\n        ]\r\n      }\r\n    ) {\r\n      id\r\n      image\r\n      title\r\n    }\r\n  }\r\n`;\r\nfunction routeToItem(item) {\r\n  Router.push({\r\n    pathname: \"/item\",\r\n    query: {\r\n      id: item.id\r\n    }\r\n  });\r\n}\r\nexport default class AutoComplete extends React.Component {\r\n  state = {\r\n    items: [],\r\n    loading: false\r\n  };\r\n  onChange = debounce(async (e, client) => {\r\n    // turn loading on\r\n    this.setState({ loading: true });\r\n    //manually query Apollo client\r\n    const res = await client.query({\r\n      query: SEARCH_ITEMS_QUERY,\r\n      variables: { searchTerm: e.target.value }\r\n    });\r\n    this.setState({\r\n      items: res.data.items,\r\n      loading: false\r\n    });\r\n  }, 350);\r\n  render() {\r\n    resetIdCounter();\r\n    return (\r\n      <SearchStyles>\r\n        <Downshift\r\n          onChange={routeToItem}\r\n          itemToString={item => (item === null ? \"\" : item.title)}\r\n        >\r\n          {({\r\n            getInputProps,\r\n            getItemProps,\r\n            isOpen,\r\n            inputValue,\r\n            highlightedIndex\r\n          }) => (\r\n            <div>\r\n              <ApolloConsumer>\r\n                {client => (\r\n                  <input\r\n                    {...getInputProps({\r\n                      type: \"search\",\r\n                      placeholder: \"Search For An Item\",\r\n                      id: \"search\",\r\n                      className: this.state.loading ? \"loading\" : \"\",\r\n                      onChange: e => {\r\n                        e.persist();\r\n                        this.onChange(e, client);\r\n                      }\r\n                    })}\r\n                  />\r\n                )}\r\n              </ApolloConsumer>\r\n              {isOpen && (\r\n                <DropDown>\r\n                  {this.state.items.map((item, index) => (\r\n                    <DropDownItem\r\n                      {...getItemProps({ item })}\r\n                      key={item.id}\r\n                      highlighted={index === highlightedIndex}\r\n                    >\r\n                      <img width=\"50\" src={item.image} alt={item.title} />\r\n                      {item.title}\r\n                    </DropDownItem>\r\n                  ))}\r\n                  {!this.state.items.length && !this.state.loading && (\r\n                    <DropDownItem>Nothing Found For {inputValue}</DropDownItem>\r\n                  )}\r\n                </DropDown>\r\n              )}\r\n            </div>\r\n          )}\r\n        </Downshift>\r\n      </SearchStyles>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}