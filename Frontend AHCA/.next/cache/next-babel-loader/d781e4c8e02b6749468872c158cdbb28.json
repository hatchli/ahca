{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Wade\\\\Documents\\\\AHCA Web\\\\Frontend AHCA\\\\components\\\\Items.js\";\n\nvar __jsx = React.createElement;\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation CREATE_GUEST_MUTATION(\\n    $email: String\\n    $name: String\\n    $password: String\\n  ) {\\n    createGuest(email: $email, name: $name, password: $password) {\\n      id\\n      email\\n      name\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query ALL_ITEMS_QUERY($skip: Int = 0, $first: Int = \", \") {\\n    items(first: $first, skip: $skip, orderBy: createdAt_DESC) {\\n      id\\n      title\\n      price\\n      description\\n      image\\n      largeImage\\n      image1\\n      largeImage1\\n      image2\\n      largeImage2\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useEffect } from \"react\";\nimport { Query } from \"react-apollo\";\nimport { Mutation } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport styled from \"styled-components\";\nimport Item2 from \"./Item2\";\nimport Pagination from \"./Pagination\";\nimport { perPage } from \"../config\";\nimport User from \"./User\";\nimport { CURRENT_USER_QUERY } from \"./User\";\nvar ALL_ITEMS_QUERY = gql(_templateObject(), perPage);\nvar CREATE_GUEST_MUTATION = gql(_templateObject2());\nvar Center = styled.div.withConfig({\n  displayName: \"Items__Center\",\n  componentId: \"tikday-0\"\n})([\"text-align:center;\"]);\nvar ItemsList = styled.div.withConfig({\n  displayName: \"Items__ItemsList\",\n  componentId: \"tikday-1\"\n})([\"display:grid;grid-template-columns:1fr 1fr;grid-gap:60px;max-width:\", \";margin:0 auto;\"], function (props) {\n  return props.theme.maxWidth;\n});\n\nvar Items = function Items(_ref) {\n  var id = _ref.id;\n  return __jsx(User, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, function (_ref2) {\n    var data = _ref2.data;\n    var me = data ? data.me : null;\n    var guest = me === null ? true : false;\n    console.log(guest);\n    return !guest ? __jsx(Center, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, __jsx(Pagination, {\n      page: _this.props.page,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), __jsx(Query, {\n      query: ALL_ITEMS_QUERY,\n      variables: {\n        skip: _this.props.page * perPage - perPage // first: perPage\n\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, function (_ref3) {\n      var data = _ref3.data,\n          error = _ref3.error,\n          loading = _ref3.loading;\n      if (loading) return __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"Loading...\");\n      if (error) return __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Error: \", error.message);\n      return __jsx(ItemsList, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, data.items.map(function (item) {\n        return __jsx(Item2, {\n          item: item,\n          key: item.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        });\n      }));\n    }), __jsx(Pagination, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    })) : __jsx(Mutation, {\n      mutation: CREATE_GUEST_MUTATION,\n      variables: {\n        id: id\n      },\n      refetchQueries: [{\n        query: CURRENT_USER_QUERY\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, function (createGuest, _ref4) {\n      var loading = _ref4.loading,\n          error = _ref4.error;\n      useEffect(function () {\n        createGuest;\n      });\n      return __jsx(Center, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, __jsx(Pagination, {\n        page: _this.props.page,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }), __jsx(Query, {\n        query: ALL_ITEMS_QUERY,\n        variables: {\n          skip: _this.props.page * perPage - perPage // first: perPage\n\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, function (_ref5) {\n        var data = _ref5.data,\n            error = _ref5.error,\n            loading = _ref5.loading;\n        if (loading) return __jsx(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }, \"Loading...\");\n        if (error) return __jsx(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }, \"Error: \", error.message);\n        return __jsx(ItemsList, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }, data.items.map(function (item) {\n          return __jsx(Item2, {\n            item: item,\n            key: item.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 112\n            },\n            __self: this\n          });\n        }));\n      }), __jsx(Pagination, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }));\n    });\n  });\n};\n\nexport default Items;\nexport { ALL_ITEMS_QUERY };","map":{"version":3,"sources":["C:/Users/Wade/Documents/AHCA Web/Frontend AHCA/components/Items.js"],"names":["React","useState","useEffect","Query","Mutation","gql","styled","Item2","Pagination","perPage","User","CURRENT_USER_QUERY","ALL_ITEMS_QUERY","CREATE_GUEST_MUTATION","Center","div","ItemsList","props","theme","maxWidth","Items","id","data","me","guest","console","log","page","skip","error","loading","message","items","map","item","query","createGuest"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Query } from \"react-apollo\";\r\nimport { Mutation } from \"react-apollo\";\r\nimport gql from \"graphql-tag\";\r\nimport styled from \"styled-components\";\r\nimport Item2 from \"./Item2\";\r\nimport Pagination from \"./Pagination\";\r\nimport { perPage } from \"../config\";\r\nimport User from \"./User\";\r\nimport { CURRENT_USER_QUERY } from \"./User\";\r\n\r\nconst ALL_ITEMS_QUERY = gql`\r\n  query ALL_ITEMS_QUERY($skip: Int = 0, $first: Int = ${perPage}) {\r\n    items(first: $first, skip: $skip, orderBy: createdAt_DESC) {\r\n      id\r\n      title\r\n      price\r\n      description\r\n      image\r\n      largeImage\r\n      image1\r\n      largeImage1\r\n      image2\r\n      largeImage2\r\n    }\r\n  }\r\n`;\r\n\r\nconst CREATE_GUEST_MUTATION = gql`\r\n  mutation CREATE_GUEST_MUTATION(\r\n    $email: String\r\n    $name: String\r\n    $password: String\r\n  ) {\r\n    createGuest(email: $email, name: $name, password: $password) {\r\n      id\r\n      email\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\nconst Center = styled.div`\r\n  text-align: center;\r\n`;\r\n\r\nconst ItemsList = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  grid-gap: 60px;\r\n  max-width: ${props => props.theme.maxWidth};\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst Items = ({ id }) => (\r\n  <User>\r\n    {({ data }) => {\r\n      let me = data ? data.me : null;\r\n      let guest = me === null ? true : false;\r\n      console.log(guest);\r\n\r\n      return !guest ? (\r\n        <Center>\r\n          <Pagination page={this.props.page} />\r\n          <Query\r\n            query={ALL_ITEMS_QUERY}\r\n            variables={{\r\n              skip: this.props.page * perPage - perPage\r\n              // first: perPage\r\n            }}\r\n          >\r\n            {({ data, error, loading }) => {\r\n              if (loading) return <p>Loading...</p>;\r\n              if (error) return <p>Error: {error.message}</p>;\r\n              return (\r\n                <ItemsList>\r\n                  {data.items.map(item => (\r\n                    <Item2 item={item} key={item.id} />\r\n                  ))}\r\n                </ItemsList>\r\n              );\r\n            }}\r\n          </Query>\r\n          <Pagination />\r\n        </Center>\r\n      ) : (\r\n        <Mutation\r\n          mutation={CREATE_GUEST_MUTATION}\r\n          variables={{ id }}\r\n          refetchQueries={[{ query: CURRENT_USER_QUERY }]}\r\n        >\r\n          {(createGuest, { loading, error }) => {\r\n            useEffect(() => {\r\n              createGuest;\r\n            });\r\n            return (\r\n              <Center>\r\n                <Pagination page={this.props.page} />\r\n                <Query\r\n                  query={ALL_ITEMS_QUERY}\r\n                  variables={{\r\n                    skip: this.props.page * perPage - perPage\r\n                    // first: perPage\r\n                  }}\r\n                >\r\n                  {({ data, error, loading }) => {\r\n                    if (loading) return <p>Loading...</p>;\r\n                    if (error) return <p>Error: {error.message}</p>;\r\n                    return (\r\n                      <ItemsList>\r\n                        {data.items.map(item => (\r\n                          <Item2 item={item} key={item.id} />\r\n                        ))}\r\n                      </ItemsList>\r\n                    );\r\n                  }}\r\n                </Query>\r\n                <Pagination />\r\n              </Center>\r\n            );\r\n          }}\r\n        </Mutation>\r\n      );\r\n    }}\r\n  </User>\r\n);\r\nexport default Items;\r\nexport { ALL_ITEMS_QUERY };\r\n"]},"metadata":{},"sourceType":"module"}