{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"C:\\\\Users\\\\Wade\\\\Documents\\\\AHCA Web\\\\Frontend AHCA\\\\components\\\\AddToCart.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { Mutation } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport { CURRENT_USER_QUERY } from \"./User\";\nimport User from \"./User\";\nimport { Button } from \"rebass\";\nconst ADD_TO_CART_MUTATION = gql`\n  mutation addToCart($id: ID!) {\n    addToCart(id: $id) {\n      id\n      quantity\n    }\n  }\n`;\nconst pleft = [3, 4, 5, 6];\nconst CREATE_GUEST_MUTATION = gql`\n  mutation CREATE_GUEST_MUTATION(\n    $email: String\n    $name: String\n    $password: String\n  ) {\n    createGuest(email: $email, name: $name, password: $password) {\n      id\n      email\n      name\n    }\n  }\n`;\n\nconst AddToCart = (props, {\n  id\n}) => __jsx(User, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33\n  },\n  __self: this\n}, ({\n  data\n}) => {\n  let me = data ? data.me : null;\n  let guest = me === null ? true : false;\n  return !guest ? __jsx(Mutation, {\n    mutation: ADD_TO_CART_MUTATION,\n    variables: {\n      id\n    },\n    refetchQueries: [{\n      query: CURRENT_USER_QUERY\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, (addToCart, {\n    loading,\n    error\n  }) => {\n    return __jsx(Button, _extends({}, props, {\n      sx: {\n        bg: \"dark-green\",\n        color: \"white\",\n        borderRadius: \"1\",\n        width: [3, 5]\n      },\n      ml: pleft,\n      onClick: addToCart,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), \"Add\", loading && `ing`, \" to Cart \\uD83D\\uDED2\", \" \");\n  }) : __jsx(Mutation, {\n    mutation: CREATE_GUEST_MUTATION,\n    variables: {\n      id\n    },\n    refetchQueries: [{\n      query: CURRENT_USER_QUERY\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, (createGuest, {\n    loading,\n    error\n  }) => {\n    return __jsx(Button, _extends({}, props, {\n      sx: {\n        bg: \"dark-green\",\n        color: \"white\",\n        borderRadius: \"1\"\n      },\n      ml: pleft,\n      onClick: createGuest,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), \"Add\", loading && `ing`, \" to Cart \\uD83D\\uDED2\", \" \");\n  });\n});\n\nexport default AddToCart;\nexport { ADD_TO_CART_MUTATION };","map":{"version":3,"sources":["C:/Users/Wade/Documents/AHCA Web/Frontend AHCA/components/AddToCart.js"],"names":["React","Mutation","gql","CURRENT_USER_QUERY","User","Button","ADD_TO_CART_MUTATION","pleft","CREATE_GUEST_MUTATION","AddToCart","props","id","data","me","guest","query","addToCart","loading","error","bg","color","borderRadius","width","createGuest"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,kBAAT,QAAmC,QAAnC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,MAAT,QAAuB,QAAvB;AAEA,MAAMC,oBAAoB,GAAGJ,GAAI;;;;;;;CAAjC;AAQA,MAAMK,KAAK,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAAd;AAEA,MAAMC,qBAAqB,GAAGN,GAAI;;;;;;;;;;;;CAAlC;;AAcA,MAAMO,SAAS,GAAG,CAACC,KAAD,EAAQ;AAAEC,EAAAA;AAAF,CAAR,KAChB,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AACb,MAAIC,EAAE,GAAGD,IAAI,GAAGA,IAAI,CAACC,EAAR,GAAa,IAA1B;AACA,MAAIC,KAAK,GAAGD,EAAE,KAAK,IAAP,GAAc,IAAd,GAAqB,KAAjC;AAEA,SAAO,CAACC,KAAD,GACL,MAAC,QAAD;AACE,IAAA,QAAQ,EAAER,oBADZ;AAEE,IAAA,SAAS,EAAE;AAAEK,MAAAA;AAAF,KAFb;AAGE,IAAA,cAAc,EAAE,CAAC;AAAEI,MAAAA,KAAK,EAAEZ;AAAT,KAAD,CAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKG,CAACa,SAAD,EAAY;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAAZ,KAAmC;AAClC,WACE,MAAC,MAAD,eACMR,KADN;AAEE,MAAA,EAAE,EAAE;AACFS,QAAAA,EAAE,EAAE,YADF;AAEFC,QAAAA,KAAK,EAAE,OAFL;AAGFC,QAAAA,YAAY,EAAE,GAHZ;AAIFC,QAAAA,KAAK,EAAE,CAAC,CAAD,EAAI,CAAJ;AAJL,OAFN;AAQE,MAAA,EAAE,EAAEf,KARN;AASE,MAAA,OAAO,EAAES,SATX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAWMC,OAAO,IAAK,KAXlB,2BAWmC,GAXnC,CADF;AAeD,GArBH,CADK,GAyBL,MAAC,QAAD;AACE,IAAA,QAAQ,EAAET,qBADZ;AAEE,IAAA,SAAS,EAAE;AAAEG,MAAAA;AAAF,KAFb;AAGE,IAAA,cAAc,EAAE,CAAC;AAAEI,MAAAA,KAAK,EAAEZ;AAAT,KAAD,CAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKG,CAACoB,WAAD,EAAc;AAAEN,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAAd,KAAqC;AACpC,WACE,MAAC,MAAD,eACMR,KADN;AAEE,MAAA,EAAE,EAAE;AACFS,QAAAA,EAAE,EAAE,YADF;AAEFC,QAAAA,KAAK,EAAE,OAFL;AAGFC,QAAAA,YAAY,EAAE;AAHZ,OAFN;AAOE,MAAA,EAAE,EAAEd,KAPN;AAQE,MAAA,OAAO,EAAEgB,WARX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAUMN,OAAO,IAAK,KAVlB,2BAUmC,GAVnC,CADF;AAcD,GApBH,CAzBF;AAgDD,CArDH,CADF;;AAyDA,eAAeR,SAAf;AACA,SAASH,oBAAT","sourcesContent":["import React from \"react\";\r\nimport { Mutation } from \"react-apollo\";\r\nimport gql from \"graphql-tag\";\r\nimport { CURRENT_USER_QUERY } from \"./User\";\r\nimport User from \"./User\";\r\nimport { Button } from \"rebass\";\r\n\r\nconst ADD_TO_CART_MUTATION = gql`\r\n  mutation addToCart($id: ID!) {\r\n    addToCart(id: $id) {\r\n      id\r\n      quantity\r\n    }\r\n  }\r\n`;\r\nconst pleft = [3, 4, 5, 6];\r\n\r\nconst CREATE_GUEST_MUTATION = gql`\r\n  mutation CREATE_GUEST_MUTATION(\r\n    $email: String\r\n    $name: String\r\n    $password: String\r\n  ) {\r\n    createGuest(email: $email, name: $name, password: $password) {\r\n      id\r\n      email\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\nconst AddToCart = (props, { id }) => (\r\n  <User>\r\n    {({ data }) => {\r\n      let me = data ? data.me : null;\r\n      let guest = me === null ? true : false;\r\n\r\n      return !guest ? (\r\n        <Mutation\r\n          mutation={ADD_TO_CART_MUTATION}\r\n          variables={{ id }}\r\n          refetchQueries={[{ query: CURRENT_USER_QUERY }]}\r\n        >\r\n          {(addToCart, { loading, error }) => {\r\n            return (\r\n              <Button\r\n                {...props}\r\n                sx={{\r\n                  bg: \"dark-green\",\r\n                  color: \"white\",\r\n                  borderRadius: \"1\",\r\n                  width: [3, 5]\r\n                }}\r\n                ml={pleft}\r\n                onClick={addToCart}\r\n              >\r\n                Add{loading && `ing`} to Cart ðŸ›’{\" \"}\r\n              </Button>\r\n            );\r\n          }}\r\n        </Mutation>\r\n      ) : (\r\n        <Mutation\r\n          mutation={CREATE_GUEST_MUTATION}\r\n          variables={{ id }}\r\n          refetchQueries={[{ query: CURRENT_USER_QUERY }]}\r\n        >\r\n          {(createGuest, { loading, error }) => {\r\n            return (\r\n              <Button\r\n                {...props}\r\n                sx={{\r\n                  bg: \"dark-green\",\r\n                  color: \"white\",\r\n                  borderRadius: \"1\"\r\n                }}\r\n                ml={pleft}\r\n                onClick={createGuest}\r\n              >\r\n                Add{loading && `ing`} to Cart ðŸ›’{\" \"}\r\n              </Button>\r\n            );\r\n          }}\r\n        </Mutation>\r\n      );\r\n    }}\r\n  </User>\r\n);\r\nexport default AddToCart;\r\nexport { ADD_TO_CART_MUTATION };\r\n"]},"metadata":{},"sourceType":"module"}