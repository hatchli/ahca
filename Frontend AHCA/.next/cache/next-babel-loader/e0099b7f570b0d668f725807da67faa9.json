{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Wade\\\\Documents\\\\AHCA Web\\\\Frontend AHCA\\\\components\\\\Items.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport styled from \"styled-components\";\nimport Item2 from \"./Item2\";\nimport Pagination from \"./Pagination\";\nimport { perPage } from \"../config\";\nconst ALL_ITEMS_QUERY = gql`\n  query ALL_ITEMS_QUERY($skip: Int = 0, $first: Int = ${perPage}) {\n    items(first: $first, skip: $skip, orderBy: createdAt_DESC) {\n      id\n      title\n      price\n      description\n      image\n      largeImage\n      image1\n      largeImage1\n      image2\n      largeImage2\n    }\n  }\n`;\nconst Center = styled.div.withConfig({\n  displayName: \"Items__Center\",\n  componentId: \"tikday-0\"\n})([\"text-align:center;\"]);\nconst ItemsList = styled.div.withConfig({\n  displayName: \"Items__ItemsList\",\n  componentId: \"tikday-1\"\n})([\"display:grid;grid-template-columns:1fr 1fr;grid-gap:60px;max-width:\", \";margin:0 auto;\"], props => props.theme.maxWidth);\nexport default class Items extends Component {\n  render() {\n    return __jsx(Center, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, __jsx(Pagination, {\n      page: this.props.page,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), __jsx(Query, {\n      query: ALL_ITEMS_QUERY,\n      variables: {\n        skip: this.props.page * perPage - perPage // first: perPage\n\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, ({\n      data,\n      error,\n      loading\n    }) => {\n      if (loading) return __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"Loading...\");\n      if (error) return __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"Error: \", error.message);\n      return __jsx(ItemsList, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, data.items.map(item => __jsx(Item2, {\n        item: item,\n        key: item.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      })));\n    }), __jsx(Pagination, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }));\n  }\n\n}\nexport { ALL_ITEMS_QUERY };","map":{"version":3,"sources":["C:/Users/Wade/Documents/AHCA Web/Frontend AHCA/components/Items.js"],"names":["React","Component","Query","gql","styled","Item2","Pagination","perPage","ALL_ITEMS_QUERY","Center","div","ItemsList","props","theme","maxWidth","Items","render","page","skip","data","error","loading","message","items","map","item","id"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,OAAT,QAAwB,WAAxB;AAEA,MAAMC,eAAe,GAAGL,GAAI;wDAC4BI,OAAQ;;;;;;;;;;;;;;CADhE;AAiBA,MAAME,MAAM,GAAGL,MAAM,CAACM,GAAV;AAAA;AAAA;AAAA,0BAAZ;AAIA,MAAMC,SAAS,GAAGP,MAAM,CAACM,GAAV;AAAA;AAAA;AAAA,+FAIAE,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYC,QAJrB,CAAf;AAQA,eAAe,MAAMC,KAAN,SAAoBd,SAApB,CAA8B;AAC3Ce,EAAAA,MAAM,GAAG;AACP,WACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,UAAD;AAAY,MAAA,IAAI,EAAE,KAAKJ,KAAL,CAAWK,IAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,MAAC,KAAD;AACE,MAAA,KAAK,EAAET,eADT;AAEE,MAAA,SAAS,EAAE;AACTU,QAAAA,IAAI,EAAE,KAAKN,KAAL,CAAWK,IAAX,GAAkBV,OAAlB,GAA4BA,OADzB,CAET;;AAFS,OAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOG,CAAC;AAAEY,MAAAA,IAAF;AAAQC,MAAAA,KAAR;AAAeC,MAAAA;AAAf,KAAD,KAA8B;AAC7B,UAAIA,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACb,UAAID,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAWA,KAAK,CAACE,OAAjB,CAAP;AACX,aACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGH,IAAI,CAACI,KAAL,CAAWC,GAAX,CAAeC,IAAI,IAClB,MAAC,KAAD;AAAO,QAAA,IAAI,EAAEA,IAAb;AAAmB,QAAA,GAAG,EAAEA,IAAI,CAACC,EAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,CADH,CADF;AAOD,KAjBH,CAFF,EAqBE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MArBF,CADF;AAyBD;;AA3B0C;AA8B7C,SAASlB,eAAT","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Query } from \"react-apollo\";\r\nimport gql from \"graphql-tag\";\r\nimport styled from \"styled-components\";\r\nimport Item2 from \"./Item2\";\r\nimport Pagination from \"./Pagination\";\r\nimport { perPage } from \"../config\";\r\n\r\nconst ALL_ITEMS_QUERY = gql`\r\n  query ALL_ITEMS_QUERY($skip: Int = 0, $first: Int = ${perPage}) {\r\n    items(first: $first, skip: $skip, orderBy: createdAt_DESC) {\r\n      id\r\n      title\r\n      price\r\n      description\r\n      image\r\n      largeImage\r\n      image1\r\n      largeImage1\r\n      image2\r\n      largeImage2\r\n    }\r\n  }\r\n`;\r\n\r\nconst Center = styled.div`\r\n  text-align: center;\r\n`;\r\n\r\nconst ItemsList = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  grid-gap: 60px;\r\n  max-width: ${props => props.theme.maxWidth};\r\n  margin: 0 auto;\r\n`;\r\n\r\nexport default class Items extends Component {\r\n  render() {\r\n    return (\r\n      <Center>\r\n        <Pagination page={this.props.page} />\r\n        <Query\r\n          query={ALL_ITEMS_QUERY}\r\n          variables={{\r\n            skip: this.props.page * perPage - perPage\r\n            // first: perPage\r\n          }}\r\n        >\r\n          {({ data, error, loading }) => {\r\n            if (loading) return <p>Loading...</p>;\r\n            if (error) return <p>Error: {error.message}</p>;\r\n            return (\r\n              <ItemsList>\r\n                {data.items.map(item => (\r\n                  <Item2 item={item} key={item.id} />\r\n                ))}\r\n              </ItemsList>\r\n            );\r\n          }}\r\n        </Query>\r\n        <Pagination />\r\n      </Center>\r\n    );\r\n  }\r\n}\r\n\r\nexport { ALL_ITEMS_QUERY };\r\n"]},"metadata":{},"sourceType":"module"}