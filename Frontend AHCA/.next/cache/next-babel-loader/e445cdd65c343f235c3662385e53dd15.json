{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation CREATE_GUEST_MUTATION(\\n    $email: String\\n    $name: String\\n    $password: String\\n  ) {\\n    createGuest(email: $email, name: $name, password: $password) {\\n      id\\n      email\\n      name\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useEffect } from \"react\";\nimport Map from \"./Map\";\nimport QuadFeature from \"./QuadFeature\";\nimport { Lead } from \"./Lead\";\nimport { Mutation } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport { CURRENT_USER_QUERY } from \"../components/User\";\nimport User from \"../components/User\";\nvar CREATE_GUEST_MUTATION = gql(_templateObject());\n\nvar Hero = function Hero(props, _ref) {\n  var id = _ref.id;\n  return __jsx(User, null, function (_ref2) {\n    var data = _ref2.data,\n        loading = _ref2.loading;\n    var me = data ? data.me : null;\n    var guest = me === null ? true : false;\n\n    var _useState = useState(guest),\n        guestState = _useState[0],\n        setGuestState = _useState[1];\n\n    return !guest ? __jsx(React.Fragment, null, __jsx(Lead, null), __jsx(Map, null), __jsx(QuadFeature, null)) : loading ? __jsx(React.Fragment, null, __jsx(Lead, null), __jsx(Map, null), __jsx(QuadFeature, null)) : __jsx(Mutation, {\n      mutation: CREATE_GUEST_MUTATION,\n      variables: {\n        id: id\n      },\n      refetchQueries: [{\n        query: CURRENT_USER_QUERY\n      }]\n    }, function (createGuest, _ref3) {\n      var loading = _ref3.loading,\n          error = _ref3.error;\n      useEffect(function () {\n        function fetchData() {\n          return _regeneratorRuntime.async(function fetchData$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _context.next = 2;\n                  return _regeneratorRuntime.awrap(createGuest());\n\n                case 2:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          });\n        }\n\n        !loading && guest && fetchData();\n      }, []);\n      setGuestState(false);\n      return __jsx(React.Fragment, null, __jsx(React.Fragment, null, __jsx(Lead, null), __jsx(Map, null), __jsx(QuadFeature, null)));\n    });\n  });\n};\n\nexport default Hero;","map":null,"metadata":{},"sourceType":"module"}