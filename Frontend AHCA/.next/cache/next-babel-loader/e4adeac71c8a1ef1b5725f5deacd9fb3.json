{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _parseFloat from \"@babel/runtime-corejs2/core-js/parse-float\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Users\\\\Wade\\\\Documents\\\\AHCA Web\\\\Frontend AHCA\\\\components\\\\UpdatePhoneAddress.js\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation UPDATE_PHONE_ADDRESS(\\n    $name: String\\n    $address: String\\n    $postal: String\\n    $phone: String\\n    $email: String\\n  ) {\\n    updatePhoneAddress(\\n      name: $name\\n      address: $address\\n      postal: $postal\\n      phone: $phone\\n      email: $email\\n    ) {\\n      id\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from \"react\";\nimport { Query, Mutation } from \"react-apollo\";\nimport { CURRENT_USER_QUERY } from \"./User\";\nimport gql from \"graphql-tag\";\nimport { Label, Input, Select, Textarea, Radio, Checkbox } from \"@rebass/forms\";\nimport { Box, Flex, Button, Card, Image, Heading, Text } from \"rebass\";\nvar UPDATE_PHONE_ADDRESS = gql(_templateObject());\n\nvar updatePhoneAddress =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(updatePhoneAddress, _Component);\n\n  function updatePhoneAddress() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, updatePhoneAddress);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(updatePhoneAddress)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      name: \"\",\n      address: \"\",\n      postal: \"\",\n      email: \"\",\n      phone: \"\"\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (e) {\n      var _e$target = e.target,\n          name = _e$target.name,\n          type = _e$target.type,\n          value = _e$target.value;\n      var val = type === \"number\" ? _parseFloat(value) : value;\n\n      _this.setState(_defineProperty({}, name, val));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleUpdateLocation\", function () {\n      var event = new Event(\"input\", {\n        bubbles: true\n      });\n\n      _this.myinput.dispatchEvent(event);\n    });\n\n    return _this;\n  }\n\n  _createClass(updatePhoneAddress, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var maround = 0;\n      var pleft = 0;\n      var wconst = [1 / 4, 1];\n      var fconst = [1, 2]; // const hconst = [7, 2];\n      // const [county] = this.props;\n\n      return __jsx(React.Fragment, null, __jsx(Query, {\n        query: CURRENT_USER_QUERY,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, function (_ref) {\n        var data = _ref.data,\n            loading = _ref.loading;\n        return __jsx(Mutation, {\n          mutation: UPDATE_PHONE_ADDRESS,\n          variables: _this2.state,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, function (updatePhoneLocation, _ref2) {\n          var loading = _ref2.loading,\n              error = _ref2.error;\n          return __jsx(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 63\n            },\n            __self: this\n          }, __jsx(Flex, {\n            flexWrap: \"wrap\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 64\n            },\n            __self: this\n          }, __jsx(Box, {\n            as: \"form\",\n            onSubmit: function _callee(e) {\n              var res;\n              return _regeneratorRuntime.async(function _callee$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      e.preventDefault();\n                      _context.next = 3;\n                      return _regeneratorRuntime.awrap(updatePhoneLocation());\n\n                    case 3:\n                      res = _context.sent;\n\n                    case 4:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              });\n            },\n            pl: pleft,\n            py: 3,\n            width: 3 / 4,\n            fontSize: fconst,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 65\n            },\n            __self: this\n          }, __jsx(Flex, {\n            flexWrap: \"wrap\",\n            justifyContent: \"center\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 76\n            },\n            __self: this\n          }, __jsx(Box, {\n            width: wconst,\n            mx: maround,\n            pl: pleft,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 77\n            },\n            __self: this\n          }, __jsx(Input, {\n            required: true,\n            id: \"name\",\n            name: \"name\",\n            type: \"text\",\n            placeholder: \"Name\",\n            value: _this2.state.name,\n            onChange: function _callee2(e) {\n              return _regeneratorRuntime.async(function _callee2$(_context2) {\n                while (1) {\n                  switch (_context2.prev = _context2.next) {\n                    case 0:\n                      _this2.handleChange(e);\n\n                    case 1:\n                    case \"end\":\n                      return _context2.stop();\n                  }\n                }\n              });\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 78\n            },\n            __self: this\n          })), __jsx(Box, {\n            width: wconst,\n            mx: maround,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 90\n            },\n            __self: this\n          }, __jsx(Input, {\n            required: true,\n            id: \"phone\",\n            name: \"phone\",\n            type: \"text\",\n            placeholder: \"Phone\",\n            value: _this2.state.phone,\n            onChange: function _callee3(e) {\n              return _regeneratorRuntime.async(function _callee3$(_context3) {\n                while (1) {\n                  switch (_context3.prev = _context3.next) {\n                    case 0:\n                      _this2.handleChange(e);\n\n                    case 1:\n                    case \"end\":\n                      return _context3.stop();\n                  }\n                }\n              });\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 91\n            },\n            __self: this\n          })), __jsx(Box, {\n            width: wconst,\n            mx: maround,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 103\n            },\n            __self: this\n          }, __jsx(Input, {\n            required: true,\n            id: \"email\",\n            name: \"email\",\n            type: \"text\",\n            placeholder: \"Email\",\n            value: _this2.state.email,\n            onChange: function _callee4(e) {\n              return _regeneratorRuntime.async(function _callee4$(_context4) {\n                while (1) {\n                  switch (_context4.prev = _context4.next) {\n                    case 0:\n                      _this2.handleChange(e);\n\n                    case 1:\n                    case \"end\":\n                      return _context4.stop();\n                  }\n                }\n              });\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 104\n            },\n            __self: this\n          })), __jsx(Box, {\n            width: wconst,\n            mx: maround,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 116\n            },\n            __self: this\n          }, __jsx(Input, {\n            required: true,\n            id: \"address\",\n            name: \"address\",\n            type: \"text\",\n            placeholder: \"Address\",\n            value: _this2.state.address,\n            onChange: function _callee5(e) {\n              return _regeneratorRuntime.async(function _callee5$(_context5) {\n                while (1) {\n                  switch (_context5.prev = _context5.next) {\n                    case 0:\n                      _this2.handleChange(e);\n\n                    case 1:\n                    case \"end\":\n                      return _context5.stop();\n                  }\n                }\n              });\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 117\n            },\n            __self: this\n          })), __jsx(Box, {\n            width: wconst,\n            mx: maround,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 129\n            },\n            __self: this\n          }, __jsx(Input, {\n            required: true,\n            id: \"zip\",\n            name: \"zip\",\n            type: \"text\",\n            placeholder: \"Zip Code\",\n            value: _this2.state.postal,\n            onChange: function _callee6(e) {\n              return _regeneratorRuntime.async(function _callee6$(_context6) {\n                while (1) {\n                  switch (_context6.prev = _context6.next) {\n                    case 0:\n                      _this2.handleChange(e);\n\n                    case 1:\n                    case \"end\":\n                      return _context6.stop();\n                  }\n                }\n              });\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 130\n            },\n            __self: this\n          }))), __jsx(Flex, {\n            mx: -2,\n            flexWrap: \"wrap\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 143\n            },\n            __self: this\n          }, __jsx(Box, {\n            p: 2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 144\n            },\n            __self: this\n          }, __jsx(Button, {\n            type: \"submit\",\n            bg: \"dark-green\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 145\n            },\n            __self: this\n          }, \"Submit\"))))));\n        });\n      }));\n    }\n  }]);\n\n  return updatePhoneAddress;\n}(Component);\n\nexport default updatePhoneAddress;","map":{"version":3,"sources":["C:/Users/Wade/Documents/AHCA Web/Frontend AHCA/components/UpdatePhoneAddress.js"],"names":["React","Component","Query","Mutation","CURRENT_USER_QUERY","gql","Label","Input","Select","Textarea","Radio","Checkbox","Box","Flex","Button","Card","Image","Heading","Text","UPDATE_PHONE_ADDRESS","updatePhoneAddress","name","address","postal","email","phone","e","target","type","value","val","setState","event","Event","bubbles","myinput","dispatchEvent","maround","pleft","wconst","fconst","data","loading","state","updatePhoneLocation","error","preventDefault","res","handleChange"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Query, Mutation } from \"react-apollo\";\r\nimport { CURRENT_USER_QUERY } from \"./User\";\r\nimport gql from \"graphql-tag\";\r\nimport { Label, Input, Select, Textarea, Radio, Checkbox } from \"@rebass/forms\";\r\nimport { Box, Flex, Button, Card, Image, Heading, Text } from \"rebass\";\r\n\r\nconst UPDATE_PHONE_ADDRESS = gql`\r\n  mutation UPDATE_PHONE_ADDRESS(\r\n    $name: String\r\n    $address: String\r\n    $postal: String\r\n    $phone: String\r\n    $email: String\r\n  ) {\r\n    updatePhoneAddress(\r\n      name: $name\r\n      address: $address\r\n      postal: $postal\r\n      phone: $phone\r\n      email: $email\r\n    ) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nclass updatePhoneAddress extends Component {\r\n  state = {\r\n    name: \"\",\r\n    address: \"\",\r\n    postal: \"\",\r\n    email: \"\",\r\n    phone: \"\"\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name, type, value } = e.target;\r\n    const val = type === \"number\" ? parseFloat(value) : value;\r\n    this.setState({ [name]: val });\r\n  };\r\n\r\n  handleUpdateLocation = () => {\r\n    var event = new Event(\"input\", { bubbles: true });\r\n    this.myinput.dispatchEvent(event);\r\n  };\r\n  render() {\r\n    const maround = 0;\r\n    const pleft = 0;\r\n    const wconst = [1 / 4, 1];\r\n    const fconst = [1, 2];\r\n    // const hconst = [7, 2];\r\n\r\n    // const [county] = this.props;\r\n    return (\r\n      <>\r\n        <Query query={CURRENT_USER_QUERY}>\r\n          {({ data, loading }) => {\r\n            return (\r\n              <Mutation mutation={UPDATE_PHONE_ADDRESS} variables={this.state}>\r\n                {(updatePhoneLocation, { loading, error }) => {\r\n                  return (\r\n                    <div>\r\n                      <Flex flexWrap=\"wrap\">\r\n                        <Box\r\n                          as=\"form\"\r\n                          onSubmit={async e => {\r\n                            e.preventDefault();\r\n                            const res = await updatePhoneLocation();\r\n                          }}\r\n                          pl={pleft}\r\n                          py={3}\r\n                          width={3 / 4}\r\n                          fontSize={fconst}\r\n                        >\r\n                          <Flex flexWrap=\"wrap\" justifyContent=\"center\">\r\n                            <Box width={wconst} mx={maround} pl={pleft}>\r\n                              <Input\r\n                                required\r\n                                id=\"name\"\r\n                                name=\"name\"\r\n                                type=\"text\"\r\n                                placeholder=\"Name\"\r\n                                value={this.state.name}\r\n                                onChange={async e => {\r\n                                  this.handleChange(e);\r\n                                }}\r\n                              />\r\n                            </Box>\r\n                            <Box width={wconst} mx={maround}>\r\n                              <Input\r\n                                required\r\n                                id=\"phone\"\r\n                                name=\"phone\"\r\n                                type=\"text\"\r\n                                placeholder=\"Phone\"\r\n                                value={this.state.phone}\r\n                                onChange={async e => {\r\n                                  this.handleChange(e);\r\n                                }}\r\n                              />\r\n                            </Box>\r\n                            <Box width={wconst} mx={maround}>\r\n                              <Input\r\n                                required\r\n                                id=\"email\"\r\n                                name=\"email\"\r\n                                type=\"text\"\r\n                                placeholder=\"Email\"\r\n                                value={this.state.email}\r\n                                onChange={async e => {\r\n                                  this.handleChange(e);\r\n                                }}\r\n                              />\r\n                            </Box>\r\n                            <Box width={wconst} mx={maround}>\r\n                              <Input\r\n                                required\r\n                                id=\"address\"\r\n                                name=\"address\"\r\n                                type=\"text\"\r\n                                placeholder=\"Address\"\r\n                                value={this.state.address}\r\n                                onChange={async e => {\r\n                                  this.handleChange(e);\r\n                                }}\r\n                              />\r\n                            </Box>\r\n                            <Box width={wconst} mx={maround}>\r\n                              <Input\r\n                                required\r\n                                id=\"zip\"\r\n                                name=\"zip\"\r\n                                type=\"text\"\r\n                                placeholder=\"Zip Code\"\r\n                                value={this.state.postal}\r\n                                onChange={async e => {\r\n                                  this.handleChange(e);\r\n                                }}\r\n                              />\r\n                            </Box>\r\n                          </Flex>\r\n                          <Flex mx={-2} flexWrap=\"wrap\">\r\n                            <Box p={2}>\r\n                              <Button type=\"submit\" bg=\"dark-green\">\r\n                                Submit\r\n                              </Button>\r\n                            </Box>\r\n                          </Flex>\r\n                        </Box>\r\n                      </Flex>\r\n                    </div>\r\n                  );\r\n                }}\r\n              </Mutation>\r\n            );\r\n          }}\r\n        </Query>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default updatePhoneAddress;\r\n"]},"metadata":{},"sourceType":"module"}