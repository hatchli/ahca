{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Wade\\\\Documents\\\\AHCA Web\\\\Frontend AHCA\\\\components\\\\Order.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Query } from \"react-apollo\";\nimport { format } from \"date-fns\";\nimport Head from \"next/head\";\nimport gql from \"graphql-tag\";\nimport formatMoney from \"../lib/formatMoney\";\nimport Error from \"./ErrorMessage\";\nimport OrderStyles from \"./styles/OrderStyles\";\nconst SINGLE_ORDER_QUERY = gql`\n  query SINGLE_ORDER_QUERY($id: ID!) {\n    order(id: $id) {\n      id\n      charge\n      total\n      createdAt\n      user {\n        id\n      }\n      items {\n        id\n        title\n        description\n        price\n        promotionPrice\n        image\n        quantity\n      }\n    }\n  }\n`;\n\nclass Order extends React.Component {\n  render() {\n    return __jsx(Query, {\n      query: SINGLE_ORDER_QUERY,\n      variables: {\n        id: this.props.id\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, ({\n      data,\n      error,\n      loading\n    }) => {\n      if (error) return __jsx(Error, {\n        error: error,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      });\n      if (loading) return __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"Loading...\");\n      const order = data.order;\n      return __jsx(OrderStyles, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, __jsx(Head, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, __jsx(\"title\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"Sick Fits - Order \", order.id)), __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, __jsx(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"Order ID:\"), __jsx(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, this.props.id)), __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, __jsx(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"Charge\"), __jsx(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, order.charge)), __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, __jsx(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"Date\"), __jsx(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, format(new Date(order.createdAt), \"MMMM d, yyyy h:mm a\"))), __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, __jsx(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Order Total\"), __jsx(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, formatMoney(order.total))), __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, __jsx(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Item Count\"), __jsx(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, order.items.length)), __jsx(\"div\", {\n        className: \"items\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, order.items.map(item => __jsx(\"div\", {\n        className: \"order-item\",\n        key: item.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, __jsx(\"img\", {\n        src: item.image,\n        alt: item.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), __jsx(\"div\", {\n        className: \"item-details\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, __jsx(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, item.title), __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"Qty: \", item.quantity), __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Each: \", formatMoney((item === null || item === void 0 ? void 0 : item.promotionPrice) || item.price)), __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"SubTotal: \", formatMoney(item.price * item.quantity)), __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, item.description))))));\n    });\n  }\n\n}\n\n_defineProperty(Order, \"propTypes\", {\n  id: PropTypes.string.isRequired\n});\n\nexport default Order;","map":{"version":3,"sources":["C:/Users/Wade/Documents/AHCA Web/Frontend AHCA/components/Order.js"],"names":["React","PropTypes","Query","format","Head","gql","formatMoney","Error","OrderStyles","SINGLE_ORDER_QUERY","Order","Component","render","id","props","data","error","loading","order","charge","Date","createdAt","total","items","length","map","item","image","title","quantity","promotionPrice","price","description","string","isRequired"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Query } from \"react-apollo\";\r\nimport { format } from \"date-fns\";\r\nimport Head from \"next/head\";\r\nimport gql from \"graphql-tag\";\r\nimport formatMoney from \"../lib/formatMoney\";\r\nimport Error from \"./ErrorMessage\";\r\nimport OrderStyles from \"./styles/OrderStyles\";\r\n\r\nconst SINGLE_ORDER_QUERY = gql`\r\n  query SINGLE_ORDER_QUERY($id: ID!) {\r\n    order(id: $id) {\r\n      id\r\n      charge\r\n      total\r\n      createdAt\r\n      user {\r\n        id\r\n      }\r\n      items {\r\n        id\r\n        title\r\n        description\r\n        price\r\n        promotionPrice\r\n        image\r\n        quantity\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nclass Order extends React.Component {\r\n  static propTypes = {\r\n    id: PropTypes.string.isRequired\r\n  };\r\n  render() {\r\n    return (\r\n      <Query query={SINGLE_ORDER_QUERY} variables={{ id: this.props.id }}>\r\n        {({ data, error, loading }) => {\r\n          if (error) return <Error error={error} />;\r\n          if (loading) return <p>Loading...</p>;\r\n          const order = data.order;\r\n          return (\r\n            <OrderStyles>\r\n              <Head>\r\n                <title>Sick Fits - Order {order.id}</title>\r\n              </Head>\r\n              <p>\r\n                <span>Order ID:</span>\r\n                <span>{this.props.id}</span>\r\n              </p>\r\n              <p>\r\n                <span>Charge</span>\r\n                <span>{order.charge}</span>\r\n              </p>\r\n              <p>\r\n                <span>Date</span>\r\n                <span>\r\n                  {format(new Date(order.createdAt), \"MMMM d, yyyy h:mm a\")}\r\n                </span>\r\n              </p>\r\n              <p>\r\n                <span>Order Total</span>\r\n                <span>{formatMoney(order.total)}</span>\r\n              </p>\r\n              <p>\r\n                <span>Item Count</span>\r\n                <span>{order.items.length}</span>\r\n              </p>\r\n              <div className=\"items\">\r\n                {order.items.map(item => (\r\n                  <div className=\"order-item\" key={item.id}>\r\n                    <img src={item.image} alt={item.title} />\r\n                    <div className=\"item-details\">\r\n                      <h2>{item.title}</h2>\r\n                      <p>Qty: {item.quantity}</p>\r\n                      <p>\r\n                        Each: {formatMoney(item?.promotionPrice || item.price)}\r\n                      </p>\r\n                      <p>SubTotal: {formatMoney(item.price * item.quantity)}</p>\r\n                      <p>{item.description}</p>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </OrderStyles>\r\n          );\r\n        }}\r\n      </Query>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Order;\r\n"]},"metadata":{},"sourceType":"module"}