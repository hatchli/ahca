{"ast":null,"code":"import _parseFloat from \"@babel/runtime-corejs2/core-js/parse-float\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Wade\\\\Documents\\\\AHCA Web\\\\Frontend AHCA\\\\components\\\\LocationCard.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport { Mutation } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport { Label, Input, Select, Textarea, Radio, Checkbox } from \"@rebass/forms\";\nimport { Box, Flex, Button, Card, Image, Heading, Text } from \"rebass\";\nconst UPDATE_PHONE_LOCATION = gql`\n  mutation UPDATE_PHONE_LOCATION(\n    $name: String\n    $location: String\n    $phone: String\n    $email: String\n  ) {\n    updatePhoneLocation(\n      name: $name\n      location: $location\n      phone: $phone\n      email: $email\n    ) {\n      id\n    }\n  }\n`;\nexport default class LocationCard extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      name: \"\",\n      location: \"\",\n      phone: \"\",\n      email: \"\"\n    });\n\n    _defineProperty(this, \"handleChange\", e => {\n      const {\n        name,\n        type,\n        value\n      } = e.target;\n      const val = type === \"number\" ? _parseFloat(value) : value;\n      this.setState({\n        [name]: val\n      });\n    });\n  }\n\n  render() {\n    const maround = [1, 3];\n    const pleft = [0, 1, 2, 3];\n    const wconst = [1, 1 / 4];\n    return __jsx(Mutation, {\n      mutation: UPDATE_PHONE_LOCATION,\n      variables: this.state,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, (updatePhoneLocation, {\n      loading,\n      error\n    }) => __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, __jsx(Box, {\n      as: \"form\",\n      onSubmit: e => e.preventDefault(),\n      pl: pleft,\n      py: 3,\n      width: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, __jsx(Heading, {\n      pcolor: \"near-black\",\n      fontSize: [4, 5, 6],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Are we in your neighboorhood?\"), __jsx(Flex, {\n      flexWrap: \"wrap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, __jsx(Box, {\n      width: wconst,\n      mx: maround,\n      pl: pleft,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, __jsx(Label, {\n      htmlFor: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Name\"), __jsx(Input, {\n      id: \"name\",\n      name: \"name\",\n      type: \"text\",\n      placeholder: \"Name\",\n      value: this.state.name,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    })), __jsx(Box, {\n      width: wconst,\n      mx: maround,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, __jsx(Label, {\n      htmlFor: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Phone\"), __jsx(Input, {\n      id: \"phone\",\n      name: \"phone\",\n      defaultValue: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    })), __jsx(Box, {\n      width: wconst,\n      mx: maround,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, __jsx(Label, {\n      htmlFor: \"location\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Location\"), __jsx(Heading, {\n      fontSize: [3, 4, 5],\n      color: \"near-black\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, this.props.county))), __jsx(Flex, {\n      mx: -2,\n      flexWrap: \"wrap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, __jsx(Box, {\n      p: 2,\n      ml: \"[3, 4, 5, 6]\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, __jsx(Button, {\n      type: \"submit\",\n      bg: \"dark-green\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Submit\"))))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Wade/Documents/AHCA Web/Frontend AHCA/components/LocationCard.js"],"names":["React","Component","Mutation","gql","Label","Input","Select","Textarea","Radio","Checkbox","Box","Flex","Button","Card","Image","Heading","Text","UPDATE_PHONE_LOCATION","LocationCard","name","location","phone","email","e","type","value","target","val","setState","render","maround","pleft","wconst","state","updatePhoneLocation","loading","error","preventDefault","handleChange","props","county"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Mutation } from \"react-apollo\";\r\nimport gql from \"graphql-tag\";\r\nimport { Label, Input, Select, Textarea, Radio, Checkbox } from \"@rebass/forms\";\r\nimport { Box, Flex, Button, Card, Image, Heading, Text } from \"rebass\";\r\n\r\nconst UPDATE_PHONE_LOCATION = gql`\r\n  mutation UPDATE_PHONE_LOCATION(\r\n    $name: String\r\n    $location: String\r\n    $phone: String\r\n    $email: String\r\n  ) {\r\n    updatePhoneLocation(\r\n      name: $name\r\n      location: $location\r\n      phone: $phone\r\n      email: $email\r\n    ) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nexport default class LocationCard extends Component {\r\n  state = {\r\n    name: \"\",\r\n    location: \"\",\r\n    phone: \"\",\r\n    email: \"\"\r\n  };\r\n\r\n  // componentDidUpdate(prevProps, prevState) {\r\n  //   console.log(\"prevState\", prevState);\r\n  //   console.log(\"state\", this.state);\r\n  //   console.log(\"states match?\", prevState === this.state ? \"true\" : \"false\");\r\n  //   if (this.state !== prevState) {\r\n  //     this.setState(prevState => ({\r\n  //       ...prevState,\r\n  //       name: this.state.name,\r\n  //       location: this.state.location,\r\n  //       phone: this.state.phone,\r\n  //       email: this.state.email\r\n  //     }));\r\n  //   }\r\n  // }\r\n\r\n  handleChange = e => {\r\n    const { name, type, value } = e.target;\r\n    const val = type === \"number\" ? parseFloat(value) : value;\r\n    this.setState({ [name]: val });\r\n  };\r\n\r\n  render() {\r\n    const maround = [1, 3];\r\n    const pleft = [0, 1, 2, 3];\r\n    const wconst = [1, 1 / 4];\r\n    return (\r\n      <Mutation mutation={UPDATE_PHONE_LOCATION} variables={this.state}>\r\n        {(updatePhoneLocation, { loading, error }) => (\r\n          <div>\r\n            <Box\r\n              as=\"form\"\r\n              onSubmit={e => e.preventDefault()}\r\n              pl={pleft}\r\n              py={3}\r\n              width={1}\r\n            >\r\n              <Heading pcolor=\"near-black\" fontSize={[4, 5, 6]}>\r\n                Are we in your neighboorhood?\r\n              </Heading>\r\n              <Flex flexWrap=\"wrap\">\r\n                <Box width={wconst} mx={maround} pl={pleft}>\r\n                  <Label htmlFor=\"name\">Name</Label>\r\n                  <Input\r\n                    id=\"name\"\r\n                    name=\"name\"\r\n                    type=\"text\"\r\n                    placeholder=\"Name\"\r\n                    value={this.state.name}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </Box>\r\n                <Box width={wconst} mx={maround}>\r\n                  <Label htmlFor=\"name\">Phone</Label>\r\n                  <Input id=\"phone\" name=\"phone\" defaultValue=\"\" />\r\n                </Box>\r\n                <Box width={wconst} mx={maround}>\r\n                  <Label htmlFor=\"location\">Location</Label>\r\n                  <Heading fontSize={[3, 4, 5]} color=\"near-black\">\r\n                    {this.props.county}\r\n                  </Heading>\r\n                </Box>\r\n              </Flex>\r\n              <Flex mx={-2} flexWrap=\"wrap\">\r\n                <Box p={2} ml=\"[3, 4, 5, 6]\">\r\n                  <Button type=\"submit\" bg=\"dark-green\">\r\n                    Submit\r\n                  </Button>\r\n                </Box>\r\n              </Flex>\r\n            </Box>\r\n          </div>\r\n        )}\r\n      </Mutation>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}