{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Wade\\\\Documents\\\\AHCA Web\\\\Frontend AHCA\\\\components\\\\GuestRegister.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { CURRENT_USER_QUERY } from \"./User\";\nimport { Mutation } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport User from \"./User\";\nconst CREATE_GUEST_MUTATION = gql`\n  mutation CREATE_GUEST_MUTATION(\n    $email: String\n    $name: String\n    $password: String\n  ) {\n    createGuest(email: $email, name: $name, password: $password) {\n      id\n      email\n      name\n    }\n  }\n`;\n\nconst GuestRegister = (props, {\n  id\n}) => {\n  __jsx(User, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, ({\n    data\n  }) => {\n    let me = data ? data.me : null;\n    let guest = me === null ? true : false;\n    return !guest ? props.children : __jsx(Mutation, {\n      mutation: CREATE_GUEST_MUTATION,\n      variables: {\n        id\n      },\n      refetchQueries: [{\n        query: CURRENT_USER_QUERY\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, (createGuest, {\n      loading,\n      error\n    }) => {\n      useEffect(createGuest);\n      return props.children;\n    });\n  });\n};\n\nexport default GuestRegister;","map":{"version":3,"sources":["C:/Users/Wade/Documents/AHCA Web/Frontend AHCA/components/GuestRegister.js"],"names":["React","CURRENT_USER_QUERY","Mutation","gql","User","CREATE_GUEST_MUTATION","GuestRegister","props","id","data","me","guest","children","query","createGuest","loading","error","useEffect"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,kBAAT,QAAmC,QAAnC;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,MAAMC,qBAAqB,GAAGF,GAAI;;;;;;;;;;;;CAAlC;;AAcA,MAAMG,aAAa,GAAG,CAACC,KAAD,EAAQ;AAAEC,EAAAA;AAAF,CAAR,KAAmB;AACvC,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAc;AACb,QAAIC,EAAE,GAAGD,IAAI,GAAGA,IAAI,CAACC,EAAR,GAAa,IAA1B;AACA,QAAIC,KAAK,GAAGD,EAAE,KAAK,IAAP,GAAc,IAAd,GAAqB,KAAjC;AACA,WAAO,CAACC,KAAD,GACLJ,KAAK,CAACK,QADD,GAGL,MAAC,QAAD;AACE,MAAA,QAAQ,EAAEP,qBADZ;AAEE,MAAA,SAAS,EAAE;AAAEG,QAAAA;AAAF,OAFb;AAGE,MAAA,cAAc,EAAE,CAAC;AAAEK,QAAAA,KAAK,EAAEZ;AAAT,OAAD,CAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKG,CAACa,WAAD,EAAc;AAAEC,MAAAA,OAAF;AAAWC,MAAAA;AAAX,KAAd,KAAqC;AACpCC,MAAAA,SAAS,CAACH,WAAD,CAAT;AACA,aAAOP,KAAK,CAACK,QAAb;AACD,KARH,CAHF;AAcD,GAlBH;AAoBD,CArBD;;AAuBA,eAAeN,aAAf","sourcesContent":["import React from \"react\";\r\nimport { CURRENT_USER_QUERY } from \"./User\";\r\nimport { Mutation } from \"react-apollo\";\r\nimport gql from \"graphql-tag\";\r\nimport User from \"./User\";\r\n\r\nconst CREATE_GUEST_MUTATION = gql`\r\n  mutation CREATE_GUEST_MUTATION(\r\n    $email: String\r\n    $name: String\r\n    $password: String\r\n  ) {\r\n    createGuest(email: $email, name: $name, password: $password) {\r\n      id\r\n      email\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\nconst GuestRegister = (props, { id }) => {\r\n  <User>\r\n    {({ data }) => {\r\n      let me = data ? data.me : null;\r\n      let guest = me === null ? true : false;\r\n      return !guest ? (\r\n        props.children\r\n      ) : (\r\n        <Mutation\r\n          mutation={CREATE_GUEST_MUTATION}\r\n          variables={{ id }}\r\n          refetchQueries={[{ query: CURRENT_USER_QUERY }]}\r\n        >\r\n          {(createGuest, { loading, error }) => {\r\n            useEffect(createGuest);\r\n            return props.children;\r\n          }}\r\n        </Mutation>\r\n      );\r\n    }}\r\n  </User>;\r\n};\r\n\r\nexport default GuestRegister;\r\n"]},"metadata":{},"sourceType":"module"}