{"version":3,"file":"static/webpack/static\\development\\pages\\_app.js.357447af23a4438b74b5.hot-update.js","sources":["webpack:///./components/UpdatePhoneAddress.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport { Query, Mutation } from \"react-apollo\";\r\nimport { CURRENT_USER_QUERY } from \"./User\";\r\nimport gql from \"graphql-tag\";\r\nimport { Label, Input, Select, Textarea, Radio, Checkbox } from \"@rebass/forms\";\r\nimport { Box, Flex, Button, Card, Image, Heading, Text } from \"rebass\";\r\nimport Head from \"next/head\";\r\nimport TakeMyMoney from \"./TakeMyMoney\";\r\n\r\nconst UPDATE_PHONE_ADDRESS = gql`\r\n  mutation UPDATE_PHONE_ADDRESS(\r\n    $name: String\r\n    $address: String\r\n    $postal: String\r\n    $phone: String\r\n    $email: String\r\n  ) {\r\n    updatePhoneAddress(\r\n      name: $name\r\n      address: $address\r\n      postal: $postal\r\n      phone: $phone\r\n      email: $email\r\n    ) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nclass updatePhoneAddress extends Component {\r\n  state = {\r\n    name: \"\",\r\n    address: \"\",\r\n    postal: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    checkout: false\r\n  };\r\n\r\n  handleChange = e => {\r\n    if (\r\n      this.state.name == \"\" ||\r\n      this.state.address == \"\" ||\r\n      this.state.postal == \"\" ||\r\n      this.state.email == \"\" ||\r\n      this.state.phone == \"\"\r\n    ) {\r\n      this.setState({ checkout: false });\r\n    }\r\n    if (\r\n      this.state.name !== \"\" &&\r\n      this.state.address !== \"\" &&\r\n      this.state.postal !== \"\" &&\r\n      this.state.email !== \"\" &&\r\n      this.state.phone !== \"\"\r\n    ) {\r\n      this.setState({ checkout: true });\r\n    }\r\n    const { name, type, value } = e.target;\r\n    const val = type === \"number\" ? parseFloat(value) : value;\r\n    this.setState({ [name]: val });\r\n    if (\r\n      this.state.name !== \"\" &&\r\n      this.state.address !== \"\" &&\r\n      this.state.postal !== \"\" &&\r\n      this.state.email !== \"\" &&\r\n      this.state.phone !== \"\"\r\n    ) {\r\n      this.setState({ checkout: true });\r\n    }\r\n    if (\r\n      this.state.name == \"\" ||\r\n      this.state.address == \"\" ||\r\n      this.state.postal == \"\" ||\r\n      this.state.email == \"\" ||\r\n      this.state.phone == \"\"\r\n    ) {\r\n      this.setState({ checkout: false });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const maround = 0;\r\n    const pleft = 0;\r\n    const wconst = [1, 3 / 4];\r\n    const fconst = [1, 2];\r\n    const myconst = [2];\r\n    // const hconst = [7, 2];\r\n\r\n    // const [county] = this.props;\r\n    return (\r\n      <>\r\n        <Query query={CURRENT_USER_QUERY}>\r\n          {({ data, loading }) => {\r\n            return (\r\n              <Mutation mutation={UPDATE_PHONE_ADDRESS} variables={this.state}>\r\n                {(updatePhoneLocation, { loading, error }) => {\r\n                  return (\r\n                    <Box\r\n                      as=\"form\"\r\n                      onSubmit={async e => {\r\n                        e.preventDefault();\r\n                        const res = await updatePhoneLocation();\r\n                      }}\r\n                      pl={pleft}\r\n                      py={3}\r\n                      fontSize={fconst}\r\n                    >\r\n                      <Flex alignItems=\"center\" justifyContent=\"center\">\r\n                        <Box\r\n                          alignItems=\"center\"\r\n                          display=\"flex\"\r\n                          flexDirection=\"column\"\r\n                          width=\"100%\"\r\n                        >\r\n                          <Heading fontSize={[3, 5]}></Heading>\r\n                          <Box\r\n                            width={wconst}\r\n                            mx={maround}\r\n                            pl={pleft}\r\n                            my={myconst}\r\n                          >\r\n                            <Input\r\n                              required\r\n                              id=\"name\"\r\n                              name=\"name\"\r\n                              type=\"text\"\r\n                              placeholder=\"Name\"\r\n                              value={this.state.name}\r\n                              onChange={async e => {\r\n                                this.handleChange(e);\r\n                              }}\r\n                            />\r\n                          </Box>\r\n                          <Box width={wconst} mx={maround} my={myconst}>\r\n                            <Input\r\n                              required\r\n                              id=\"phone\"\r\n                              name=\"phone\"\r\n                              type=\"text\"\r\n                              placeholder=\"Phone\"\r\n                              value={this.state.phone}\r\n                              onChange={async e => {\r\n                                this.handleChange(e);\r\n                              }}\r\n                            />\r\n                          </Box>\r\n                          <Box width={wconst} mx={maround} my={myconst}>\r\n                            <Input\r\n                              required\r\n                              id=\"email\"\r\n                              name=\"email\"\r\n                              type=\"text\"\r\n                              placeholder=\"Email\"\r\n                              value={this.state.email}\r\n                              onChange={async e => {\r\n                                this.handleChange(e);\r\n                              }}\r\n                            />\r\n                          </Box>\r\n                          <Box width={wconst} mx={maround} my={myconst}>\r\n                            <Input\r\n                              required\r\n                              id=\"address\"\r\n                              name=\"address\"\r\n                              type=\"text\"\r\n                              placeholder=\"Address\"\r\n                              value={this.state.address}\r\n                              onChange={async e => {\r\n                                this.handleChange(e);\r\n                              }}\r\n                            />\r\n                          </Box>\r\n                          <Box width={wconst} mx={maround} my={myconst}>\r\n                            <Input\r\n                              required\r\n                              id=\"postal\"\r\n                              name=\"postal\"\r\n                              type=\"text\"\r\n                              placeholder=\"Zip Code\"\r\n                              value={this.state.postal}\r\n                              onChange={async e => {\r\n                                this.handleChange(e);\r\n                              }}\r\n                            />\r\n                          </Box>\r\n                          {this.state.checkout ? (\r\n                            <Button\r\n                              type=\"submit\"\r\n                              bg=\"dark-green\"\r\n                              width={wconst}\r\n                              mx={maround}\r\n                              my={myconst}\r\n                            >\r\n                              <TakeMyMoney>Proceed to Checkout</TakeMyMoney>\r\n                            </Button>\r\n                          ) : (\r\n                            <Button\r\n                              disabled\r\n                              type=\"submit\"\r\n                              bg=\"dark-gray\"\r\n                              width={wconst}\r\n                              mx={maround}\r\n                              my={myconst}\r\n                            >\r\n                              Proceed to Checkout\r\n                            </Button>\r\n                          )}\r\n                        </Box>\r\n                      </Flex>\r\n                    </Box>\r\n                  );\r\n                }}\r\n              </Mutation>\r\n            );\r\n          }}\r\n        </Query>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default updatePhoneAddress;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAmBA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AAQA;AACA;AAOA;AAAA;AAAA;AACA;AACA;AAAA;AAOA;AAAA;AAAA;AACA;AACA;AAnBA;AAAA;AAAA;AAAA;AAocA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAeA;AAGA;AAIA;;;;AA9LA;AACA;AAgMA;;;;A","sourceRoot":""}