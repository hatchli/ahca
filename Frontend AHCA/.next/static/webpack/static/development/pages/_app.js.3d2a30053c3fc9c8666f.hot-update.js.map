{"version":3,"file":"static/webpack/static\\development\\pages\\_app.js.3d2a30053c3fc9c8666f.hot-update.js","sources":["webpack:///./components/SignUpButton.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Popup from \"reactjs-popup\";\r\nimport CloseButton from \"./styles/CloseButton\";\r\nimport SignUp from \"./SignUp\";\r\nimport SignIn from \"./SignIn\";\r\nimport { Label, Input, Select, Textarea, Radio, Checkbox } from \"@rebass/forms\";\r\nimport { Box, Flex, Button, Card, Image, Heading, Text } from \"rebass\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledPopup = styled(({ className, ...props }) => (\r\n  <Popup contentStyle={className} {...props} />\r\n))`\r\n  left: 0;\r\n`;\r\n\r\nconst PopUpStyle = styled.div`\r\n  .popup-content {\r\n    position: \"center center\";\r\n    background: rgb(255, 255, 255);\r\n    width: 100%;\r\n    @media (max-width: 1000px) {\r\n      width: 80%;\r\n    }\r\n    @media (min-width: 1000px) {\r\n      width: 50%;\r\n    }\r\n    margin: auto;\r\n    border: 1px solid rgb(187, 187, 187);\r\n    padding: 5px;\r\n  }\r\n  .modal {\r\n    width: 100%;\r\n  }\r\n\r\n  .close {\r\n    cursor: pointer;\r\n    position: absolute;\r\n    display: block;\r\n    padding: 5px;\r\n    line-height: 20px;\r\n    text-align: center;\r\n    right: -5px;\r\n    top: -10px;\r\n    background: black;\r\n    color: white;\r\n    font-size: 3rem;\r\n    border: 0;\r\n    padding: 5px;\r\n    z-index: 2;\r\n    width: 20px;\r\n    &:before {\r\n      content: \"\";\r\n      width: 0px;\r\n    }\r\n    &:after {\r\n      content: \"\";\r\n      width: 0px;\r\n    }\r\n    &:hover,\r\n    &:focus {\r\n      outline: none;\r\n      &:after {\r\n        width: auto;\r\n      }\r\n      @media (max-width: 700px) {\r\n        width: auto;\r\n      }\r\n    }\r\n  }\r\n  .button a {\r\n    &:before {\r\n      content: \"\";\r\n      width: 0px;\r\n    }\r\n    &:after {\r\n      content: \"\";\r\n      width: 0px;\r\n    }\r\n  }\r\n  a {\r\n    &:before {\r\n      content: \"\";\r\n      width: 0px;\r\n    }\r\n    &:after {\r\n      content: \"\";\r\n      width: 0px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst SignUpButton = (props, state) => {\r\n  const [isToggled, setToggled] = useState(false);\r\n  return (\r\n    <Popup\r\n      repositionOnResize={true}\r\n      contentStyle={{ width: \"auto\", position: \"center center\" }}\r\n      trigger={<button> {props.children} </button>}\r\n      modal\r\n    >\r\n      {close => (\r\n        <PopUpStyle>\r\n          <div className=\"modal\">\r\n            <button className=\"close\" onClick={close}>\r\n              &times;\r\n            </button>\r\n\r\n            <div className=\"content\">\r\n              {!isToggled && <SignUp />}\r\n              {isToggled && <SignIn />}\r\n              {!isToggled && (\r\n                <h4>\r\n                  <a onClick={() => setToggled(!isToggled)}>\r\n                    Already have an account?\r\n                  </a>\r\n                </h4>\r\n              )}\r\n              {isToggled && (\r\n                <h4>\r\n                  <a onClick={() => setToggled(!isToggled)}>\r\n                    Signup for an account?\r\n                  </a>\r\n                </h4>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </PopUpStyle>\r\n      )}\r\n    </Popup>\r\n  );\r\n};\r\n\r\nexport default SignUpButton;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AACA;AA2EA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAnBA;AA8BA;AACA;AACA;;;;A","sourceRoot":""}