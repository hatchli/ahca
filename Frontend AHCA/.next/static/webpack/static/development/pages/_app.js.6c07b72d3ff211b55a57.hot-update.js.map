{"version":3,"file":"static/webpack/static\\development\\pages\\_app.js.6c07b72d3ff211b55a57.hot-update.js","sources":["webpack:///./components/Cart.js","webpack:///./components/UpdatePhoneAddress.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport wait from \"waait\";\r\nimport { Query, Mutation } from \"react-apollo\";\r\nimport User from \"./User\";\r\nimport gql from \"graphql-tag\";\r\nimport CartStyles from \"./styles/CartStyles\";\r\nimport Supreme from \"./styles/Supreme\";\r\nimport CloseButton from \"./styles/CloseButton\";\r\nimport SickButton from \"./styles/SickButton\";\r\nimport CartItem from \"./CartItem\";\r\nimport calcTotalPrice from \"../lib/calcTotalPrice\";\r\nimport formatMoney from \"../lib/formatMoney\";\r\nimport { adopt } from \"react-adopt\";\r\nimport TakeMyMoney from \"./TakeMyMoney\";\r\nimport UpdatePhoneAddress from \"./UpdatePhoneAddress\";\r\n\r\nconst LOCAL_STATE_QUERY = gql`\r\n  query {\r\n    cartOpen @client\r\n  }\r\n`;\r\n\r\nconst TOGGLE_CART_MUTATION = gql`\r\n  mutation {\r\n    toggleCart @client\r\n  }\r\n`;\r\n\r\nconst Composed = adopt({\r\n  user: ({ render }) => <User>{render}</User>,\r\n  // cartItem: ({ render }) => <CartItem>{render}</CartItem>,\r\n  toggleCart: ({ render }) => (\r\n    <Mutation mutation={TOGGLE_CART_MUTATION}>{render}</Mutation>\r\n  ),\r\n  localState: ({ render }) => <Query query={LOCAL_STATE_QUERY}>{render}</Query>\r\n});\r\n\r\nconst Cart = (props, { item }) => {\r\n  const [nameState, setNameState] = useState(\"\");\r\n  const [addressState, setAddressState] = useState(\"\");\r\n  const [postalState, setPostalState] = useState(\"\");\r\n  const [phoneState, setPhoneState] = useState(\"\");\r\n  const [emailState, setEmailState] = useState(\"\");\r\n  return (\r\n    <Composed>\r\n      {({ user, toggleCart, localState }) => {\r\n        console.log(\"user.data\", user.data);\r\n        const me = user.data ? user.data.me : null;\r\n        if (!me) return null;\r\n        setNameState(me?.name);\r\n        setAddressState(me?.address);\r\n        setPostalState(me?.postal);\r\n        setPhoneState(me?.phone);\r\n        setEmailState(me?.email);\r\n        return (\r\n          <CartStyles open={localState.data.cartOpen}>\r\n            <header>\r\n              <CloseButton onClick={toggleCart} title=\"close\">\r\n                &times;\r\n              </CloseButton>\r\n              {me.permissions.includes(\"GUEST\") ? (\r\n                <Supreme>Guest Cart</Supreme>\r\n              ) : (\r\n                <Supreme>{me.name}'s Cart</Supreme>\r\n              )}\r\n              <p>\r\n                You have {me.cart.length} item\r\n                {me.cart.length === 1 ? \"\" : \"s\"} in your cart\r\n              </p>\r\n            </header>\r\n            <ul>\r\n              {me.cart.map(cartItem => (\r\n                <>\r\n                  <CartItem key={cartItem.id} cartItem={cartItem} />\r\n                </>\r\n              ))}\r\n            </ul>\r\n            <footer>\r\n              <p>{formatMoney(calcTotalPrice(me.cart))}</p>\r\n\r\n              {me.cart.length ? (\r\n                <TakeMyMoney>\r\n                  <SickButton disabled={false}>Checkout</SickButton>\r\n                </TakeMyMoney>\r\n              ) : me.permissions.includes(\"GUEST\") ? (\r\n                <UpdatePhoneAddress />\r\n              ) : (\r\n                <TakeMyMoney>\r\n                  <SickButton disabled={true}>Checkout</SickButton>\r\n                </TakeMyMoney>\r\n              )}\r\n            </footer>\r\n          </CartStyles>\r\n        );\r\n      }}\r\n    </Composed>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\nexport { LOCAL_STATE_QUERY, TOGGLE_CART_MUTATION };\r\n","import React, { Component } from \"react\";\r\nimport { Query, Mutation } from \"react-apollo\";\r\nimport { CURRENT_USER_QUERY } from \"./User\";\r\nimport gql from \"graphql-tag\";\r\nimport { Label, Input, Select, Textarea, Radio, Checkbox } from \"@rebass/forms\";\r\nimport { Box, Flex, Button, Card, Image, Heading, Text } from \"rebass\";\r\n\r\nconst UPDATE_PHONE_ADDRESS = gql`\r\n  mutation UPDATE_PHONE_ADDRESS(\r\n    $name: String\r\n    $address: String\r\n    $postal: String\r\n    $phone: String\r\n    $email: String\r\n  ) {\r\n    updatePhoneAddress(\r\n      name: $name\r\n      address: $address\r\n      postal: $postal\r\n      phone: $phone\r\n      email: $email\r\n    ) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nclass updatePhoneAddress extends Component {\r\n  state = {\r\n    name: \"\",\r\n    address: \"\",\r\n    postal: \"\",\r\n    email: \"\",\r\n    phone: \"\"\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name, type, value } = e.target;\r\n    const val = type === \"number\" ? parseFloat(value) : value;\r\n    this.setState({ [name]: val });\r\n  };\r\n\r\n  handleUpdateLocation = () => {\r\n    var event = new Event(\"input\", { bubbles: true });\r\n    this.myinput.dispatchEvent(event);\r\n  };\r\n  render() {\r\n    const maround = [1, 3];\r\n    const pleft = [0, 1, 2, 3];\r\n    const wconst = [1, 1 / 4];\r\n\r\n    // const [county] = this.props;\r\n    return (\r\n      <>\r\n        <Query query={CURRENT_USER_QUERY}>\r\n          {({ data, loading }) => {\r\n            return (\r\n              <Mutation mutation={UPDATE_PHONE_ADDRESS} variables={this.state}>\r\n                {(updatePhoneLocation, { loading, error }) => {\r\n                  return (\r\n                    <div>\r\n                      <Box\r\n                        as=\"form\"\r\n                        onSubmit={async e => {\r\n                          e.preventDefault();\r\n                          const res = await updatePhoneLocation();\r\n                        }}\r\n                        pl={pleft}\r\n                        py={3}\r\n                        width={1}\r\n                      >\r\n                        <Flex flexWrap=\"wrap\">\r\n                          <Box width={wconst} mx={maround} pl={pleft}>\r\n                            <Label htmlFor=\"name\">Name</Label>\r\n                            <Input\r\n                              required\r\n                              id=\"name\"\r\n                              name=\"name\"\r\n                              type=\"text\"\r\n                              placeholder=\"Name\"\r\n                              value={this.state.name}\r\n                              onChange={async e => {\r\n                                this.handleChange(e);\r\n                              }}\r\n                            />\r\n                          </Box>\r\n                          <Box width={wconst} mx={maround}>\r\n                            <Label htmlFor=\"name\">Phone</Label>\r\n                            <Input\r\n                              required\r\n                              id=\"phone\"\r\n                              name=\"phone\"\r\n                              type=\"text\"\r\n                              placeholder=\"Phone\"\r\n                              value={this.state.phone}\r\n                              onChange={async e => {\r\n                                this.handleChange(e);\r\n                              }}\r\n                            />\r\n                          </Box>\r\n                          <Box width={wconst} mx={maround}>\r\n                            <Label htmlFor=\"name\">Email</Label>\r\n                            <Input\r\n                              required\r\n                              id=\"email\"\r\n                              name=\"email\"\r\n                              type=\"text\"\r\n                              placeholder=\"Email\"\r\n                              value={this.state.email}\r\n                              onChange={async e => {\r\n                                this.handleChange(e);\r\n                              }}\r\n                            />\r\n                          </Box>\r\n                          <Box width={wconst} mx={maround}>\r\n                            <Label htmlFor=\"name\">Address</Label>\r\n                            <Input\r\n                              required\r\n                              id=\"address\"\r\n                              name=\"address\"\r\n                              type=\"text\"\r\n                              placeholder=\"Address\"\r\n                              value={this.state.address}\r\n                              onChange={async e => {\r\n                                this.handleChange(e);\r\n                              }}\r\n                            />\r\n                          </Box>\r\n                          <Box width={wconst} mx={maround}>\r\n                            <Label htmlFor=\"name\">Zip Code</Label>\r\n                            <Input\r\n                              required\r\n                              id=\"zip\"\r\n                              name=\"zip\"\r\n                              type=\"text\"\r\n                              placeholder=\"Zip Code\"\r\n                              value={this.state.postal}\r\n                              onChange={async e => {\r\n                                this.handleChange(e);\r\n                              }}\r\n                            />\r\n                          </Box>\r\n                        </Flex>\r\n                        <Flex mx={-2} flexWrap=\"wrap\">\r\n                          <Box p={2} ml=\"[3, 4, 5, 6]\">\r\n                            <Button type=\"submit\" bg=\"dark-green\">\r\n                              Submit\r\n                            </Button>\r\n                          </Box>\r\n                        </Flex>\r\n                      </Box>\r\n                    </div>\r\n                  );\r\n                }}\r\n              </Mutation>\r\n            );\r\n          }}\r\n        </Query>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default updatePhoneAddress;\r\n"],"mappings":"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","sourceRoot":""}